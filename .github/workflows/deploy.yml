name: デプロイ

on: [workflow_dispatch]

permissions:
  contents: write

env:
  GIT_USER_EMAIL: '41898282+github-actions[bot]@users.noreply.github.com'
  GIT_USER_NAME: 'github-actions[bot]'

jobs:
  build_for_iOS:
    name: iOS用ビルド
    runs-on: macos-latest

    steps:
        - uses: actions/checkout@v2

        - name: Install flutter
          uses: subosito/flutter-action@v2
          with:
            channel: 'stable'
            cache: true

        - name: Cache pubspec dependencies
          uses: actions/cache@v2
          with:
            path: |
              ${{ env.FLUTTER_HOME }}/.pub-cache
              **/.packages
              **/.flutter-plugins
              **/.flutter-plugin-dependencies
              **/.dart_tool/package_config.json
            key: build-pubspec-${{ hashFiles('**/pubspec.lock') }}
            restore-keys: |
              build-pubspec-

        - name: Flutter pub get
          run: flutter pub get

        # - name: Initialize git config
        #   run: |
        #     git config --local user.name $GIT_USER_NAME
        #     git config --local user.email $GIT_USER_EMAIL

        # - name: Bump up version
        #   run: |
        #     flutter pub run cider bump patch --bump-build
        #     echo "BUMP_VERSION=$(flutter pub run cider version)" >> $GITHUB_ENV

        # - name: Commit and push pubspec.yaml
        #   run: |
        #       git add -u pubspec.yaml
        #       echo "Bumped version number to $BUMP_VERSION" | git commit --file=-
        #       git push

        # - name: Create tag and release note
        #   env:
        #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #   run: |
        #     gh release create v$BUMP_VERSION --generate-notes          

        # - name: Run flutter test with coverage
        #   run: flutter test --coverage --coverage-path=~/coverage/lcov.info
          
        - name: Extract App Store Connect API Private Key in ./private_keys
          env:
              APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
              APPLE_API_AUTHKEY_P8_BASE64: ${{ secrets.APPLE_API_AUTHKEY_P8_BASE64 }}
          run: |
              mkdir ./private_keys
              echo -n "$APPLE_API_AUTHKEY_P8_BASE64" | base64 --decode --output ./private_keys/AuthKey_$APPLE_API_KEY_ID.p8

        - name: Create ipa file
          run: flutter build ipa --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons  --release --no-codesign

        - name: Fastlane release
          run: |
            cd ios
            bundle install
            fastlane release --api_key "{\"key_id\": \"${{ secrets.APPLE_API_KEY_ID }}\", \"issuer_id\": \"${{ secrets.APPLE_API_ISSUER_ID }}\", \"key_filepath\": \"../private_keys/AuthKey_$APPLE_API_KEY_ID.p8\"}"