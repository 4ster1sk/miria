// Mocks generated by Mockito 5.4.2 from annotations
// in miria/test/test_util/mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i15;
import 'dart:io' as _i21;
import 'dart:typed_data' as _i22;
import 'dart:ui' as _i17;

import 'package:dio/dio.dart' as _i23;
import 'package:dio/src/adapter.dart' as _i9;
import 'package:dio/src/cancel_token.dart' as _i24;
import 'package:dio/src/dio_mixin.dart' as _i11;
import 'package:dio/src/options.dart' as _i8;
import 'package:dio/src/response.dart' as _i12;
import 'package:dio/src/transformer.dart' as _i10;
import 'package:file_picker/file_picker.dart' as _i26;
import 'package:miria/model/account.dart' as _i16;
import 'package:miria/model/account_settings.dart' as _i2;
import 'package:miria/model/misskey_emoji_data.dart' as _i20;
import 'package:miria/model/tab_setting.dart' as _i14;
import 'package:miria/repository/account_settings_repository.dart' as _i18;
import 'package:miria/repository/emoji_repository.dart' as _i19;
import 'package:miria/repository/tab_settings_repository.dart' as _i13;
import 'package:misskey_dart/misskey_dart.dart' as _i5;
import 'package:misskey_dart/src/data/ping_response.dart' as _i7;
import 'package:misskey_dart/src/data/stats_response.dart' as _i6;
import 'package:misskey_dart/src/services/api_service.dart' as _i3;
import 'package:misskey_dart/src/services/streaming_service.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

import 'mock.dart' as _i25;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAccountSettings_0 extends _i1.SmartFake
    implements _i2.AccountSettings {
  _FakeAccountSettings_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiService_1 extends _i1.SmartFake implements _i3.ApiService {
  _FakeApiService_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamingService_2 extends _i1.SmartFake
    implements _i4.StreamingService {
  _FakeStreamingService_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotes_3 extends _i1.SmartFake implements _i5.MisskeyNotes {
  _FakeMisskeyNotes_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyChannels_4 extends _i1.SmartFake
    implements _i5.MisskeyChannels {
  _FakeMisskeyChannels_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyUsers_5 extends _i1.SmartFake implements _i5.MisskeyUsers {
  _FakeMisskeyUsers_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyI_6 extends _i1.SmartFake implements _i5.MisskeyI {
  _FakeMisskeyI_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyClips_7 extends _i1.SmartFake implements _i5.MisskeyClips {
  _FakeMisskeyClips_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyAntenna_8 extends _i1.SmartFake
    implements _i5.MisskeyAntenna {
  _FakeMisskeyAntenna_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyDrive_9 extends _i1.SmartFake implements _i5.MisskeyDrive {
  _FakeMisskeyDrive_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyFollowing_10 extends _i1.SmartFake
    implements _i5.MisskeyFollowing {
  _FakeMisskeyFollowing_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyBlocking_11 extends _i1.SmartFake
    implements _i5.MisskeyBlocking {
  _FakeMisskeyBlocking_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyMute_12 extends _i1.SmartFake implements _i5.MisskeyMute {
  _FakeMisskeyMute_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyRenoteMute_13 extends _i1.SmartFake
    implements _i5.MisskeyRenoteMute {
  _FakeMisskeyRenoteMute_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyFederation_14 extends _i1.SmartFake
    implements _i5.MisskeyFederation {
  _FakeMisskeyFederation_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyRoles_15 extends _i1.SmartFake implements _i5.MisskeyRoles {
  _FakeMisskeyRoles_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyHashtags_16 extends _i1.SmartFake
    implements _i5.MisskeyHashtags {
  _FakeMisskeyHashtags_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyAp_17 extends _i1.SmartFake implements _i5.MisskeyAp {
  _FakeMisskeyAp_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEmojisResponse_18 extends _i1.SmartFake
    implements _i5.EmojisResponse {
  _FakeEmojisResponse_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEmojiResponse_19 extends _i1.SmartFake implements _i5.EmojiResponse {
  _FakeEmojiResponse_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMetaResponse_20 extends _i1.SmartFake implements _i5.MetaResponse {
  _FakeMetaResponse_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStatsResponse_21 extends _i1.SmartFake implements _i6.StatsResponse {
  _FakeStatsResponse_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePingResponse_22 extends _i1.SmartFake implements _i7.PingResponse {
  _FakePingResponse_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeServerInfoResponse_23 extends _i1.SmartFake
    implements _i5.ServerInfoResponse {
  _FakeServerInfoResponse_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetOnlineUsersCountResponse_24 extends _i1.SmartFake
    implements _i5.GetOnlineUsersCountResponse {
  _FakeGetOnlineUsersCountResponse_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSocketController_25 extends _i1.SmartFake
    implements _i5.SocketController {
  _FakeSocketController_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotesReactions_26 extends _i1.SmartFake
    implements _i5.MisskeyNotesReactions {
  _FakeMisskeyNotesReactions_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotesFavorites_27 extends _i1.SmartFake
    implements _i5.MisskeyNotesFavorites {
  _FakeMisskeyNotesFavorites_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotesPolls_28 extends _i1.SmartFake
    implements _i5.MisskeyNotesPolls {
  _FakeMisskeyNotesPolls_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotesThreadMuting_29 extends _i1.SmartFake
    implements _i5.MisskeyNotesThreadMuting {
  _FakeMisskeyNotesThreadMuting_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNote_30 extends _i1.SmartFake implements _i5.Note {
  _FakeNote_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotesStateResponse_31 extends _i1.SmartFake
    implements _i5.NotesStateResponse {
  _FakeNotesStateResponse_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyUsersLists_32 extends _i1.SmartFake
    implements _i5.MisskeyUsersLists {
  _FakeMisskeyUsersLists_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUsersShowResponse_33 extends _i1.SmartFake
    implements _i5.UsersShowResponse {
  _FakeUsersShowResponse_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCommunityChannel_34 extends _i1.SmartFake
    implements _i5.CommunityChannel {
  _FakeCommunityChannel_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyDriveFiles_35 extends _i1.SmartFake
    implements _i5.MisskeyDriveFiles {
  _FakeMisskeyDriveFiles_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyDriveFolders_36 extends _i1.SmartFake
    implements _i5.MisskeyDriveFolders {
  _FakeMisskeyDriveFolders_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDriveFile_37 extends _i1.SmartFake implements _i5.DriveFile {
  _FakeDriveFile_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseOptions_38 extends _i1.SmartFake implements _i8.BaseOptions {
  _FakeBaseOptions_38(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_39 extends _i1.SmartFake
    implements _i9.HttpClientAdapter {
  _FakeHttpClientAdapter_39(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_40 extends _i1.SmartFake implements _i10.Transformer {
  _FakeTransformer_40(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_41 extends _i1.SmartFake implements _i11.Interceptors {
  _FakeInterceptors_41(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_42<T1> extends _i1.SmartFake implements _i12.Response<T1> {
  _FakeResponse_42(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TabSettingsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTabSettingsRepository extends _i1.Mock
    implements _i13.TabSettingsRepository {
  @override
  Iterable<_i14.TabSetting> get tabSettings => (super.noSuchMethod(
        Invocation.getter(#tabSettings),
        returnValue: <_i14.TabSetting>[],
        returnValueForMissingStub: <_i14.TabSetting>[],
      ) as Iterable<_i14.TabSetting>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i15.Future<void> load() => (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  _i15.Future<void> save(List<_i14.TabSetting>? tabSettings) =>
      (super.noSuchMethod(
        Invocation.method(
          #save,
          [tabSettings],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  _i15.Future<void> removeAccount(_i16.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #removeAccount,
          [account],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  void addListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AccountSettingsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountSettingsRepository extends _i1.Mock
    implements _i18.AccountSettingsRepository {
  @override
  Iterable<_i2.AccountSettings> get accountSettings => (super.noSuchMethod(
        Invocation.getter(#accountSettings),
        returnValue: <_i2.AccountSettings>[],
        returnValueForMissingStub: <_i2.AccountSettings>[],
      ) as Iterable<_i2.AccountSettings>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i15.Future<void> load() => (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  _i15.Future<void> save(_i2.AccountSettings? settings) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [settings],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  _i15.Future<void> removeAccount(_i16.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #removeAccount,
          [account],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  _i2.AccountSettings fromAccount(_i16.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #fromAccount,
          [account],
        ),
        returnValue: _FakeAccountSettings_0(
          this,
          Invocation.method(
            #fromAccount,
            [account],
          ),
        ),
        returnValueForMissingStub: _FakeAccountSettings_0(
          this,
          Invocation.method(
            #fromAccount,
            [account],
          ),
        ),
      ) as _i2.AccountSettings);
  @override
  void addListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [EmojiRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockEmojiRepository extends _i1.Mock implements _i19.EmojiRepository {
  @override
  set emoji(List<_i19.EmojiRepositoryData>? _emoji) => super.noSuchMethod(
        Invocation.setter(
          #emoji,
          _emoji,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i15.Future<void> loadFromSourceIfNeed() => (super.noSuchMethod(
        Invocation.method(
          #loadFromSourceIfNeed,
          [],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  _i15.Future<void> loadFromSource() => (super.noSuchMethod(
        Invocation.method(
          #loadFromSource,
          [],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  _i15.Future<void> loadFromLocalCache() => (super.noSuchMethod(
        Invocation.method(
          #loadFromLocalCache,
          [],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  _i15.Future<List<_i20.MisskeyEmojiData>> searchEmojis(
    String? name, {
    int? limit = 30,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchEmojis,
          [name],
          {#limit: limit},
        ),
        returnValue: _i15.Future<List<_i20.MisskeyEmojiData>>.value(
            <_i20.MisskeyEmojiData>[]),
        returnValueForMissingStub:
            _i15.Future<List<_i20.MisskeyEmojiData>>.value(
                <_i20.MisskeyEmojiData>[]),
      ) as _i15.Future<List<_i20.MisskeyEmojiData>>);
  @override
  List<_i20.MisskeyEmojiData> defaultEmojis({int? limit}) =>
      (super.noSuchMethod(
        Invocation.method(
          #defaultEmojis,
          [],
          {#limit: limit},
        ),
        returnValue: <_i20.MisskeyEmojiData>[],
        returnValueForMissingStub: <_i20.MisskeyEmojiData>[],
      ) as List<_i20.MisskeyEmojiData>);
}

/// A class which mocks [Misskey].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskey extends _i1.Mock implements _i5.Misskey {
  @override
  String get host => (super.noSuchMethod(
        Invocation.getter(#host),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i3.ApiService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeApiService_1(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeApiService_1(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i3.ApiService);
  @override
  set apiService(_i3.ApiService? _apiService) => super.noSuchMethod(
        Invocation.setter(
          #apiService,
          _apiService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.StreamingService get streamingService => (super.noSuchMethod(
        Invocation.getter(#streamingService),
        returnValue: _FakeStreamingService_2(
          this,
          Invocation.getter(#streamingService),
        ),
        returnValueForMissingStub: _FakeStreamingService_2(
          this,
          Invocation.getter(#streamingService),
        ),
      ) as _i4.StreamingService);
  @override
  set streamingService(_i4.StreamingService? _streamingService) =>
      super.noSuchMethod(
        Invocation.setter(
          #streamingService,
          _streamingService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.MisskeyNotes get notes => (super.noSuchMethod(
        Invocation.getter(#notes),
        returnValue: _FakeMisskeyNotes_3(
          this,
          Invocation.getter(#notes),
        ),
        returnValueForMissingStub: _FakeMisskeyNotes_3(
          this,
          Invocation.getter(#notes),
        ),
      ) as _i5.MisskeyNotes);
  @override
  set notes(_i5.MisskeyNotes? _notes) => super.noSuchMethod(
        Invocation.setter(
          #notes,
          _notes,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.MisskeyChannels get channels => (super.noSuchMethod(
        Invocation.getter(#channels),
        returnValue: _FakeMisskeyChannels_4(
          this,
          Invocation.getter(#channels),
        ),
        returnValueForMissingStub: _FakeMisskeyChannels_4(
          this,
          Invocation.getter(#channels),
        ),
      ) as _i5.MisskeyChannels);
  @override
  set channels(_i5.MisskeyChannels? _channels) => super.noSuchMethod(
        Invocation.setter(
          #channels,
          _channels,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.MisskeyUsers get users => (super.noSuchMethod(
        Invocation.getter(#users),
        returnValue: _FakeMisskeyUsers_5(
          this,
          Invocation.getter(#users),
        ),
        returnValueForMissingStub: _FakeMisskeyUsers_5(
          this,
          Invocation.getter(#users),
        ),
      ) as _i5.MisskeyUsers);
  @override
  set users(_i5.MisskeyUsers? _users) => super.noSuchMethod(
        Invocation.setter(
          #users,
          _users,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.MisskeyI get i => (super.noSuchMethod(
        Invocation.getter(#i),
        returnValue: _FakeMisskeyI_6(
          this,
          Invocation.getter(#i),
        ),
        returnValueForMissingStub: _FakeMisskeyI_6(
          this,
          Invocation.getter(#i),
        ),
      ) as _i5.MisskeyI);
  @override
  set i(_i5.MisskeyI? _i) => super.noSuchMethod(
        Invocation.setter(
          #i,
          _i,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.MisskeyClips get clips => (super.noSuchMethod(
        Invocation.getter(#clips),
        returnValue: _FakeMisskeyClips_7(
          this,
          Invocation.getter(#clips),
        ),
        returnValueForMissingStub: _FakeMisskeyClips_7(
          this,
          Invocation.getter(#clips),
        ),
      ) as _i5.MisskeyClips);
  @override
  set clips(_i5.MisskeyClips? _clips) => super.noSuchMethod(
        Invocation.setter(
          #clips,
          _clips,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.MisskeyAntenna get antennas => (super.noSuchMethod(
        Invocation.getter(#antennas),
        returnValue: _FakeMisskeyAntenna_8(
          this,
          Invocation.getter(#antennas),
        ),
        returnValueForMissingStub: _FakeMisskeyAntenna_8(
          this,
          Invocation.getter(#antennas),
        ),
      ) as _i5.MisskeyAntenna);
  @override
  set antennas(_i5.MisskeyAntenna? _antennas) => super.noSuchMethod(
        Invocation.setter(
          #antennas,
          _antennas,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.MisskeyDrive get drive => (super.noSuchMethod(
        Invocation.getter(#drive),
        returnValue: _FakeMisskeyDrive_9(
          this,
          Invocation.getter(#drive),
        ),
        returnValueForMissingStub: _FakeMisskeyDrive_9(
          this,
          Invocation.getter(#drive),
        ),
      ) as _i5.MisskeyDrive);
  @override
  set drive(_i5.MisskeyDrive? _drive) => super.noSuchMethod(
        Invocation.setter(
          #drive,
          _drive,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.MisskeyFollowing get following => (super.noSuchMethod(
        Invocation.getter(#following),
        returnValue: _FakeMisskeyFollowing_10(
          this,
          Invocation.getter(#following),
        ),
        returnValueForMissingStub: _FakeMisskeyFollowing_10(
          this,
          Invocation.getter(#following),
        ),
      ) as _i5.MisskeyFollowing);
  @override
  set following(_i5.MisskeyFollowing? _following) => super.noSuchMethod(
        Invocation.setter(
          #following,
          _following,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.MisskeyBlocking get blocking => (super.noSuchMethod(
        Invocation.getter(#blocking),
        returnValue: _FakeMisskeyBlocking_11(
          this,
          Invocation.getter(#blocking),
        ),
        returnValueForMissingStub: _FakeMisskeyBlocking_11(
          this,
          Invocation.getter(#blocking),
        ),
      ) as _i5.MisskeyBlocking);
  @override
  set blocking(_i5.MisskeyBlocking? _blocking) => super.noSuchMethod(
        Invocation.setter(
          #blocking,
          _blocking,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.MisskeyMute get mute => (super.noSuchMethod(
        Invocation.getter(#mute),
        returnValue: _FakeMisskeyMute_12(
          this,
          Invocation.getter(#mute),
        ),
        returnValueForMissingStub: _FakeMisskeyMute_12(
          this,
          Invocation.getter(#mute),
        ),
      ) as _i5.MisskeyMute);
  @override
  set mute(_i5.MisskeyMute? _mute) => super.noSuchMethod(
        Invocation.setter(
          #mute,
          _mute,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.MisskeyRenoteMute get renoteMute => (super.noSuchMethod(
        Invocation.getter(#renoteMute),
        returnValue: _FakeMisskeyRenoteMute_13(
          this,
          Invocation.getter(#renoteMute),
        ),
        returnValueForMissingStub: _FakeMisskeyRenoteMute_13(
          this,
          Invocation.getter(#renoteMute),
        ),
      ) as _i5.MisskeyRenoteMute);
  @override
  set renoteMute(_i5.MisskeyRenoteMute? _renoteMute) => super.noSuchMethod(
        Invocation.setter(
          #renoteMute,
          _renoteMute,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.MisskeyFederation get federation => (super.noSuchMethod(
        Invocation.getter(#federation),
        returnValue: _FakeMisskeyFederation_14(
          this,
          Invocation.getter(#federation),
        ),
        returnValueForMissingStub: _FakeMisskeyFederation_14(
          this,
          Invocation.getter(#federation),
        ),
      ) as _i5.MisskeyFederation);
  @override
  set federation(_i5.MisskeyFederation? _federation) => super.noSuchMethod(
        Invocation.setter(
          #federation,
          _federation,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.MisskeyRoles get roles => (super.noSuchMethod(
        Invocation.getter(#roles),
        returnValue: _FakeMisskeyRoles_15(
          this,
          Invocation.getter(#roles),
        ),
        returnValueForMissingStub: _FakeMisskeyRoles_15(
          this,
          Invocation.getter(#roles),
        ),
      ) as _i5.MisskeyRoles);
  @override
  set roles(_i5.MisskeyRoles? _roles) => super.noSuchMethod(
        Invocation.setter(
          #roles,
          _roles,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.MisskeyHashtags get hashtags => (super.noSuchMethod(
        Invocation.getter(#hashtags),
        returnValue: _FakeMisskeyHashtags_16(
          this,
          Invocation.getter(#hashtags),
        ),
        returnValueForMissingStub: _FakeMisskeyHashtags_16(
          this,
          Invocation.getter(#hashtags),
        ),
      ) as _i5.MisskeyHashtags);
  @override
  set hashtags(_i5.MisskeyHashtags? _hashtags) => super.noSuchMethod(
        Invocation.setter(
          #hashtags,
          _hashtags,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.MisskeyAp get ap => (super.noSuchMethod(
        Invocation.getter(#ap),
        returnValue: _FakeMisskeyAp_17(
          this,
          Invocation.getter(#ap),
        ),
        returnValueForMissingStub: _FakeMisskeyAp_17(
          this,
          Invocation.getter(#ap),
        ),
      ) as _i5.MisskeyAp);
  @override
  set ap(_i5.MisskeyAp? _ap) => super.noSuchMethod(
        Invocation.setter(
          #ap,
          _ap,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i15.Future<Iterable<_i5.AnnouncementsResponse>> announcements(
          _i5.AnnouncementsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #announcements,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.AnnouncementsResponse>>.value(
            <_i5.AnnouncementsResponse>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.AnnouncementsResponse>>.value(
                <_i5.AnnouncementsResponse>[]),
      ) as _i15.Future<Iterable<_i5.AnnouncementsResponse>>);
  @override
  _i15.Future<List<String>> endpoints() => (super.noSuchMethod(
        Invocation.method(
          #endpoints,
          [],
        ),
        returnValue: _i15.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i15.Future<List<String>>.value(<String>[]),
      ) as _i15.Future<List<String>>);
  @override
  _i15.Future<_i5.EmojisResponse> emojis() => (super.noSuchMethod(
        Invocation.method(
          #emojis,
          [],
        ),
        returnValue:
            _i15.Future<_i5.EmojisResponse>.value(_FakeEmojisResponse_18(
          this,
          Invocation.method(
            #emojis,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i5.EmojisResponse>.value(_FakeEmojisResponse_18(
          this,
          Invocation.method(
            #emojis,
            [],
          ),
        )),
      ) as _i15.Future<_i5.EmojisResponse>);
  @override
  _i15.Future<_i5.EmojiResponse> emoji(_i5.EmojiRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #emoji,
          [request],
        ),
        returnValue: _i15.Future<_i5.EmojiResponse>.value(_FakeEmojiResponse_19(
          this,
          Invocation.method(
            #emoji,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i5.EmojiResponse>.value(_FakeEmojiResponse_19(
          this,
          Invocation.method(
            #emoji,
            [request],
          ),
        )),
      ) as _i15.Future<_i5.EmojiResponse>);
  @override
  _i15.Future<_i5.MetaResponse> meta() => (super.noSuchMethod(
        Invocation.method(
          #meta,
          [],
        ),
        returnValue: _i15.Future<_i5.MetaResponse>.value(_FakeMetaResponse_20(
          this,
          Invocation.method(
            #meta,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i5.MetaResponse>.value(_FakeMetaResponse_20(
          this,
          Invocation.method(
            #meta,
            [],
          ),
        )),
      ) as _i15.Future<_i5.MetaResponse>);
  @override
  _i15.Future<_i6.StatsResponse> stats() => (super.noSuchMethod(
        Invocation.method(
          #stats,
          [],
        ),
        returnValue: _i15.Future<_i6.StatsResponse>.value(_FakeStatsResponse_21(
          this,
          Invocation.method(
            #stats,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i6.StatsResponse>.value(_FakeStatsResponse_21(
          this,
          Invocation.method(
            #stats,
            [],
          ),
        )),
      ) as _i15.Future<_i6.StatsResponse>);
  @override
  _i15.Future<_i7.PingResponse> ping() => (super.noSuchMethod(
        Invocation.method(
          #ping,
          [],
        ),
        returnValue: _i15.Future<_i7.PingResponse>.value(_FakePingResponse_22(
          this,
          Invocation.method(
            #ping,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i7.PingResponse>.value(_FakePingResponse_22(
          this,
          Invocation.method(
            #ping,
            [],
          ),
        )),
      ) as _i15.Future<_i7.PingResponse>);
  @override
  _i15.Future<_i5.ServerInfoResponse> serverInfo() => (super.noSuchMethod(
        Invocation.method(
          #serverInfo,
          [],
        ),
        returnValue: _i15.Future<_i5.ServerInfoResponse>.value(
            _FakeServerInfoResponse_23(
          this,
          Invocation.method(
            #serverInfo,
            [],
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i5.ServerInfoResponse>.value(
            _FakeServerInfoResponse_23(
          this,
          Invocation.method(
            #serverInfo,
            [],
          ),
        )),
      ) as _i15.Future<_i5.ServerInfoResponse>);
  @override
  _i15.Future<_i5.GetOnlineUsersCountResponse> getOnlineUsersCount() =>
      (super.noSuchMethod(
        Invocation.method(
          #getOnlineUsersCount,
          [],
        ),
        returnValue: _i15.Future<_i5.GetOnlineUsersCountResponse>.value(
            _FakeGetOnlineUsersCountResponse_24(
          this,
          Invocation.method(
            #getOnlineUsersCount,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i5.GetOnlineUsersCountResponse>.value(
                _FakeGetOnlineUsersCountResponse_24(
          this,
          Invocation.method(
            #getOnlineUsersCount,
            [],
          ),
        )),
      ) as _i15.Future<_i5.GetOnlineUsersCountResponse>);
  @override
  _i15.Future<Iterable<_i5.User>> pinnedUsers() => (super.noSuchMethod(
        Invocation.method(
          #pinnedUsers,
          [],
        ),
        returnValue: _i15.Future<Iterable<_i5.User>>.value(<_i5.User>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.User>>.value(<_i5.User>[]),
      ) as _i15.Future<Iterable<_i5.User>>);
  @override
  _i5.SocketController homeTimelineStream({
    String? id,
    _i15.FutureOr<void> Function(_i5.Note)? onNoteReceived,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onReacted,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onUnreacted,
    _i15.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineVoted,
    )? onVoted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #homeTimelineStream,
          [],
          {
            #id: id,
            #onNoteReceived: onNoteReceived,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
          },
        ),
        returnValue: _FakeSocketController_25(
          this,
          Invocation.method(
            #homeTimelineStream,
            [],
            {
              #id: id,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_25(
          this,
          Invocation.method(
            #homeTimelineStream,
            [],
            {
              #id: id,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
      ) as _i5.SocketController);
  @override
  _i5.SocketController localTimelineStream({
    String? id,
    _i15.FutureOr<void> Function(_i5.Note)? onNoteReceived,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onReacted,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onUnreacted,
    _i15.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineVoted,
    )? onVoted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #localTimelineStream,
          [],
          {
            #id: id,
            #onNoteReceived: onNoteReceived,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
          },
        ),
        returnValue: _FakeSocketController_25(
          this,
          Invocation.method(
            #localTimelineStream,
            [],
            {
              #id: id,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_25(
          this,
          Invocation.method(
            #localTimelineStream,
            [],
            {
              #id: id,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
      ) as _i5.SocketController);
  @override
  _i5.SocketController globalTimelineStream({
    String? id,
    _i15.FutureOr<void> Function(_i5.Note)? onNoteReceived,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onReacted,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onUnreacted,
    _i15.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineVoted,
    )? onVoted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #globalTimelineStream,
          [],
          {
            #id: id,
            #onNoteReceived: onNoteReceived,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
          },
        ),
        returnValue: _FakeSocketController_25(
          this,
          Invocation.method(
            #globalTimelineStream,
            [],
            {
              #id: id,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_25(
          this,
          Invocation.method(
            #globalTimelineStream,
            [],
            {
              #id: id,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
      ) as _i5.SocketController);
  @override
  _i5.SocketController hybridTimelineStream({
    String? id,
    _i15.FutureOr<void> Function(_i5.Note)? onNoteReceived,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onReacted,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onUnreacted,
    _i15.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineVoted,
    )? onVoted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #hybridTimelineStream,
          [],
          {
            #id: id,
            #onNoteReceived: onNoteReceived,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
          },
        ),
        returnValue: _FakeSocketController_25(
          this,
          Invocation.method(
            #hybridTimelineStream,
            [],
            {
              #id: id,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_25(
          this,
          Invocation.method(
            #hybridTimelineStream,
            [],
            {
              #id: id,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
      ) as _i5.SocketController);
  @override
  _i5.SocketController channelStream({
    required String? channelId,
    String? id,
    _i15.FutureOr<void> Function(_i5.Note)? onNoteReceived,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onReacted,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onUnreacted,
    _i15.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineVoted,
    )? onVoted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #channelStream,
          [],
          {
            #channelId: channelId,
            #id: id,
            #onNoteReceived: onNoteReceived,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
          },
        ),
        returnValue: _FakeSocketController_25(
          this,
          Invocation.method(
            #channelStream,
            [],
            {
              #channelId: channelId,
              #id: id,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_25(
          this,
          Invocation.method(
            #channelStream,
            [],
            {
              #channelId: channelId,
              #id: id,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
      ) as _i5.SocketController);
  @override
  _i5.SocketController userListStream({
    required String? listId,
    String? id,
    _i15.FutureOr<void> Function(_i5.Note)? onNoteReceived,
    _i15.FutureOr<void> Function(_i5.User)? onUserAdded,
    _i15.FutureOr<void> Function(_i5.User)? onUserRemoved,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onReacted,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onUnreacted,
    _i15.FutureOr<void> Function(DateTime)? onDeleted,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineVoted,
    )? onVoted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #userListStream,
          [],
          {
            #listId: listId,
            #id: id,
            #onNoteReceived: onNoteReceived,
            #onUserAdded: onUserAdded,
            #onUserRemoved: onUserRemoved,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
          },
        ),
        returnValue: _FakeSocketController_25(
          this,
          Invocation.method(
            #userListStream,
            [],
            {
              #listId: listId,
              #id: id,
              #onNoteReceived: onNoteReceived,
              #onUserAdded: onUserAdded,
              #onUserRemoved: onUserRemoved,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_25(
          this,
          Invocation.method(
            #userListStream,
            [],
            {
              #listId: listId,
              #id: id,
              #onNoteReceived: onNoteReceived,
              #onUserAdded: onUserAdded,
              #onUserRemoved: onUserRemoved,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
      ) as _i5.SocketController);
  @override
  _i5.SocketController antennaStream({
    required String? antennaId,
    String? id,
    _i15.FutureOr<void> Function(_i5.Note)? onNoteReceived,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onReacted,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onUnreacted,
    _i15.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i15.FutureOr<void> Function(
      String,
      _i5.TimelineVoted,
    )? onVoted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #antennaStream,
          [],
          {
            #antennaId: antennaId,
            #id: id,
            #onNoteReceived: onNoteReceived,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
          },
        ),
        returnValue: _FakeSocketController_25(
          this,
          Invocation.method(
            #antennaStream,
            [],
            {
              #antennaId: antennaId,
              #id: id,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_25(
          this,
          Invocation.method(
            #antennaStream,
            [],
            {
              #antennaId: antennaId,
              #id: id,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
      ) as _i5.SocketController);
  @override
  _i5.SocketController serverStatsLogStream(
    _i15.FutureOr<void> Function(List<_i5.StatsLogResponse>)? onLogReceived,
    _i15.FutureOr<void> Function(_i5.StatsLogResponse)? onEventReceived,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #serverStatsLogStream,
          [
            onLogReceived,
            onEventReceived,
          ],
        ),
        returnValue: _FakeSocketController_25(
          this,
          Invocation.method(
            #serverStatsLogStream,
            [
              onLogReceived,
              onEventReceived,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_25(
          this,
          Invocation.method(
            #serverStatsLogStream,
            [
              onLogReceived,
              onEventReceived,
            ],
          ),
        ),
      ) as _i5.SocketController);
  @override
  _i5.SocketController queueStatsLogStream(
    _i15.FutureOr<void> Function(List<_i5.QueueStatsLogResponse>)?
        onLogReceived,
    _i15.FutureOr<void> Function(_i5.QueueStatsLogResponse)? onEventReceived,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #queueStatsLogStream,
          [
            onLogReceived,
            onEventReceived,
          ],
        ),
        returnValue: _FakeSocketController_25(
          this,
          Invocation.method(
            #queueStatsLogStream,
            [
              onLogReceived,
              onEventReceived,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_25(
          this,
          Invocation.method(
            #queueStatsLogStream,
            [
              onLogReceived,
              onEventReceived,
            ],
          ),
        ),
      ) as _i5.SocketController);
  @override
  _i5.SocketController mainStream({
    _i15.FutureOr<void> Function(_i5.Emoji)? onEmojiAdded,
    _i15.FutureOr<void> Function(Iterable<_i5.Emoji>)? onEmojiUpdated,
    _i15.FutureOr<void> Function(Iterable<_i5.Emoji>)? onEmojiDeleted,
    _i15.FutureOr<void> Function(_i5.INotificationsResponse)? onNotification,
    _i15.FutureOr<void> Function(_i5.Note)? onMention,
    _i15.FutureOr<void> Function(_i5.Note)? onReply,
    _i15.FutureOr<void> Function(_i5.Note)? onRenote,
    _i15.FutureOr<void> Function(_i5.User)? onFollow,
    _i15.FutureOr<void> Function(_i5.User)? onFollowed,
    _i15.FutureOr<void> Function(_i5.User)? onUnfollow,
    _i15.FutureOr<void> Function(_i5.User)? onMeUpdated,
    _i15.FutureOr<void> Function()? onReadAllNotifications,
    _i15.FutureOr<void> Function(_i5.INotificationsResponse)?
        onUnreadNotification,
    _i15.FutureOr<void> Function(String)? onUnreadMention,
    _i15.FutureOr<void> Function()? onReadAllUnreadMentions,
    _i15.FutureOr<void> Function(String)? onUnreadSpecifiedNote,
    _i15.FutureOr<void> Function()? onReadAllUnreadSpecifiedNotes,
    _i15.FutureOr<void> Function(_i5.User)? onReceiveFollowRequest,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #mainStream,
          [],
          {
            #onEmojiAdded: onEmojiAdded,
            #onEmojiUpdated: onEmojiUpdated,
            #onEmojiDeleted: onEmojiDeleted,
            #onNotification: onNotification,
            #onMention: onMention,
            #onReply: onReply,
            #onRenote: onRenote,
            #onFollow: onFollow,
            #onFollowed: onFollowed,
            #onUnfollow: onUnfollow,
            #onMeUpdated: onMeUpdated,
            #onReadAllNotifications: onReadAllNotifications,
            #onUnreadNotification: onUnreadNotification,
            #onUnreadMention: onUnreadMention,
            #onReadAllUnreadMentions: onReadAllUnreadMentions,
            #onUnreadSpecifiedNote: onUnreadSpecifiedNote,
            #onReadAllUnreadSpecifiedNotes: onReadAllUnreadSpecifiedNotes,
            #onReceiveFollowRequest: onReceiveFollowRequest,
          },
        ),
        returnValue: _FakeSocketController_25(
          this,
          Invocation.method(
            #mainStream,
            [],
            {
              #onEmojiAdded: onEmojiAdded,
              #onEmojiUpdated: onEmojiUpdated,
              #onEmojiDeleted: onEmojiDeleted,
              #onNotification: onNotification,
              #onMention: onMention,
              #onReply: onReply,
              #onRenote: onRenote,
              #onFollow: onFollow,
              #onFollowed: onFollowed,
              #onUnfollow: onUnfollow,
              #onMeUpdated: onMeUpdated,
              #onReadAllNotifications: onReadAllNotifications,
              #onUnreadNotification: onUnreadNotification,
              #onUnreadMention: onUnreadMention,
              #onReadAllUnreadMentions: onReadAllUnreadMentions,
              #onUnreadSpecifiedNote: onUnreadSpecifiedNote,
              #onReadAllUnreadSpecifiedNotes: onReadAllUnreadSpecifiedNotes,
              #onReceiveFollowRequest: onReceiveFollowRequest,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_25(
          this,
          Invocation.method(
            #mainStream,
            [],
            {
              #onEmojiAdded: onEmojiAdded,
              #onEmojiUpdated: onEmojiUpdated,
              #onEmojiDeleted: onEmojiDeleted,
              #onNotification: onNotification,
              #onMention: onMention,
              #onReply: onReply,
              #onRenote: onRenote,
              #onFollow: onFollow,
              #onFollowed: onFollowed,
              #onUnfollow: onUnfollow,
              #onMeUpdated: onMeUpdated,
              #onReadAllNotifications: onReadAllNotifications,
              #onUnreadNotification: onUnreadNotification,
              #onUnreadMention: onUnreadMention,
              #onReadAllUnreadMentions: onReadAllUnreadMentions,
              #onUnreadSpecifiedNote: onUnreadSpecifiedNote,
              #onReadAllUnreadSpecifiedNotes: onReadAllUnreadSpecifiedNotes,
              #onReceiveFollowRequest: onReceiveFollowRequest,
            },
          ),
        ),
      ) as _i5.SocketController);
  @override
  _i15.Future<void> startStreaming() => (super.noSuchMethod(
        Invocation.method(
          #startStreaming,
          [],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
}

/// A class which mocks [MisskeyNotes].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyNotes extends _i1.Mock implements _i5.MisskeyNotes {
  @override
  _i5.MisskeyNotesReactions get reactions => (super.noSuchMethod(
        Invocation.getter(#reactions),
        returnValue: _FakeMisskeyNotesReactions_26(
          this,
          Invocation.getter(#reactions),
        ),
        returnValueForMissingStub: _FakeMisskeyNotesReactions_26(
          this,
          Invocation.getter(#reactions),
        ),
      ) as _i5.MisskeyNotesReactions);
  @override
  _i5.MisskeyNotesFavorites get favorites => (super.noSuchMethod(
        Invocation.getter(#favorites),
        returnValue: _FakeMisskeyNotesFavorites_27(
          this,
          Invocation.getter(#favorites),
        ),
        returnValueForMissingStub: _FakeMisskeyNotesFavorites_27(
          this,
          Invocation.getter(#favorites),
        ),
      ) as _i5.MisskeyNotesFavorites);
  @override
  _i5.MisskeyNotesPolls get polls => (super.noSuchMethod(
        Invocation.getter(#polls),
        returnValue: _FakeMisskeyNotesPolls_28(
          this,
          Invocation.getter(#polls),
        ),
        returnValueForMissingStub: _FakeMisskeyNotesPolls_28(
          this,
          Invocation.getter(#polls),
        ),
      ) as _i5.MisskeyNotesPolls);
  @override
  _i5.MisskeyNotesThreadMuting get threadMuting => (super.noSuchMethod(
        Invocation.getter(#threadMuting),
        returnValue: _FakeMisskeyNotesThreadMuting_29(
          this,
          Invocation.getter(#threadMuting),
        ),
        returnValueForMissingStub: _FakeMisskeyNotesThreadMuting_29(
          this,
          Invocation.getter(#threadMuting),
        ),
      ) as _i5.MisskeyNotesThreadMuting);
  @override
  _i15.Future<void> create(_i5.NotesCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  _i15.Future<void> delete(_i5.NotesDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  _i15.Future<Iterable<_i5.Note>> notes(_i5.NotesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #notes,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i15.Future<Iterable<_i5.Note>>);
  @override
  _i15.Future<_i5.Note> show(_i5.NotesShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue: _i15.Future<_i5.Note>.value(_FakeNote_30(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i5.Note>.value(_FakeNote_30(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i15.Future<_i5.Note>);
  @override
  _i15.Future<Iterable<_i5.Note>> homeTimeline(
          _i5.NotesTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #homeTimeline,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i15.Future<Iterable<_i5.Note>>);
  @override
  _i15.Future<Iterable<_i5.Note>> localTimeline(
          _i5.NotesLocalTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #localTimeline,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i15.Future<Iterable<_i5.Note>>);
  @override
  _i15.Future<Iterable<_i5.Note>> hybridTimeline(
          _i5.NotesHybridTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #hybridTimeline,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i15.Future<Iterable<_i5.Note>>);
  @override
  _i15.Future<Iterable<_i5.Note>> globalTimeline(
          _i5.NotesGlobalTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #globalTimeline,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i15.Future<Iterable<_i5.Note>>);
  @override
  _i15.Future<Iterable<_i5.Note>> userListTimeline(
          _i5.UserListTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #userListTimeline,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i15.Future<Iterable<_i5.Note>>);
  @override
  _i15.Future<_i5.NotesStateResponse> state(_i5.NotesStateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #state,
          [request],
        ),
        returnValue: _i15.Future<_i5.NotesStateResponse>.value(
            _FakeNotesStateResponse_31(
          this,
          Invocation.method(
            #state,
            [request],
          ),
        )),
        returnValueForMissingStub: _i15.Future<_i5.NotesStateResponse>.value(
            _FakeNotesStateResponse_31(
          this,
          Invocation.method(
            #state,
            [request],
          ),
        )),
      ) as _i15.Future<_i5.NotesStateResponse>);
  @override
  _i15.Future<Iterable<_i5.Note>> search(_i5.NotesSearchRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i15.Future<Iterable<_i5.Note>>);
  @override
  _i15.Future<Iterable<_i5.Note>> searchByTag(
          _i5.NotesSearchByTagRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchByTag,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i15.Future<Iterable<_i5.Note>>);
  @override
  _i15.Future<Iterable<_i5.Note>> renotes(_i5.NotesRenoteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #renotes,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i15.Future<Iterable<_i5.Note>>);
  @override
  _i15.Future<Iterable<_i5.Note>> replies(_i5.NotesRepliesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #replies,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i15.Future<Iterable<_i5.Note>>);
  @override
  _i15.Future<Iterable<_i5.Note>> children(_i5.NotesChildrenRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #children,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i15.Future<Iterable<_i5.Note>>);
  @override
  _i15.Future<Iterable<_i5.Note>> conversation(
          _i5.NotesConversationRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #conversation,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i15.Future<Iterable<_i5.Note>>);
  @override
  _i15.Future<Iterable<_i5.Note>> featured(_i5.NotesFeaturedRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #featured,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i15.Future<Iterable<_i5.Note>>);
  @override
  _i15.Future<Iterable<_i5.Note>> mentions(_i5.NotesMentionsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #mentions,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i15.Future<Iterable<_i5.Note>>);
  @override
  _i15.Future<Iterable<_i5.Clip>> clips(_i5.NotesClipsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #clips,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.Clip>>.value(<_i5.Clip>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.Clip>>.value(<_i5.Clip>[]),
      ) as _i15.Future<Iterable<_i5.Clip>>);
  @override
  _i15.Future<void> unrenote(_i5.NotesUnrenoteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #unrenote,
          [request],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
}

/// A class which mocks [MisskeyNotesFavorites].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyNotesFavorites extends _i1.Mock
    implements _i5.MisskeyNotesFavorites {
  @override
  _i15.Future<void> create(_i5.NotesFavoritesCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  _i15.Future<void> delete(_i5.NotesFavoritesDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
}

/// A class which mocks [MisskeyUsers].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyUsers extends _i1.Mock implements _i5.MisskeyUsers {
  @override
  _i5.MisskeyUsersLists get list => (super.noSuchMethod(
        Invocation.getter(#list),
        returnValue: _FakeMisskeyUsersLists_32(
          this,
          Invocation.getter(#list),
        ),
        returnValueForMissingStub: _FakeMisskeyUsersLists_32(
          this,
          Invocation.getter(#list),
        ),
      ) as _i5.MisskeyUsersLists);
  @override
  _i15.Future<_i5.UsersShowResponse> show(_i5.UsersShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue:
            _i15.Future<_i5.UsersShowResponse>.value(_FakeUsersShowResponse_33(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i5.UsersShowResponse>.value(_FakeUsersShowResponse_33(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i15.Future<_i5.UsersShowResponse>);
  @override
  _i15.Future<Iterable<_i5.UsersShowResponse>> showByIds(
          _i5.UsersShowByIdsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #showByIds,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.UsersShowResponse>>.value(
            <_i5.UsersShowResponse>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.UsersShowResponse>>.value(
                <_i5.UsersShowResponse>[]),
      ) as _i15.Future<Iterable<_i5.UsersShowResponse>>);
  @override
  _i15.Future<_i5.UsersShowResponse> showByName(
          _i5.UsersShowByUserNameRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #showByName,
          [request],
        ),
        returnValue:
            _i15.Future<_i5.UsersShowResponse>.value(_FakeUsersShowResponse_33(
          this,
          Invocation.method(
            #showByName,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i5.UsersShowResponse>.value(_FakeUsersShowResponse_33(
          this,
          Invocation.method(
            #showByName,
            [request],
          ),
        )),
      ) as _i15.Future<_i5.UsersShowResponse>);
  @override
  _i15.Future<Iterable<_i5.Note>> notes(_i5.UsersNotesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #notes,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i15.Future<Iterable<_i5.Note>>);
  @override
  _i15.Future<Iterable<_i5.Clip>> clips(_i5.UsersClipsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #clips,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.Clip>>.value(<_i5.Clip>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.Clip>>.value(<_i5.Clip>[]),
      ) as _i15.Future<Iterable<_i5.Clip>>);
  @override
  _i15.Future<Iterable<_i5.Following>> followers(
          _i5.UsersFollowersRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #followers,
          [request],
        ),
        returnValue:
            _i15.Future<Iterable<_i5.Following>>.value(<_i5.Following>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.Following>>.value(<_i5.Following>[]),
      ) as _i15.Future<Iterable<_i5.Following>>);
  @override
  _i15.Future<Iterable<_i5.Following>> following(
          _i5.UsersFollowingRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #following,
          [request],
        ),
        returnValue:
            _i15.Future<Iterable<_i5.Following>>.value(<_i5.Following>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.Following>>.value(<_i5.Following>[]),
      ) as _i15.Future<Iterable<_i5.Following>>);
  @override
  _i15.Future<void> reportAbuse(_i5.UsersReportAbuseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #reportAbuse,
          [request],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  _i15.Future<Iterable<_i5.UsersReactionsResponse>> reactions(
          _i5.UsersReactionsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #reactions,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.UsersReactionsResponse>>.value(
            <_i5.UsersReactionsResponse>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.UsersReactionsResponse>>.value(
                <_i5.UsersReactionsResponse>[]),
      ) as _i15.Future<Iterable<_i5.UsersReactionsResponse>>);
  @override
  _i15.Future<Iterable<_i5.User>> search(_i5.UsersSearchRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.User>>.value(<_i5.User>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.User>>.value(<_i5.User>[]),
      ) as _i15.Future<Iterable<_i5.User>>);
  @override
  _i15.Future<Iterable<_i5.User>> recommendation(
          _i5.UsersRecommendationRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #recommendation,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.User>>.value(<_i5.User>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.User>>.value(<_i5.User>[]),
      ) as _i15.Future<Iterable<_i5.User>>);
  @override
  _i15.Future<Iterable<_i5.User>> users(_i5.UsersUsersRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #users,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.User>>.value(<_i5.User>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.User>>.value(<_i5.User>[]),
      ) as _i15.Future<Iterable<_i5.User>>);
  @override
  _i15.Future<void> updateMemo(_i5.UsersUpdateMemoRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMemo,
          [request],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
}

/// A class which mocks [MisskeyChannels].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyChannels extends _i1.Mock implements _i5.MisskeyChannels {
  @override
  _i15.Future<Iterable<_i5.Note>> timeline(
          _i5.ChannelsTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #timeline,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i15.Future<Iterable<_i5.Note>>);
  @override
  _i15.Future<_i5.CommunityChannel> show(_i5.ChannelsShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue:
            _i15.Future<_i5.CommunityChannel>.value(_FakeCommunityChannel_34(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i5.CommunityChannel>.value(_FakeCommunityChannel_34(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i15.Future<_i5.CommunityChannel>);
  @override
  _i15.Future<Iterable<_i5.CommunityChannel>> followed(
          _i5.ChannelsFollowedRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #followed,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.CommunityChannel>>.value(
            <_i5.CommunityChannel>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.CommunityChannel>>.value(
                <_i5.CommunityChannel>[]),
      ) as _i15.Future<Iterable<_i5.CommunityChannel>>);
  @override
  _i15.Future<Iterable<_i5.CommunityChannel>> myFavorite(
          _i5.ChannelsMyFavoriteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #myFavorite,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.CommunityChannel>>.value(
            <_i5.CommunityChannel>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.CommunityChannel>>.value(
                <_i5.CommunityChannel>[]),
      ) as _i15.Future<Iterable<_i5.CommunityChannel>>);
  @override
  _i15.Future<Iterable<_i5.CommunityChannel>> featured() => (super.noSuchMethod(
        Invocation.method(
          #featured,
          [],
        ),
        returnValue: _i15.Future<Iterable<_i5.CommunityChannel>>.value(
            <_i5.CommunityChannel>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.CommunityChannel>>.value(
                <_i5.CommunityChannel>[]),
      ) as _i15.Future<Iterable<_i5.CommunityChannel>>);
  @override
  _i15.Future<Iterable<_i5.CommunityChannel>> owned(
          _i5.ChannelsOwnedRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #owned,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.CommunityChannel>>.value(
            <_i5.CommunityChannel>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.CommunityChannel>>.value(
                <_i5.CommunityChannel>[]),
      ) as _i15.Future<Iterable<_i5.CommunityChannel>>);
  @override
  _i15.Future<Iterable<_i5.CommunityChannel>> search(
          _i5.ChannelsSearchRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [request],
        ),
        returnValue: _i15.Future<Iterable<_i5.CommunityChannel>>.value(
            <_i5.CommunityChannel>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.CommunityChannel>>.value(
                <_i5.CommunityChannel>[]),
      ) as _i15.Future<Iterable<_i5.CommunityChannel>>);
  @override
  _i15.Future<_i5.CommunityChannel> create(
          _i5.ChannelsCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue:
            _i15.Future<_i5.CommunityChannel>.value(_FakeCommunityChannel_34(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i5.CommunityChannel>.value(_FakeCommunityChannel_34(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
      ) as _i15.Future<_i5.CommunityChannel>);
  @override
  _i15.Future<void> update(_i5.ChannelsUpdateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [request],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  _i15.Future<void> favorite(_i5.ChannelsFavoriteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #favorite,
          [request],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  _i15.Future<void> unfavorite(_i5.ChannelsUnfavoriteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #unfavorite,
          [request],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  _i15.Future<void> follow(_i5.ChannelsFollowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #follow,
          [request],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  _i15.Future<void> unfollow(_i5.ChannelsUnfollowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #unfollow,
          [request],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
}

/// A class which mocks [MisskeyDrive].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyDrive extends _i1.Mock implements _i5.MisskeyDrive {
  @override
  _i5.MisskeyDriveFiles get files => (super.noSuchMethod(
        Invocation.getter(#files),
        returnValue: _FakeMisskeyDriveFiles_35(
          this,
          Invocation.getter(#files),
        ),
        returnValueForMissingStub: _FakeMisskeyDriveFiles_35(
          this,
          Invocation.getter(#files),
        ),
      ) as _i5.MisskeyDriveFiles);
  @override
  _i5.MisskeyDriveFolders get folders => (super.noSuchMethod(
        Invocation.getter(#folders),
        returnValue: _FakeMisskeyDriveFolders_36(
          this,
          Invocation.getter(#folders),
        ),
        returnValueForMissingStub: _FakeMisskeyDriveFolders_36(
          this,
          Invocation.getter(#folders),
        ),
      ) as _i5.MisskeyDriveFolders);
}

/// A class which mocks [MisskeyDriveFolders].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyDriveFolders extends _i1.Mock
    implements _i5.MisskeyDriveFolders {
  @override
  _i15.Future<Iterable<_i5.DriveFolder>> folders(
          _i5.DriveFoldersRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #folders,
          [request],
        ),
        returnValue:
            _i15.Future<Iterable<_i5.DriveFolder>>.value(<_i5.DriveFolder>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.DriveFolder>>.value(<_i5.DriveFolder>[]),
      ) as _i15.Future<Iterable<_i5.DriveFolder>>);
}

/// A class which mocks [MisskeyDriveFiles].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyDriveFiles extends _i1.Mock implements _i5.MisskeyDriveFiles {
  @override
  _i15.Future<_i5.DriveFile> create(
    _i5.DriveFilesCreateRequest? request,
    _i21.File? fileContent,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [
            request,
            fileContent,
          ],
        ),
        returnValue: _i15.Future<_i5.DriveFile>.value(_FakeDriveFile_37(
          this,
          Invocation.method(
            #create,
            [
              request,
              fileContent,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i5.DriveFile>.value(_FakeDriveFile_37(
          this,
          Invocation.method(
            #create,
            [
              request,
              fileContent,
            ],
          ),
        )),
      ) as _i15.Future<_i5.DriveFile>);
  @override
  _i15.Future<_i5.DriveFile> createAsBinary(
    _i5.DriveFilesCreateRequest? request,
    _i22.Uint8List? fileContent,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAsBinary,
          [
            request,
            fileContent,
          ],
        ),
        returnValue: _i15.Future<_i5.DriveFile>.value(_FakeDriveFile_37(
          this,
          Invocation.method(
            #createAsBinary,
            [
              request,
              fileContent,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i5.DriveFile>.value(_FakeDriveFile_37(
          this,
          Invocation.method(
            #createAsBinary,
            [
              request,
              fileContent,
            ],
          ),
        )),
      ) as _i15.Future<_i5.DriveFile>);
  @override
  _i15.Future<_i5.DriveFile> update(_i5.DriveFilesUpdateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [request],
        ),
        returnValue: _i15.Future<_i5.DriveFile>.value(_FakeDriveFile_37(
          this,
          Invocation.method(
            #update,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i5.DriveFile>.value(_FakeDriveFile_37(
          this,
          Invocation.method(
            #update,
            [request],
          ),
        )),
      ) as _i15.Future<_i5.DriveFile>);
  @override
  _i15.Future<void> delete(_i5.DriveFilesDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i15.Future<void>.value(),
        returnValueForMissingStub: _i15.Future<void>.value(),
      ) as _i15.Future<void>);
  @override
  _i15.Future<Iterable<_i5.DriveFile>> files(_i5.DriveFilesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #files,
          [request],
        ),
        returnValue:
            _i15.Future<Iterable<_i5.DriveFile>>.value(<_i5.DriveFile>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.DriveFile>>.value(<_i5.DriveFile>[]),
      ) as _i15.Future<Iterable<_i5.DriveFile>>);
  @override
  _i15.Future<Iterable<_i5.DriveFile>> find(
          _i5.DriveFilesFindRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #find,
          [request],
        ),
        returnValue:
            _i15.Future<Iterable<_i5.DriveFile>>.value(<_i5.DriveFile>[]),
        returnValueForMissingStub:
            _i15.Future<Iterable<_i5.DriveFile>>.value(<_i5.DriveFile>[]),
      ) as _i15.Future<Iterable<_i5.DriveFile>>);
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i23.Dio {
  @override
  _i8.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_38(
          this,
          Invocation.getter(#options),
        ),
        returnValueForMissingStub: _FakeBaseOptions_38(
          this,
          Invocation.getter(#options),
        ),
      ) as _i8.BaseOptions);
  @override
  set options(_i8.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_39(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
        returnValueForMissingStub: _FakeHttpClientAdapter_39(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i9.HttpClientAdapter);
  @override
  set httpClientAdapter(_i9.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_40(
          this,
          Invocation.getter(#transformer),
        ),
        returnValueForMissingStub: _FakeTransformer_40(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i10.Transformer);
  @override
  set transformer(_i10.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i11.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_41(
          this,
          Invocation.getter(#interceptors),
        ),
        returnValueForMissingStub: _FakeInterceptors_41(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i11.Interceptors);
  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i15.Future<_i12.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i8.Options? options,
    _i24.CancelToken? cancelToken,
    _i8.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i15.Future<_i12.Response<T>>);
  @override
  _i15.Future<_i12.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i8.Options? options,
    _i24.CancelToken? cancelToken,
    _i8.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i15.Future<_i12.Response<T>>);
  @override
  _i15.Future<_i12.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i8.Options? options,
    _i24.CancelToken? cancelToken,
    _i8.ProgressCallback? onSendProgress,
    _i8.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i15.Future<_i12.Response<T>>);
  @override
  _i15.Future<_i12.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i8.Options? options,
    _i24.CancelToken? cancelToken,
    _i8.ProgressCallback? onSendProgress,
    _i8.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i15.Future<_i12.Response<T>>);
  @override
  _i15.Future<_i12.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i8.Options? options,
    _i24.CancelToken? cancelToken,
    _i8.ProgressCallback? onSendProgress,
    _i8.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i15.Future<_i12.Response<T>>);
  @override
  _i15.Future<_i12.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i8.Options? options,
    _i24.CancelToken? cancelToken,
    _i8.ProgressCallback? onSendProgress,
    _i8.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i15.Future<_i12.Response<T>>);
  @override
  _i15.Future<_i12.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i8.Options? options,
    _i24.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i15.Future<_i12.Response<T>>);
  @override
  _i15.Future<_i12.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i8.Options? options,
    _i24.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i15.Future<_i12.Response<T>>);
  @override
  _i15.Future<_i12.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i8.Options? options,
    _i24.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i15.Future<_i12.Response<T>>);
  @override
  _i15.Future<_i12.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i8.Options? options,
    _i24.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i15.Future<_i12.Response<T>>);
  @override
  _i15.Future<_i12.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i8.Options? options,
    _i24.CancelToken? cancelToken,
    _i8.ProgressCallback? onSendProgress,
    _i8.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i15.Future<_i12.Response<T>>);
  @override
  _i15.Future<_i12.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i8.Options? options,
    _i24.CancelToken? cancelToken,
    _i8.ProgressCallback? onSendProgress,
    _i8.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i15.Future<_i12.Response<T>>);
  @override
  _i15.Future<_i12.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i8.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i24.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i8.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i15.Future<_i12.Response<dynamic>>.value(_FakeResponse_42<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.Response<dynamic>>.value(_FakeResponse_42<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i15.Future<_i12.Response<dynamic>>);
  @override
  _i15.Future<_i12.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i8.ProgressCallback? onReceiveProgress,
    _i24.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i8.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i15.Future<_i12.Response<dynamic>>.value(_FakeResponse_42<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.Response<dynamic>>.value(_FakeResponse_42<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i15.Future<_i12.Response<dynamic>>);
  @override
  _i15.Future<_i12.Response<T>> request<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i24.CancelToken? cancelToken,
    _i8.Options? options,
    _i8.ProgressCallback? onSendProgress,
    _i8.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #request,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #request,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i15.Future<_i12.Response<T>>);
  @override
  _i15.Future<_i12.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i24.CancelToken? cancelToken,
    _i8.Options? options,
    _i8.ProgressCallback? onSendProgress,
    _i8.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i15.Future<_i12.Response<T>>);
  @override
  _i15.Future<_i12.Response<T>> fetch<T>(_i8.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
        returnValueForMissingStub:
            _i15.Future<_i12.Response<T>>.value(_FakeResponse_42<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i15.Future<_i12.Response<T>>);
}

/// A class which mocks [FakeFilePickerPlatform].
///
/// See the documentation for Mockito's code generation for more information.
class MockFilePickerPlatform extends _i1.Mock
    implements _i25.FakeFilePickerPlatform {
  @override
  _i15.Future<_i26.FilePickerResult?> pickFiles({
    String? dialogTitle,
    String? initialDirectory,
    _i26.FileType? type = _i26.FileType.any,
    List<String>? allowedExtensions,
    dynamic Function(_i26.FilePickerStatus)? onFileLoading,
    bool? allowCompression = true,
    bool? allowMultiple = false,
    bool? withData = false,
    bool? withReadStream = false,
    bool? lockParentWindow = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickFiles,
          [],
          {
            #dialogTitle: dialogTitle,
            #initialDirectory: initialDirectory,
            #type: type,
            #allowedExtensions: allowedExtensions,
            #onFileLoading: onFileLoading,
            #allowCompression: allowCompression,
            #allowMultiple: allowMultiple,
            #withData: withData,
            #withReadStream: withReadStream,
            #lockParentWindow: lockParentWindow,
          },
        ),
        returnValue: _i15.Future<_i26.FilePickerResult?>.value(),
        returnValueForMissingStub: _i15.Future<_i26.FilePickerResult?>.value(),
      ) as _i15.Future<_i26.FilePickerResult?>);
  @override
  _i15.Future<bool?> clearTemporaryFiles() => (super.noSuchMethod(
        Invocation.method(
          #clearTemporaryFiles,
          [],
        ),
        returnValue: _i15.Future<bool?>.value(),
        returnValueForMissingStub: _i15.Future<bool?>.value(),
      ) as _i15.Future<bool?>);
  @override
  _i15.Future<String?> getDirectoryPath({
    String? dialogTitle,
    bool? lockParentWindow = false,
    String? initialDirectory,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDirectoryPath,
          [],
          {
            #dialogTitle: dialogTitle,
            #lockParentWindow: lockParentWindow,
            #initialDirectory: initialDirectory,
          },
        ),
        returnValue: _i15.Future<String?>.value(),
        returnValueForMissingStub: _i15.Future<String?>.value(),
      ) as _i15.Future<String?>);
  @override
  _i15.Future<String?> saveFile({
    String? dialogTitle,
    String? fileName,
    String? initialDirectory,
    _i26.FileType? type = _i26.FileType.any,
    List<String>? allowedExtensions,
    bool? lockParentWindow = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFile,
          [],
          {
            #dialogTitle: dialogTitle,
            #fileName: fileName,
            #initialDirectory: initialDirectory,
            #type: type,
            #allowedExtensions: allowedExtensions,
            #lockParentWindow: lockParentWindow,
          },
        ),
        returnValue: _i15.Future<String?>.value(),
        returnValueForMissingStub: _i15.Future<String?>.value(),
      ) as _i15.Future<String?>);
}
