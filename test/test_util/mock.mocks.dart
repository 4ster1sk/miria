// Mocks generated by Mockito 5.4.2 from annotations
// in miria/test/test_util/mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:misskey_dart/misskey_dart.dart' as _i3;
import 'package:misskey_dart/src/data/ping_response.dart' as _i5;
import 'package:misskey_dart/src/data/stats_response.dart' as _i4;
import 'package:misskey_dart/src/services/api_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiService_0 extends _i1.SmartFake implements _i2.ApiService {
  _FakeApiService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotes_1 extends _i1.SmartFake implements _i3.MisskeyNotes {
  _FakeMisskeyNotes_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyChannels_2 extends _i1.SmartFake
    implements _i3.MisskeyChannels {
  _FakeMisskeyChannels_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyUsers_3 extends _i1.SmartFake implements _i3.MisskeyUsers {
  _FakeMisskeyUsers_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyI_4 extends _i1.SmartFake implements _i3.MisskeyI {
  _FakeMisskeyI_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyClips_5 extends _i1.SmartFake implements _i3.MisskeyClips {
  _FakeMisskeyClips_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyAntenna_6 extends _i1.SmartFake
    implements _i3.MisskeyAntenna {
  _FakeMisskeyAntenna_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyDrive_7 extends _i1.SmartFake implements _i3.MisskeyDrive {
  _FakeMisskeyDrive_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyFollowing_8 extends _i1.SmartFake
    implements _i3.MisskeyFollowing {
  _FakeMisskeyFollowing_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyBlocking_9 extends _i1.SmartFake
    implements _i3.MisskeyBlocking {
  _FakeMisskeyBlocking_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyMute_10 extends _i1.SmartFake implements _i3.MisskeyMute {
  _FakeMisskeyMute_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyRenoteMute_11 extends _i1.SmartFake
    implements _i3.MisskeyRenoteMute {
  _FakeMisskeyRenoteMute_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyFederation_12 extends _i1.SmartFake
    implements _i3.MisskeyFederation {
  _FakeMisskeyFederation_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyRoles_13 extends _i1.SmartFake implements _i3.MisskeyRoles {
  _FakeMisskeyRoles_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyHashtags_14 extends _i1.SmartFake
    implements _i3.MisskeyHashtags {
  _FakeMisskeyHashtags_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyAp_15 extends _i1.SmartFake implements _i3.MisskeyAp {
  _FakeMisskeyAp_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEmojisResponse_16 extends _i1.SmartFake
    implements _i3.EmojisResponse {
  _FakeEmojisResponse_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMetaResponse_17 extends _i1.SmartFake implements _i3.MetaResponse {
  _FakeMetaResponse_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStatsResponse_18 extends _i1.SmartFake implements _i4.StatsResponse {
  _FakeStatsResponse_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePingResponse_19 extends _i1.SmartFake implements _i5.PingResponse {
  _FakePingResponse_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeServerInfoResponse_20 extends _i1.SmartFake
    implements _i3.ServerInfoResponse {
  _FakeServerInfoResponse_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetOnlineUsersCountResponse_21 extends _i1.SmartFake
    implements _i3.GetOnlineUsersCountResponse {
  _FakeGetOnlineUsersCountResponse_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSocketController_22 extends _i1.SmartFake
    implements _i3.SocketController {
  _FakeSocketController_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotesReactions_23 extends _i1.SmartFake
    implements _i3.MisskeyNotesReactions {
  _FakeMisskeyNotesReactions_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotesFavorites_24 extends _i1.SmartFake
    implements _i3.MisskeyNotesFavorites {
  _FakeMisskeyNotesFavorites_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotesPolls_25 extends _i1.SmartFake
    implements _i3.MisskeyNotesPolls {
  _FakeMisskeyNotesPolls_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotesThreadMuting_26 extends _i1.SmartFake
    implements _i3.MisskeyNotesThreadMuting {
  _FakeMisskeyNotesThreadMuting_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNote_27 extends _i1.SmartFake implements _i3.Note {
  _FakeNote_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotesStateResponse_28 extends _i1.SmartFake
    implements _i3.NotesStateResponse {
  _FakeNotesStateResponse_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyUsersLists_29 extends _i1.SmartFake
    implements _i3.MisskeyUsersLists {
  _FakeMisskeyUsersLists_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUsersShowResponse_30 extends _i1.SmartFake
    implements _i3.UsersShowResponse {
  _FakeUsersShowResponse_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCommunityChannel_31 extends _i1.SmartFake
    implements _i3.CommunityChannel {
  _FakeCommunityChannel_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Misskey].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskey extends _i1.Mock implements _i3.Misskey {
  @override
  String get host => (super.noSuchMethod(
        Invocation.getter(#host),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i2.ApiService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeApiService_0(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeApiService_0(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i2.ApiService);
  @override
  set apiService(_i2.ApiService? _apiService) => super.noSuchMethod(
        Invocation.setter(
          #apiService,
          _apiService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.MisskeyNotes get notes => (super.noSuchMethod(
        Invocation.getter(#notes),
        returnValue: _FakeMisskeyNotes_1(
          this,
          Invocation.getter(#notes),
        ),
        returnValueForMissingStub: _FakeMisskeyNotes_1(
          this,
          Invocation.getter(#notes),
        ),
      ) as _i3.MisskeyNotes);
  @override
  set notes(_i3.MisskeyNotes? _notes) => super.noSuchMethod(
        Invocation.setter(
          #notes,
          _notes,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.MisskeyChannels get channels => (super.noSuchMethod(
        Invocation.getter(#channels),
        returnValue: _FakeMisskeyChannels_2(
          this,
          Invocation.getter(#channels),
        ),
        returnValueForMissingStub: _FakeMisskeyChannels_2(
          this,
          Invocation.getter(#channels),
        ),
      ) as _i3.MisskeyChannels);
  @override
  set channels(_i3.MisskeyChannels? _channels) => super.noSuchMethod(
        Invocation.setter(
          #channels,
          _channels,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.MisskeyUsers get users => (super.noSuchMethod(
        Invocation.getter(#users),
        returnValue: _FakeMisskeyUsers_3(
          this,
          Invocation.getter(#users),
        ),
        returnValueForMissingStub: _FakeMisskeyUsers_3(
          this,
          Invocation.getter(#users),
        ),
      ) as _i3.MisskeyUsers);
  @override
  set users(_i3.MisskeyUsers? _users) => super.noSuchMethod(
        Invocation.setter(
          #users,
          _users,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.MisskeyI get i => (super.noSuchMethod(
        Invocation.getter(#i),
        returnValue: _FakeMisskeyI_4(
          this,
          Invocation.getter(#i),
        ),
        returnValueForMissingStub: _FakeMisskeyI_4(
          this,
          Invocation.getter(#i),
        ),
      ) as _i3.MisskeyI);
  @override
  set i(_i3.MisskeyI? _i) => super.noSuchMethod(
        Invocation.setter(
          #i,
          _i,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.MisskeyClips get clips => (super.noSuchMethod(
        Invocation.getter(#clips),
        returnValue: _FakeMisskeyClips_5(
          this,
          Invocation.getter(#clips),
        ),
        returnValueForMissingStub: _FakeMisskeyClips_5(
          this,
          Invocation.getter(#clips),
        ),
      ) as _i3.MisskeyClips);
  @override
  set clips(_i3.MisskeyClips? _clips) => super.noSuchMethod(
        Invocation.setter(
          #clips,
          _clips,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.MisskeyAntenna get antennas => (super.noSuchMethod(
        Invocation.getter(#antennas),
        returnValue: _FakeMisskeyAntenna_6(
          this,
          Invocation.getter(#antennas),
        ),
        returnValueForMissingStub: _FakeMisskeyAntenna_6(
          this,
          Invocation.getter(#antennas),
        ),
      ) as _i3.MisskeyAntenna);
  @override
  set antennas(_i3.MisskeyAntenna? _antennas) => super.noSuchMethod(
        Invocation.setter(
          #antennas,
          _antennas,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.MisskeyDrive get drive => (super.noSuchMethod(
        Invocation.getter(#drive),
        returnValue: _FakeMisskeyDrive_7(
          this,
          Invocation.getter(#drive),
        ),
        returnValueForMissingStub: _FakeMisskeyDrive_7(
          this,
          Invocation.getter(#drive),
        ),
      ) as _i3.MisskeyDrive);
  @override
  set drive(_i3.MisskeyDrive? _drive) => super.noSuchMethod(
        Invocation.setter(
          #drive,
          _drive,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.MisskeyFollowing get following => (super.noSuchMethod(
        Invocation.getter(#following),
        returnValue: _FakeMisskeyFollowing_8(
          this,
          Invocation.getter(#following),
        ),
        returnValueForMissingStub: _FakeMisskeyFollowing_8(
          this,
          Invocation.getter(#following),
        ),
      ) as _i3.MisskeyFollowing);
  @override
  set following(_i3.MisskeyFollowing? _following) => super.noSuchMethod(
        Invocation.setter(
          #following,
          _following,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.MisskeyBlocking get blocking => (super.noSuchMethod(
        Invocation.getter(#blocking),
        returnValue: _FakeMisskeyBlocking_9(
          this,
          Invocation.getter(#blocking),
        ),
        returnValueForMissingStub: _FakeMisskeyBlocking_9(
          this,
          Invocation.getter(#blocking),
        ),
      ) as _i3.MisskeyBlocking);
  @override
  set blocking(_i3.MisskeyBlocking? _blocking) => super.noSuchMethod(
        Invocation.setter(
          #blocking,
          _blocking,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.MisskeyMute get mute => (super.noSuchMethod(
        Invocation.getter(#mute),
        returnValue: _FakeMisskeyMute_10(
          this,
          Invocation.getter(#mute),
        ),
        returnValueForMissingStub: _FakeMisskeyMute_10(
          this,
          Invocation.getter(#mute),
        ),
      ) as _i3.MisskeyMute);
  @override
  set mute(_i3.MisskeyMute? _mute) => super.noSuchMethod(
        Invocation.setter(
          #mute,
          _mute,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.MisskeyRenoteMute get renoteMute => (super.noSuchMethod(
        Invocation.getter(#renoteMute),
        returnValue: _FakeMisskeyRenoteMute_11(
          this,
          Invocation.getter(#renoteMute),
        ),
        returnValueForMissingStub: _FakeMisskeyRenoteMute_11(
          this,
          Invocation.getter(#renoteMute),
        ),
      ) as _i3.MisskeyRenoteMute);
  @override
  set renoteMute(_i3.MisskeyRenoteMute? _renoteMute) => super.noSuchMethod(
        Invocation.setter(
          #renoteMute,
          _renoteMute,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.MisskeyFederation get federation => (super.noSuchMethod(
        Invocation.getter(#federation),
        returnValue: _FakeMisskeyFederation_12(
          this,
          Invocation.getter(#federation),
        ),
        returnValueForMissingStub: _FakeMisskeyFederation_12(
          this,
          Invocation.getter(#federation),
        ),
      ) as _i3.MisskeyFederation);
  @override
  set federation(_i3.MisskeyFederation? _federation) => super.noSuchMethod(
        Invocation.setter(
          #federation,
          _federation,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.MisskeyRoles get roles => (super.noSuchMethod(
        Invocation.getter(#roles),
        returnValue: _FakeMisskeyRoles_13(
          this,
          Invocation.getter(#roles),
        ),
        returnValueForMissingStub: _FakeMisskeyRoles_13(
          this,
          Invocation.getter(#roles),
        ),
      ) as _i3.MisskeyRoles);
  @override
  set roles(_i3.MisskeyRoles? _roles) => super.noSuchMethod(
        Invocation.setter(
          #roles,
          _roles,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.MisskeyHashtags get hashtags => (super.noSuchMethod(
        Invocation.getter(#hashtags),
        returnValue: _FakeMisskeyHashtags_14(
          this,
          Invocation.getter(#hashtags),
        ),
        returnValueForMissingStub: _FakeMisskeyHashtags_14(
          this,
          Invocation.getter(#hashtags),
        ),
      ) as _i3.MisskeyHashtags);
  @override
  set hashtags(_i3.MisskeyHashtags? _hashtags) => super.noSuchMethod(
        Invocation.setter(
          #hashtags,
          _hashtags,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.MisskeyAp get ap => (super.noSuchMethod(
        Invocation.getter(#ap),
        returnValue: _FakeMisskeyAp_15(
          this,
          Invocation.getter(#ap),
        ),
        returnValueForMissingStub: _FakeMisskeyAp_15(
          this,
          Invocation.getter(#ap),
        ),
      ) as _i3.MisskeyAp);
  @override
  set ap(_i3.MisskeyAp? _ap) => super.noSuchMethod(
        Invocation.setter(
          #ap,
          _ap,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<Iterable<_i3.AnnouncementsResponse>> announcements(
          _i3.AnnouncementsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #announcements,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.AnnouncementsResponse>>.value(
            <_i3.AnnouncementsResponse>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.AnnouncementsResponse>>.value(
                <_i3.AnnouncementsResponse>[]),
      ) as _i6.Future<Iterable<_i3.AnnouncementsResponse>>);
  @override
  _i6.Future<List<String>> endpoints() => (super.noSuchMethod(
        Invocation.method(
          #endpoints,
          [],
        ),
        returnValue: _i6.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i6.Future<List<String>>.value(<String>[]),
      ) as _i6.Future<List<String>>);
  @override
  _i6.Future<_i3.EmojisResponse> emojis() => (super.noSuchMethod(
        Invocation.method(
          #emojis,
          [],
        ),
        returnValue:
            _i6.Future<_i3.EmojisResponse>.value(_FakeEmojisResponse_16(
          this,
          Invocation.method(
            #emojis,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.EmojisResponse>.value(_FakeEmojisResponse_16(
          this,
          Invocation.method(
            #emojis,
            [],
          ),
        )),
      ) as _i6.Future<_i3.EmojisResponse>);
  @override
  _i6.Future<_i3.MetaResponse> meta() => (super.noSuchMethod(
        Invocation.method(
          #meta,
          [],
        ),
        returnValue: _i6.Future<_i3.MetaResponse>.value(_FakeMetaResponse_17(
          this,
          Invocation.method(
            #meta,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.MetaResponse>.value(_FakeMetaResponse_17(
          this,
          Invocation.method(
            #meta,
            [],
          ),
        )),
      ) as _i6.Future<_i3.MetaResponse>);
  @override
  _i6.Future<_i4.StatsResponse> stats() => (super.noSuchMethod(
        Invocation.method(
          #stats,
          [],
        ),
        returnValue: _i6.Future<_i4.StatsResponse>.value(_FakeStatsResponse_18(
          this,
          Invocation.method(
            #stats,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.StatsResponse>.value(_FakeStatsResponse_18(
          this,
          Invocation.method(
            #stats,
            [],
          ),
        )),
      ) as _i6.Future<_i4.StatsResponse>);
  @override
  _i6.Future<_i5.PingResponse> ping() => (super.noSuchMethod(
        Invocation.method(
          #ping,
          [],
        ),
        returnValue: _i6.Future<_i5.PingResponse>.value(_FakePingResponse_19(
          this,
          Invocation.method(
            #ping,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i5.PingResponse>.value(_FakePingResponse_19(
          this,
          Invocation.method(
            #ping,
            [],
          ),
        )),
      ) as _i6.Future<_i5.PingResponse>);
  @override
  _i6.Future<_i3.ServerInfoResponse> serverInfo() => (super.noSuchMethod(
        Invocation.method(
          #serverInfo,
          [],
        ),
        returnValue:
            _i6.Future<_i3.ServerInfoResponse>.value(_FakeServerInfoResponse_20(
          this,
          Invocation.method(
            #serverInfo,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.ServerInfoResponse>.value(_FakeServerInfoResponse_20(
          this,
          Invocation.method(
            #serverInfo,
            [],
          ),
        )),
      ) as _i6.Future<_i3.ServerInfoResponse>);
  @override
  _i6.Future<_i3.GetOnlineUsersCountResponse> getOnlineUsersCount() =>
      (super.noSuchMethod(
        Invocation.method(
          #getOnlineUsersCount,
          [],
        ),
        returnValue: _i6.Future<_i3.GetOnlineUsersCountResponse>.value(
            _FakeGetOnlineUsersCountResponse_21(
          this,
          Invocation.method(
            #getOnlineUsersCount,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.GetOnlineUsersCountResponse>.value(
                _FakeGetOnlineUsersCountResponse_21(
          this,
          Invocation.method(
            #getOnlineUsersCount,
            [],
          ),
        )),
      ) as _i6.Future<_i3.GetOnlineUsersCountResponse>);
  @override
  _i6.Future<Iterable<_i3.User>> pinnedUsers() => (super.noSuchMethod(
        Invocation.method(
          #pinnedUsers,
          [],
        ),
        returnValue: _i6.Future<Iterable<_i3.User>>.value(<_i3.User>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.User>>.value(<_i3.User>[]),
      ) as _i6.Future<Iterable<_i3.User>>);
  @override
  _i3.SocketController homeTimelineStream(
    _i6.FutureOr<void> Function(_i3.Note)? onEventReceived,
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineReacted,
    )? onReacted,
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineVoted,
    )? onVoted, {
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineReacted,
    )? onUnreacted,
    _i6.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #homeTimelineStream,
          [
            onEventReceived,
            onReacted,
            onVoted,
          ],
          {
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
          },
        ),
        returnValue: _FakeSocketController_22(
          this,
          Invocation.method(
            #homeTimelineStream,
            [
              onEventReceived,
              onReacted,
              onVoted,
            ],
            {
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_22(
          this,
          Invocation.method(
            #homeTimelineStream,
            [
              onEventReceived,
              onReacted,
              onVoted,
            ],
            {
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
            },
          ),
        ),
      ) as _i3.SocketController);
  @override
  _i3.SocketController localTimelineStream(
    _i6.FutureOr<void> Function(_i3.Note)? onEventReceived,
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineReacted,
    )? onReacted,
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineVoted,
    )? onVoted, {
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineReacted,
    )? onUnreacted,
    _i6.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #localTimelineStream,
          [
            onEventReceived,
            onReacted,
            onVoted,
          ],
          {
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
          },
        ),
        returnValue: _FakeSocketController_22(
          this,
          Invocation.method(
            #localTimelineStream,
            [
              onEventReceived,
              onReacted,
              onVoted,
            ],
            {
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_22(
          this,
          Invocation.method(
            #localTimelineStream,
            [
              onEventReceived,
              onReacted,
              onVoted,
            ],
            {
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
            },
          ),
        ),
      ) as _i3.SocketController);
  @override
  _i3.SocketController globalTimelineStream(
    _i6.FutureOr<void> Function(_i3.Note)? onEventReceived, {
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineReacted,
    )? onReacted,
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineReacted,
    )? onUnreacted,
    _i6.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineVoted,
    )? onVoted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #globalTimelineStream,
          [onEventReceived],
          {
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
          },
        ),
        returnValue: _FakeSocketController_22(
          this,
          Invocation.method(
            #globalTimelineStream,
            [onEventReceived],
            {
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_22(
          this,
          Invocation.method(
            #globalTimelineStream,
            [onEventReceived],
            {
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
      ) as _i3.SocketController);
  @override
  _i3.SocketController hybridTimelineStream(
    _i6.FutureOr<void> Function(_i3.Note)? onEventReceived,
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineReacted,
    )? onReacted,
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineVoted,
    )? onVoted, {
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineReacted,
    )? onUnreacted,
    _i6.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #hybridTimelineStream,
          [
            onEventReceived,
            onReacted,
            onVoted,
          ],
          {
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
          },
        ),
        returnValue: _FakeSocketController_22(
          this,
          Invocation.method(
            #hybridTimelineStream,
            [
              onEventReceived,
              onReacted,
              onVoted,
            ],
            {
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_22(
          this,
          Invocation.method(
            #hybridTimelineStream,
            [
              onEventReceived,
              onReacted,
              onVoted,
            ],
            {
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
            },
          ),
        ),
      ) as _i3.SocketController);
  @override
  _i3.SocketController channelStream(
    String? channelId,
    _i6.FutureOr<void> Function(_i3.Note)? onEventReceived,
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineReacted,
    )? onReacted,
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineVoted,
    )? onVoted, {
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineReacted,
    )? onUnreacted,
    _i6.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #channelStream,
          [
            channelId,
            onEventReceived,
            onReacted,
            onVoted,
          ],
          {
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
          },
        ),
        returnValue: _FakeSocketController_22(
          this,
          Invocation.method(
            #channelStream,
            [
              channelId,
              onEventReceived,
              onReacted,
              onVoted,
            ],
            {
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_22(
          this,
          Invocation.method(
            #channelStream,
            [
              channelId,
              onEventReceived,
              onReacted,
              onVoted,
            ],
            {
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
            },
          ),
        ),
      ) as _i3.SocketController);
  @override
  _i3.SocketController userListStream(
    String? listId,
    _i6.FutureOr<void> Function(_i3.Note)? onEventReceived,
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineReacted,
    )? onReacted, {
    _i6.FutureOr<void> Function(_i3.User)? onUserAdded,
    _i6.FutureOr<void> Function(_i3.User)? onUserRemoved,
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineReacted,
    )? onUnreacted,
    _i6.FutureOr<void> Function(DateTime)? onDeleted,
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineVoted,
    )? onVoted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #userListStream,
          [
            listId,
            onEventReceived,
            onReacted,
          ],
          {
            #onUserAdded: onUserAdded,
            #onUserRemoved: onUserRemoved,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
          },
        ),
        returnValue: _FakeSocketController_22(
          this,
          Invocation.method(
            #userListStream,
            [
              listId,
              onEventReceived,
              onReacted,
            ],
            {
              #onUserAdded: onUserAdded,
              #onUserRemoved: onUserRemoved,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_22(
          this,
          Invocation.method(
            #userListStream,
            [
              listId,
              onEventReceived,
              onReacted,
            ],
            {
              #onUserAdded: onUserAdded,
              #onUserRemoved: onUserRemoved,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
      ) as _i3.SocketController);
  @override
  _i3.SocketController antennaStream(
    String? antennaId,
    _i6.FutureOr<void> Function(_i3.Note)? onEventReceived,
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineReacted,
    )? onReacted,
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineVoted,
    )? onVoted, {
    _i6.FutureOr<void> Function(
      String,
      _i3.TimelineReacted,
    )? onUnreacted,
    _i6.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #antennaStream,
          [
            antennaId,
            onEventReceived,
            onReacted,
            onVoted,
          ],
          {
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
          },
        ),
        returnValue: _FakeSocketController_22(
          this,
          Invocation.method(
            #antennaStream,
            [
              antennaId,
              onEventReceived,
              onReacted,
              onVoted,
            ],
            {
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_22(
          this,
          Invocation.method(
            #antennaStream,
            [
              antennaId,
              onEventReceived,
              onReacted,
              onVoted,
            ],
            {
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
            },
          ),
        ),
      ) as _i3.SocketController);
  @override
  _i3.SocketController serverStatsLogStream(
    _i6.FutureOr<void> Function(List<_i3.StatsLogResponse>)? onLogReceived,
    _i6.FutureOr<void> Function(_i3.StatsLogResponse)? onEventReceived,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #serverStatsLogStream,
          [
            onLogReceived,
            onEventReceived,
          ],
        ),
        returnValue: _FakeSocketController_22(
          this,
          Invocation.method(
            #serverStatsLogStream,
            [
              onLogReceived,
              onEventReceived,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_22(
          this,
          Invocation.method(
            #serverStatsLogStream,
            [
              onLogReceived,
              onEventReceived,
            ],
          ),
        ),
      ) as _i3.SocketController);
  @override
  _i3.SocketController mainStream({
    _i6.FutureOr<void> Function(_i3.Emoji)? onEmojiAdded,
    _i6.FutureOr<void> Function(Iterable<_i3.Emoji>)? onEmojiUpdated,
    _i6.FutureOr<void> Function(Iterable<_i3.Emoji>)? onEmojiDeleted,
    _i6.FutureOr<void> Function(_i3.INotificationsResponse)? onNotification,
    _i6.FutureOr<void> Function(_i3.Note)? onMention,
    _i6.FutureOr<void> Function(_i3.Note)? onReply,
    _i6.FutureOr<void> Function(_i3.Note)? onRenote,
    _i6.FutureOr<void> Function(_i3.User)? onFollow,
    _i6.FutureOr<void> Function(_i3.User)? onFollowed,
    _i6.FutureOr<void> Function(_i3.User)? onUnfollow,
    _i6.FutureOr<void> Function(_i3.User)? onMeUpdated,
    _i6.FutureOr<void> Function()? onReadAllNotifications,
    _i6.FutureOr<void> Function(_i3.INotificationsResponse)?
        onUnreadNotification,
    _i6.FutureOr<void> Function(String)? onUnreadMention,
    _i6.FutureOr<void> Function()? onReadAllUnreadMentions,
    _i6.FutureOr<void> Function(String)? onUnreadSpecifiedNote,
    _i6.FutureOr<void> Function()? onReadAllUnreadSpecifiedNotes,
    _i6.FutureOr<void> Function(_i3.User)? onReceiveFollowRequest,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #mainStream,
          [],
          {
            #onEmojiAdded: onEmojiAdded,
            #onEmojiUpdated: onEmojiUpdated,
            #onEmojiDeleted: onEmojiDeleted,
            #onNotification: onNotification,
            #onMention: onMention,
            #onReply: onReply,
            #onRenote: onRenote,
            #onFollow: onFollow,
            #onFollowed: onFollowed,
            #onUnfollow: onUnfollow,
            #onMeUpdated: onMeUpdated,
            #onReadAllNotifications: onReadAllNotifications,
            #onUnreadNotification: onUnreadNotification,
            #onUnreadMention: onUnreadMention,
            #onReadAllUnreadMentions: onReadAllUnreadMentions,
            #onUnreadSpecifiedNote: onUnreadSpecifiedNote,
            #onReadAllUnreadSpecifiedNotes: onReadAllUnreadSpecifiedNotes,
            #onReceiveFollowRequest: onReceiveFollowRequest,
          },
        ),
        returnValue: _FakeSocketController_22(
          this,
          Invocation.method(
            #mainStream,
            [],
            {
              #onEmojiAdded: onEmojiAdded,
              #onEmojiUpdated: onEmojiUpdated,
              #onEmojiDeleted: onEmojiDeleted,
              #onNotification: onNotification,
              #onMention: onMention,
              #onReply: onReply,
              #onRenote: onRenote,
              #onFollow: onFollow,
              #onFollowed: onFollowed,
              #onUnfollow: onUnfollow,
              #onMeUpdated: onMeUpdated,
              #onReadAllNotifications: onReadAllNotifications,
              #onUnreadNotification: onUnreadNotification,
              #onUnreadMention: onUnreadMention,
              #onReadAllUnreadMentions: onReadAllUnreadMentions,
              #onUnreadSpecifiedNote: onUnreadSpecifiedNote,
              #onReadAllUnreadSpecifiedNotes: onReadAllUnreadSpecifiedNotes,
              #onReceiveFollowRequest: onReceiveFollowRequest,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_22(
          this,
          Invocation.method(
            #mainStream,
            [],
            {
              #onEmojiAdded: onEmojiAdded,
              #onEmojiUpdated: onEmojiUpdated,
              #onEmojiDeleted: onEmojiDeleted,
              #onNotification: onNotification,
              #onMention: onMention,
              #onReply: onReply,
              #onRenote: onRenote,
              #onFollow: onFollow,
              #onFollowed: onFollowed,
              #onUnfollow: onUnfollow,
              #onMeUpdated: onMeUpdated,
              #onReadAllNotifications: onReadAllNotifications,
              #onUnreadNotification: onUnreadNotification,
              #onUnreadMention: onUnreadMention,
              #onReadAllUnreadMentions: onReadAllUnreadMentions,
              #onUnreadSpecifiedNote: onUnreadSpecifiedNote,
              #onReadAllUnreadSpecifiedNotes: onReadAllUnreadSpecifiedNotes,
              #onReceiveFollowRequest: onReceiveFollowRequest,
            },
          ),
        ),
      ) as _i3.SocketController);
}

/// A class which mocks [MisskeyNotes].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyNotes extends _i1.Mock implements _i3.MisskeyNotes {
  @override
  _i3.MisskeyNotesReactions get reactions => (super.noSuchMethod(
        Invocation.getter(#reactions),
        returnValue: _FakeMisskeyNotesReactions_23(
          this,
          Invocation.getter(#reactions),
        ),
        returnValueForMissingStub: _FakeMisskeyNotesReactions_23(
          this,
          Invocation.getter(#reactions),
        ),
      ) as _i3.MisskeyNotesReactions);
  @override
  _i3.MisskeyNotesFavorites get favorites => (super.noSuchMethod(
        Invocation.getter(#favorites),
        returnValue: _FakeMisskeyNotesFavorites_24(
          this,
          Invocation.getter(#favorites),
        ),
        returnValueForMissingStub: _FakeMisskeyNotesFavorites_24(
          this,
          Invocation.getter(#favorites),
        ),
      ) as _i3.MisskeyNotesFavorites);
  @override
  _i3.MisskeyNotesPolls get polls => (super.noSuchMethod(
        Invocation.getter(#polls),
        returnValue: _FakeMisskeyNotesPolls_25(
          this,
          Invocation.getter(#polls),
        ),
        returnValueForMissingStub: _FakeMisskeyNotesPolls_25(
          this,
          Invocation.getter(#polls),
        ),
      ) as _i3.MisskeyNotesPolls);
  @override
  _i3.MisskeyNotesThreadMuting get threadMuting => (super.noSuchMethod(
        Invocation.getter(#threadMuting),
        returnValue: _FakeMisskeyNotesThreadMuting_26(
          this,
          Invocation.getter(#threadMuting),
        ),
        returnValueForMissingStub: _FakeMisskeyNotesThreadMuting_26(
          this,
          Invocation.getter(#threadMuting),
        ),
      ) as _i3.MisskeyNotesThreadMuting);
  @override
  _i6.Future<void> create(_i3.NotesCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> delete(_i3.NotesDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<Iterable<_i3.Note>> notes(_i3.NotesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #notes,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
      ) as _i6.Future<Iterable<_i3.Note>>);
  @override
  _i6.Future<_i3.Note> show(_i3.NotesShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue: _i6.Future<_i3.Note>.value(_FakeNote_27(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub: _i6.Future<_i3.Note>.value(_FakeNote_27(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i6.Future<_i3.Note>);
  @override
  _i6.Future<Iterable<_i3.Note>> homeTimeline(
          _i3.NotesTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #homeTimeline,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
      ) as _i6.Future<Iterable<_i3.Note>>);
  @override
  _i6.Future<Iterable<_i3.Note>> localTimeline(
          _i3.NotesLocalTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #localTimeline,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
      ) as _i6.Future<Iterable<_i3.Note>>);
  @override
  _i6.Future<Iterable<_i3.Note>> hybridTimeline(
          _i3.NotesHybridTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #hybridTimeline,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
      ) as _i6.Future<Iterable<_i3.Note>>);
  @override
  _i6.Future<Iterable<_i3.Note>> globalTimeline(
          _i3.NotesGlobalTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #globalTimeline,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
      ) as _i6.Future<Iterable<_i3.Note>>);
  @override
  _i6.Future<Iterable<_i3.Note>> userListTimeline(
          _i3.UserListTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #userListTimeline,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
      ) as _i6.Future<Iterable<_i3.Note>>);
  @override
  _i6.Future<_i3.NotesStateResponse> state(_i3.NotesStateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #state,
          [request],
        ),
        returnValue:
            _i6.Future<_i3.NotesStateResponse>.value(_FakeNotesStateResponse_28(
          this,
          Invocation.method(
            #state,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.NotesStateResponse>.value(_FakeNotesStateResponse_28(
          this,
          Invocation.method(
            #state,
            [request],
          ),
        )),
      ) as _i6.Future<_i3.NotesStateResponse>);
  @override
  _i6.Future<Iterable<_i3.Note>> search(_i3.NotesSearchRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
      ) as _i6.Future<Iterable<_i3.Note>>);
  @override
  _i6.Future<Iterable<_i3.Note>> searchByTag(
          _i3.NotesSearchByTagRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchByTag,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
      ) as _i6.Future<Iterable<_i3.Note>>);
  @override
  _i6.Future<Iterable<_i3.Note>> renotes(_i3.NotesRenoteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #renotes,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
      ) as _i6.Future<Iterable<_i3.Note>>);
  @override
  _i6.Future<Iterable<_i3.Note>> replies(_i3.NotesRepliesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #replies,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
      ) as _i6.Future<Iterable<_i3.Note>>);
  @override
  _i6.Future<Iterable<_i3.Note>> children(_i3.NotesChildrenRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #children,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
      ) as _i6.Future<Iterable<_i3.Note>>);
  @override
  _i6.Future<Iterable<_i3.Note>> conversation(
          _i3.NotesConversationRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #conversation,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
      ) as _i6.Future<Iterable<_i3.Note>>);
  @override
  _i6.Future<Iterable<_i3.Note>> featured(_i3.NotesFeaturedRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #featured,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
      ) as _i6.Future<Iterable<_i3.Note>>);
  @override
  _i6.Future<Iterable<_i3.Note>> mentions(_i3.NotesMentionsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #mentions,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
      ) as _i6.Future<Iterable<_i3.Note>>);
  @override
  _i6.Future<Iterable<_i3.Clip>> clips(_i3.NotesClipsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #clips,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.Clip>>.value(<_i3.Clip>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.Clip>>.value(<_i3.Clip>[]),
      ) as _i6.Future<Iterable<_i3.Clip>>);
  @override
  _i6.Future<void> unrenote(_i3.NotesUnrenoteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #unrenote,
          [request],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [MisskeyUsers].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyUsers extends _i1.Mock implements _i3.MisskeyUsers {
  @override
  _i3.MisskeyUsersLists get list => (super.noSuchMethod(
        Invocation.getter(#list),
        returnValue: _FakeMisskeyUsersLists_29(
          this,
          Invocation.getter(#list),
        ),
        returnValueForMissingStub: _FakeMisskeyUsersLists_29(
          this,
          Invocation.getter(#list),
        ),
      ) as _i3.MisskeyUsersLists);
  @override
  _i6.Future<_i3.UsersShowResponse> show(_i3.UsersShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue:
            _i6.Future<_i3.UsersShowResponse>.value(_FakeUsersShowResponse_30(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.UsersShowResponse>.value(_FakeUsersShowResponse_30(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i6.Future<_i3.UsersShowResponse>);
  @override
  _i6.Future<Iterable<_i3.UsersShowResponse>> showByIds(
          _i3.UsersShowByIdsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #showByIds,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.UsersShowResponse>>.value(
            <_i3.UsersShowResponse>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.UsersShowResponse>>.value(
                <_i3.UsersShowResponse>[]),
      ) as _i6.Future<Iterable<_i3.UsersShowResponse>>);
  @override
  _i6.Future<_i3.UsersShowResponse> showByName(
          _i3.UsersShowByUserNameRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #showByName,
          [request],
        ),
        returnValue:
            _i6.Future<_i3.UsersShowResponse>.value(_FakeUsersShowResponse_30(
          this,
          Invocation.method(
            #showByName,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.UsersShowResponse>.value(_FakeUsersShowResponse_30(
          this,
          Invocation.method(
            #showByName,
            [request],
          ),
        )),
      ) as _i6.Future<_i3.UsersShowResponse>);
  @override
  _i6.Future<Iterable<_i3.Note>> notes(_i3.UsersNotesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #notes,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
      ) as _i6.Future<Iterable<_i3.Note>>);
  @override
  _i6.Future<Iterable<_i3.Clip>> clips(_i3.UsersClipsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #clips,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.Clip>>.value(<_i3.Clip>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.Clip>>.value(<_i3.Clip>[]),
      ) as _i6.Future<Iterable<_i3.Clip>>);
  @override
  _i6.Future<Iterable<_i3.Following>> followers(
          _i3.UsersFollowersRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #followers,
          [request],
        ),
        returnValue:
            _i6.Future<Iterable<_i3.Following>>.value(<_i3.Following>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.Following>>.value(<_i3.Following>[]),
      ) as _i6.Future<Iterable<_i3.Following>>);
  @override
  _i6.Future<Iterable<_i3.Following>> following(
          _i3.UsersFollowingRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #following,
          [request],
        ),
        returnValue:
            _i6.Future<Iterable<_i3.Following>>.value(<_i3.Following>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.Following>>.value(<_i3.Following>[]),
      ) as _i6.Future<Iterable<_i3.Following>>);
  @override
  _i6.Future<void> reportAbuse(_i3.UsersReportAbuseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #reportAbuse,
          [request],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<Iterable<_i3.UsersReactionsResponse>> reactions(
          _i3.UsersReactionsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #reactions,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.UsersReactionsResponse>>.value(
            <_i3.UsersReactionsResponse>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.UsersReactionsResponse>>.value(
                <_i3.UsersReactionsResponse>[]),
      ) as _i6.Future<Iterable<_i3.UsersReactionsResponse>>);
  @override
  _i6.Future<Iterable<_i3.User>> search(_i3.UsersSearchRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.User>>.value(<_i3.User>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.User>>.value(<_i3.User>[]),
      ) as _i6.Future<Iterable<_i3.User>>);
  @override
  _i6.Future<Iterable<_i3.User>> recommendation(
          _i3.UsersRecommendationRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #recommendation,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.User>>.value(<_i3.User>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.User>>.value(<_i3.User>[]),
      ) as _i6.Future<Iterable<_i3.User>>);
  @override
  _i6.Future<Iterable<_i3.User>> users(_i3.UsersUsersRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #users,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.User>>.value(<_i3.User>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.User>>.value(<_i3.User>[]),
      ) as _i6.Future<Iterable<_i3.User>>);
  @override
  _i6.Future<void> updateMemo(_i3.UsersUpdateMemoRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMemo,
          [request],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [MisskeyChannels].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyChannels extends _i1.Mock implements _i3.MisskeyChannels {
  @override
  _i6.Future<Iterable<_i3.Note>> timeline(
          _i3.ChannelsTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #timeline,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.Note>>.value(<_i3.Note>[]),
      ) as _i6.Future<Iterable<_i3.Note>>);
  @override
  _i3.SocketController channelTimelineStream(
    String? channelId,
    _i6.FutureOr<void> Function(_i3.Note)? onEventReceived,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #channelTimelineStream,
          [
            channelId,
            onEventReceived,
          ],
        ),
        returnValue: _FakeSocketController_22(
          this,
          Invocation.method(
            #channelTimelineStream,
            [
              channelId,
              onEventReceived,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_22(
          this,
          Invocation.method(
            #channelTimelineStream,
            [
              channelId,
              onEventReceived,
            ],
          ),
        ),
      ) as _i3.SocketController);
  @override
  _i6.Future<_i3.CommunityChannel> show(_i3.ChannelsShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue:
            _i6.Future<_i3.CommunityChannel>.value(_FakeCommunityChannel_31(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.CommunityChannel>.value(_FakeCommunityChannel_31(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i6.Future<_i3.CommunityChannel>);
  @override
  _i6.Future<Iterable<_i3.CommunityChannel>> followed(
          _i3.ChannelsFollowedRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #followed,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.CommunityChannel>>.value(
            <_i3.CommunityChannel>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.CommunityChannel>>.value(
                <_i3.CommunityChannel>[]),
      ) as _i6.Future<Iterable<_i3.CommunityChannel>>);
  @override
  _i6.Future<Iterable<_i3.CommunityChannel>> myFavorite(
          _i3.ChannelsMyFavoriteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #myFavorite,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.CommunityChannel>>.value(
            <_i3.CommunityChannel>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.CommunityChannel>>.value(
                <_i3.CommunityChannel>[]),
      ) as _i6.Future<Iterable<_i3.CommunityChannel>>);
  @override
  _i6.Future<Iterable<_i3.CommunityChannel>> featured() => (super.noSuchMethod(
        Invocation.method(
          #featured,
          [],
        ),
        returnValue: _i6.Future<Iterable<_i3.CommunityChannel>>.value(
            <_i3.CommunityChannel>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.CommunityChannel>>.value(
                <_i3.CommunityChannel>[]),
      ) as _i6.Future<Iterable<_i3.CommunityChannel>>);
  @override
  _i6.Future<Iterable<_i3.CommunityChannel>> owned(
          _i3.ChannelsOwnedRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #owned,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.CommunityChannel>>.value(
            <_i3.CommunityChannel>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.CommunityChannel>>.value(
                <_i3.CommunityChannel>[]),
      ) as _i6.Future<Iterable<_i3.CommunityChannel>>);
  @override
  _i6.Future<Iterable<_i3.CommunityChannel>> search(
          _i3.ChannelsSearchRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [request],
        ),
        returnValue: _i6.Future<Iterable<_i3.CommunityChannel>>.value(
            <_i3.CommunityChannel>[]),
        returnValueForMissingStub:
            _i6.Future<Iterable<_i3.CommunityChannel>>.value(
                <_i3.CommunityChannel>[]),
      ) as _i6.Future<Iterable<_i3.CommunityChannel>>);
  @override
  _i6.Future<_i3.CommunityChannel> create(_i3.ChannelsCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue:
            _i6.Future<_i3.CommunityChannel>.value(_FakeCommunityChannel_31(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.CommunityChannel>.value(_FakeCommunityChannel_31(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
      ) as _i6.Future<_i3.CommunityChannel>);
  @override
  _i6.Future<void> update(_i3.ChannelsUpdateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [request],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> favorite(_i3.ChannelsFavoriteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #favorite,
          [request],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> unfavorite(_i3.ChannelsUnfavoriteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #unfavorite,
          [request],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> follow(_i3.ChannelsFollowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #follow,
          [request],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> unfollow(_i3.ChannelsUnfollowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #unfollow,
          [request],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}
