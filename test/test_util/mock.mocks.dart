// Mocks generated by Mockito 5.4.2 from annotations
// in miria/test/test_util/mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i14;
import 'dart:ui' as _i16;

import 'package:dio/src/adapter.dart' as _i8;
import 'package:dio/src/cancel_token.dart' as _i19;
import 'package:dio/src/dio.dart' as _i18;
import 'package:dio/src/dio_mixin.dart' as _i10;
import 'package:dio/src/options.dart' as _i7;
import 'package:dio/src/response.dart' as _i11;
import 'package:dio/src/transformer.dart' as _i9;
import 'package:miria/model/account.dart' as _i15;
import 'package:miria/model/account_settings.dart' as _i2;
import 'package:miria/model/tab_setting.dart' as _i13;
import 'package:miria/repository/account_settings_repository.dart' as _i17;
import 'package:miria/repository/tab_settings_repository.dart' as _i12;
import 'package:misskey_dart/misskey_dart.dart' as _i4;
import 'package:misskey_dart/src/data/ping_response.dart' as _i6;
import 'package:misskey_dart/src/data/stats_response.dart' as _i5;
import 'package:misskey_dart/src/services/api_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAccountSettings_0 extends _i1.SmartFake
    implements _i2.AccountSettings {
  _FakeAccountSettings_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiService_1 extends _i1.SmartFake implements _i3.ApiService {
  _FakeApiService_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotes_2 extends _i1.SmartFake implements _i4.MisskeyNotes {
  _FakeMisskeyNotes_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyChannels_3 extends _i1.SmartFake
    implements _i4.MisskeyChannels {
  _FakeMisskeyChannels_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyUsers_4 extends _i1.SmartFake implements _i4.MisskeyUsers {
  _FakeMisskeyUsers_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyI_5 extends _i1.SmartFake implements _i4.MisskeyI {
  _FakeMisskeyI_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyClips_6 extends _i1.SmartFake implements _i4.MisskeyClips {
  _FakeMisskeyClips_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyAntenna_7 extends _i1.SmartFake
    implements _i4.MisskeyAntenna {
  _FakeMisskeyAntenna_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyDrive_8 extends _i1.SmartFake implements _i4.MisskeyDrive {
  _FakeMisskeyDrive_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyFollowing_9 extends _i1.SmartFake
    implements _i4.MisskeyFollowing {
  _FakeMisskeyFollowing_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyBlocking_10 extends _i1.SmartFake
    implements _i4.MisskeyBlocking {
  _FakeMisskeyBlocking_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyMute_11 extends _i1.SmartFake implements _i4.MisskeyMute {
  _FakeMisskeyMute_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyRenoteMute_12 extends _i1.SmartFake
    implements _i4.MisskeyRenoteMute {
  _FakeMisskeyRenoteMute_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyFederation_13 extends _i1.SmartFake
    implements _i4.MisskeyFederation {
  _FakeMisskeyFederation_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyRoles_14 extends _i1.SmartFake implements _i4.MisskeyRoles {
  _FakeMisskeyRoles_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyHashtags_15 extends _i1.SmartFake
    implements _i4.MisskeyHashtags {
  _FakeMisskeyHashtags_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyAp_16 extends _i1.SmartFake implements _i4.MisskeyAp {
  _FakeMisskeyAp_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEmojisResponse_17 extends _i1.SmartFake
    implements _i4.EmojisResponse {
  _FakeEmojisResponse_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMetaResponse_18 extends _i1.SmartFake implements _i4.MetaResponse {
  _FakeMetaResponse_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStatsResponse_19 extends _i1.SmartFake implements _i5.StatsResponse {
  _FakeStatsResponse_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePingResponse_20 extends _i1.SmartFake implements _i6.PingResponse {
  _FakePingResponse_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeServerInfoResponse_21 extends _i1.SmartFake
    implements _i4.ServerInfoResponse {
  _FakeServerInfoResponse_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetOnlineUsersCountResponse_22 extends _i1.SmartFake
    implements _i4.GetOnlineUsersCountResponse {
  _FakeGetOnlineUsersCountResponse_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSocketController_23 extends _i1.SmartFake
    implements _i4.SocketController {
  _FakeSocketController_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotesReactions_24 extends _i1.SmartFake
    implements _i4.MisskeyNotesReactions {
  _FakeMisskeyNotesReactions_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotesFavorites_25 extends _i1.SmartFake
    implements _i4.MisskeyNotesFavorites {
  _FakeMisskeyNotesFavorites_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotesPolls_26 extends _i1.SmartFake
    implements _i4.MisskeyNotesPolls {
  _FakeMisskeyNotesPolls_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotesThreadMuting_27 extends _i1.SmartFake
    implements _i4.MisskeyNotesThreadMuting {
  _FakeMisskeyNotesThreadMuting_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNote_28 extends _i1.SmartFake implements _i4.Note {
  _FakeNote_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotesStateResponse_29 extends _i1.SmartFake
    implements _i4.NotesStateResponse {
  _FakeNotesStateResponse_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyUsersLists_30 extends _i1.SmartFake
    implements _i4.MisskeyUsersLists {
  _FakeMisskeyUsersLists_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUsersShowResponse_31 extends _i1.SmartFake
    implements _i4.UsersShowResponse {
  _FakeUsersShowResponse_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCommunityChannel_32 extends _i1.SmartFake
    implements _i4.CommunityChannel {
  _FakeCommunityChannel_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseOptions_33 extends _i1.SmartFake implements _i7.BaseOptions {
  _FakeBaseOptions_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_34 extends _i1.SmartFake
    implements _i8.HttpClientAdapter {
  _FakeHttpClientAdapter_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_35 extends _i1.SmartFake implements _i9.Transformer {
  _FakeTransformer_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_36 extends _i1.SmartFake implements _i10.Interceptors {
  _FakeInterceptors_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_37<T1> extends _i1.SmartFake implements _i11.Response<T1> {
  _FakeResponse_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TabSettingsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTabSettingsRepository extends _i1.Mock
    implements _i12.TabSettingsRepository {
  @override
  Iterable<_i13.TabSetting> get tabSettings => (super.noSuchMethod(
        Invocation.getter(#tabSettings),
        returnValue: <_i13.TabSetting>[],
        returnValueForMissingStub: <_i13.TabSetting>[],
      ) as Iterable<_i13.TabSetting>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i14.Future<void> load() => (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> save(List<_i13.TabSetting>? tabSettings) =>
      (super.noSuchMethod(
        Invocation.method(
          #save,
          [tabSettings],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> removeAccount(_i15.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #removeAccount,
          [account],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  void addListener(_i16.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i16.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AccountSettingsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountSettingsRepository extends _i1.Mock
    implements _i17.AccountSettingsRepository {
  @override
  Iterable<_i2.AccountSettings> get accountSettings => (super.noSuchMethod(
        Invocation.getter(#accountSettings),
        returnValue: <_i2.AccountSettings>[],
        returnValueForMissingStub: <_i2.AccountSettings>[],
      ) as Iterable<_i2.AccountSettings>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i14.Future<void> load() => (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> save(_i2.AccountSettings? settings) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [settings],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> removeAccount(_i15.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #removeAccount,
          [account],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i2.AccountSettings fromAccount(_i15.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #fromAccount,
          [account],
        ),
        returnValue: _FakeAccountSettings_0(
          this,
          Invocation.method(
            #fromAccount,
            [account],
          ),
        ),
        returnValueForMissingStub: _FakeAccountSettings_0(
          this,
          Invocation.method(
            #fromAccount,
            [account],
          ),
        ),
      ) as _i2.AccountSettings);
  @override
  void addListener(_i16.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i16.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Misskey].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskey extends _i1.Mock implements _i4.Misskey {
  @override
  String get host => (super.noSuchMethod(
        Invocation.getter(#host),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i3.ApiService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeApiService_1(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeApiService_1(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i3.ApiService);
  @override
  set apiService(_i3.ApiService? _apiService) => super.noSuchMethod(
        Invocation.setter(
          #apiService,
          _apiService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.MisskeyNotes get notes => (super.noSuchMethod(
        Invocation.getter(#notes),
        returnValue: _FakeMisskeyNotes_2(
          this,
          Invocation.getter(#notes),
        ),
        returnValueForMissingStub: _FakeMisskeyNotes_2(
          this,
          Invocation.getter(#notes),
        ),
      ) as _i4.MisskeyNotes);
  @override
  set notes(_i4.MisskeyNotes? _notes) => super.noSuchMethod(
        Invocation.setter(
          #notes,
          _notes,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.MisskeyChannels get channels => (super.noSuchMethod(
        Invocation.getter(#channels),
        returnValue: _FakeMisskeyChannels_3(
          this,
          Invocation.getter(#channels),
        ),
        returnValueForMissingStub: _FakeMisskeyChannels_3(
          this,
          Invocation.getter(#channels),
        ),
      ) as _i4.MisskeyChannels);
  @override
  set channels(_i4.MisskeyChannels? _channels) => super.noSuchMethod(
        Invocation.setter(
          #channels,
          _channels,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.MisskeyUsers get users => (super.noSuchMethod(
        Invocation.getter(#users),
        returnValue: _FakeMisskeyUsers_4(
          this,
          Invocation.getter(#users),
        ),
        returnValueForMissingStub: _FakeMisskeyUsers_4(
          this,
          Invocation.getter(#users),
        ),
      ) as _i4.MisskeyUsers);
  @override
  set users(_i4.MisskeyUsers? _users) => super.noSuchMethod(
        Invocation.setter(
          #users,
          _users,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.MisskeyI get i => (super.noSuchMethod(
        Invocation.getter(#i),
        returnValue: _FakeMisskeyI_5(
          this,
          Invocation.getter(#i),
        ),
        returnValueForMissingStub: _FakeMisskeyI_5(
          this,
          Invocation.getter(#i),
        ),
      ) as _i4.MisskeyI);
  @override
  set i(_i4.MisskeyI? _i) => super.noSuchMethod(
        Invocation.setter(
          #i,
          _i,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.MisskeyClips get clips => (super.noSuchMethod(
        Invocation.getter(#clips),
        returnValue: _FakeMisskeyClips_6(
          this,
          Invocation.getter(#clips),
        ),
        returnValueForMissingStub: _FakeMisskeyClips_6(
          this,
          Invocation.getter(#clips),
        ),
      ) as _i4.MisskeyClips);
  @override
  set clips(_i4.MisskeyClips? _clips) => super.noSuchMethod(
        Invocation.setter(
          #clips,
          _clips,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.MisskeyAntenna get antennas => (super.noSuchMethod(
        Invocation.getter(#antennas),
        returnValue: _FakeMisskeyAntenna_7(
          this,
          Invocation.getter(#antennas),
        ),
        returnValueForMissingStub: _FakeMisskeyAntenna_7(
          this,
          Invocation.getter(#antennas),
        ),
      ) as _i4.MisskeyAntenna);
  @override
  set antennas(_i4.MisskeyAntenna? _antennas) => super.noSuchMethod(
        Invocation.setter(
          #antennas,
          _antennas,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.MisskeyDrive get drive => (super.noSuchMethod(
        Invocation.getter(#drive),
        returnValue: _FakeMisskeyDrive_8(
          this,
          Invocation.getter(#drive),
        ),
        returnValueForMissingStub: _FakeMisskeyDrive_8(
          this,
          Invocation.getter(#drive),
        ),
      ) as _i4.MisskeyDrive);
  @override
  set drive(_i4.MisskeyDrive? _drive) => super.noSuchMethod(
        Invocation.setter(
          #drive,
          _drive,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.MisskeyFollowing get following => (super.noSuchMethod(
        Invocation.getter(#following),
        returnValue: _FakeMisskeyFollowing_9(
          this,
          Invocation.getter(#following),
        ),
        returnValueForMissingStub: _FakeMisskeyFollowing_9(
          this,
          Invocation.getter(#following),
        ),
      ) as _i4.MisskeyFollowing);
  @override
  set following(_i4.MisskeyFollowing? _following) => super.noSuchMethod(
        Invocation.setter(
          #following,
          _following,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.MisskeyBlocking get blocking => (super.noSuchMethod(
        Invocation.getter(#blocking),
        returnValue: _FakeMisskeyBlocking_10(
          this,
          Invocation.getter(#blocking),
        ),
        returnValueForMissingStub: _FakeMisskeyBlocking_10(
          this,
          Invocation.getter(#blocking),
        ),
      ) as _i4.MisskeyBlocking);
  @override
  set blocking(_i4.MisskeyBlocking? _blocking) => super.noSuchMethod(
        Invocation.setter(
          #blocking,
          _blocking,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.MisskeyMute get mute => (super.noSuchMethod(
        Invocation.getter(#mute),
        returnValue: _FakeMisskeyMute_11(
          this,
          Invocation.getter(#mute),
        ),
        returnValueForMissingStub: _FakeMisskeyMute_11(
          this,
          Invocation.getter(#mute),
        ),
      ) as _i4.MisskeyMute);
  @override
  set mute(_i4.MisskeyMute? _mute) => super.noSuchMethod(
        Invocation.setter(
          #mute,
          _mute,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.MisskeyRenoteMute get renoteMute => (super.noSuchMethod(
        Invocation.getter(#renoteMute),
        returnValue: _FakeMisskeyRenoteMute_12(
          this,
          Invocation.getter(#renoteMute),
        ),
        returnValueForMissingStub: _FakeMisskeyRenoteMute_12(
          this,
          Invocation.getter(#renoteMute),
        ),
      ) as _i4.MisskeyRenoteMute);
  @override
  set renoteMute(_i4.MisskeyRenoteMute? _renoteMute) => super.noSuchMethod(
        Invocation.setter(
          #renoteMute,
          _renoteMute,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.MisskeyFederation get federation => (super.noSuchMethod(
        Invocation.getter(#federation),
        returnValue: _FakeMisskeyFederation_13(
          this,
          Invocation.getter(#federation),
        ),
        returnValueForMissingStub: _FakeMisskeyFederation_13(
          this,
          Invocation.getter(#federation),
        ),
      ) as _i4.MisskeyFederation);
  @override
  set federation(_i4.MisskeyFederation? _federation) => super.noSuchMethod(
        Invocation.setter(
          #federation,
          _federation,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.MisskeyRoles get roles => (super.noSuchMethod(
        Invocation.getter(#roles),
        returnValue: _FakeMisskeyRoles_14(
          this,
          Invocation.getter(#roles),
        ),
        returnValueForMissingStub: _FakeMisskeyRoles_14(
          this,
          Invocation.getter(#roles),
        ),
      ) as _i4.MisskeyRoles);
  @override
  set roles(_i4.MisskeyRoles? _roles) => super.noSuchMethod(
        Invocation.setter(
          #roles,
          _roles,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.MisskeyHashtags get hashtags => (super.noSuchMethod(
        Invocation.getter(#hashtags),
        returnValue: _FakeMisskeyHashtags_15(
          this,
          Invocation.getter(#hashtags),
        ),
        returnValueForMissingStub: _FakeMisskeyHashtags_15(
          this,
          Invocation.getter(#hashtags),
        ),
      ) as _i4.MisskeyHashtags);
  @override
  set hashtags(_i4.MisskeyHashtags? _hashtags) => super.noSuchMethod(
        Invocation.setter(
          #hashtags,
          _hashtags,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.MisskeyAp get ap => (super.noSuchMethod(
        Invocation.getter(#ap),
        returnValue: _FakeMisskeyAp_16(
          this,
          Invocation.getter(#ap),
        ),
        returnValueForMissingStub: _FakeMisskeyAp_16(
          this,
          Invocation.getter(#ap),
        ),
      ) as _i4.MisskeyAp);
  @override
  set ap(_i4.MisskeyAp? _ap) => super.noSuchMethod(
        Invocation.setter(
          #ap,
          _ap,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i14.Future<Iterable<_i4.AnnouncementsResponse>> announcements(
          _i4.AnnouncementsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #announcements,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.AnnouncementsResponse>>.value(
            <_i4.AnnouncementsResponse>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.AnnouncementsResponse>>.value(
                <_i4.AnnouncementsResponse>[]),
      ) as _i14.Future<Iterable<_i4.AnnouncementsResponse>>);
  @override
  _i14.Future<List<String>> endpoints() => (super.noSuchMethod(
        Invocation.method(
          #endpoints,
          [],
        ),
        returnValue: _i14.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i14.Future<List<String>>.value(<String>[]),
      ) as _i14.Future<List<String>>);
  @override
  _i14.Future<_i4.EmojisResponse> emojis() => (super.noSuchMethod(
        Invocation.method(
          #emojis,
          [],
        ),
        returnValue:
            _i14.Future<_i4.EmojisResponse>.value(_FakeEmojisResponse_17(
          this,
          Invocation.method(
            #emojis,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i4.EmojisResponse>.value(_FakeEmojisResponse_17(
          this,
          Invocation.method(
            #emojis,
            [],
          ),
        )),
      ) as _i14.Future<_i4.EmojisResponse>);
  @override
  _i14.Future<_i4.MetaResponse> meta() => (super.noSuchMethod(
        Invocation.method(
          #meta,
          [],
        ),
        returnValue: _i14.Future<_i4.MetaResponse>.value(_FakeMetaResponse_18(
          this,
          Invocation.method(
            #meta,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i4.MetaResponse>.value(_FakeMetaResponse_18(
          this,
          Invocation.method(
            #meta,
            [],
          ),
        )),
      ) as _i14.Future<_i4.MetaResponse>);
  @override
  _i14.Future<_i5.StatsResponse> stats() => (super.noSuchMethod(
        Invocation.method(
          #stats,
          [],
        ),
        returnValue: _i14.Future<_i5.StatsResponse>.value(_FakeStatsResponse_19(
          this,
          Invocation.method(
            #stats,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i5.StatsResponse>.value(_FakeStatsResponse_19(
          this,
          Invocation.method(
            #stats,
            [],
          ),
        )),
      ) as _i14.Future<_i5.StatsResponse>);
  @override
  _i14.Future<_i6.PingResponse> ping() => (super.noSuchMethod(
        Invocation.method(
          #ping,
          [],
        ),
        returnValue: _i14.Future<_i6.PingResponse>.value(_FakePingResponse_20(
          this,
          Invocation.method(
            #ping,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i6.PingResponse>.value(_FakePingResponse_20(
          this,
          Invocation.method(
            #ping,
            [],
          ),
        )),
      ) as _i14.Future<_i6.PingResponse>);
  @override
  _i14.Future<_i4.ServerInfoResponse> serverInfo() => (super.noSuchMethod(
        Invocation.method(
          #serverInfo,
          [],
        ),
        returnValue: _i14.Future<_i4.ServerInfoResponse>.value(
            _FakeServerInfoResponse_21(
          this,
          Invocation.method(
            #serverInfo,
            [],
          ),
        )),
        returnValueForMissingStub: _i14.Future<_i4.ServerInfoResponse>.value(
            _FakeServerInfoResponse_21(
          this,
          Invocation.method(
            #serverInfo,
            [],
          ),
        )),
      ) as _i14.Future<_i4.ServerInfoResponse>);
  @override
  _i14.Future<_i4.GetOnlineUsersCountResponse> getOnlineUsersCount() =>
      (super.noSuchMethod(
        Invocation.method(
          #getOnlineUsersCount,
          [],
        ),
        returnValue: _i14.Future<_i4.GetOnlineUsersCountResponse>.value(
            _FakeGetOnlineUsersCountResponse_22(
          this,
          Invocation.method(
            #getOnlineUsersCount,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i4.GetOnlineUsersCountResponse>.value(
                _FakeGetOnlineUsersCountResponse_22(
          this,
          Invocation.method(
            #getOnlineUsersCount,
            [],
          ),
        )),
      ) as _i14.Future<_i4.GetOnlineUsersCountResponse>);
  @override
  _i14.Future<Iterable<_i4.User>> pinnedUsers() => (super.noSuchMethod(
        Invocation.method(
          #pinnedUsers,
          [],
        ),
        returnValue: _i14.Future<Iterable<_i4.User>>.value(<_i4.User>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.User>>.value(<_i4.User>[]),
      ) as _i14.Future<Iterable<_i4.User>>);
  @override
  _i4.SocketController homeTimelineStream(
    _i14.FutureOr<void> Function(_i4.Note)? onEventReceived,
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineReacted,
    )? onReacted,
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineVoted,
    )? onVoted, {
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineReacted,
    )? onUnreacted,
    _i14.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #homeTimelineStream,
          [
            onEventReceived,
            onReacted,
            onVoted,
          ],
          {
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
          },
        ),
        returnValue: _FakeSocketController_23(
          this,
          Invocation.method(
            #homeTimelineStream,
            [
              onEventReceived,
              onReacted,
              onVoted,
            ],
            {
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_23(
          this,
          Invocation.method(
            #homeTimelineStream,
            [
              onEventReceived,
              onReacted,
              onVoted,
            ],
            {
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
            },
          ),
        ),
      ) as _i4.SocketController);
  @override
  _i4.SocketController localTimelineStream(
    _i14.FutureOr<void> Function(_i4.Note)? onEventReceived,
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineReacted,
    )? onReacted,
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineVoted,
    )? onVoted, {
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineReacted,
    )? onUnreacted,
    _i14.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #localTimelineStream,
          [
            onEventReceived,
            onReacted,
            onVoted,
          ],
          {
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
          },
        ),
        returnValue: _FakeSocketController_23(
          this,
          Invocation.method(
            #localTimelineStream,
            [
              onEventReceived,
              onReacted,
              onVoted,
            ],
            {
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_23(
          this,
          Invocation.method(
            #localTimelineStream,
            [
              onEventReceived,
              onReacted,
              onVoted,
            ],
            {
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
            },
          ),
        ),
      ) as _i4.SocketController);
  @override
  _i4.SocketController globalTimelineStream(
    _i14.FutureOr<void> Function(_i4.Note)? onEventReceived, {
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineReacted,
    )? onReacted,
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineReacted,
    )? onUnreacted,
    _i14.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineVoted,
    )? onVoted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #globalTimelineStream,
          [onEventReceived],
          {
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
          },
        ),
        returnValue: _FakeSocketController_23(
          this,
          Invocation.method(
            #globalTimelineStream,
            [onEventReceived],
            {
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_23(
          this,
          Invocation.method(
            #globalTimelineStream,
            [onEventReceived],
            {
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
      ) as _i4.SocketController);
  @override
  _i4.SocketController hybridTimelineStream(
    _i14.FutureOr<void> Function(_i4.Note)? onEventReceived,
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineReacted,
    )? onReacted,
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineVoted,
    )? onVoted, {
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineReacted,
    )? onUnreacted,
    _i14.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #hybridTimelineStream,
          [
            onEventReceived,
            onReacted,
            onVoted,
          ],
          {
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
          },
        ),
        returnValue: _FakeSocketController_23(
          this,
          Invocation.method(
            #hybridTimelineStream,
            [
              onEventReceived,
              onReacted,
              onVoted,
            ],
            {
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_23(
          this,
          Invocation.method(
            #hybridTimelineStream,
            [
              onEventReceived,
              onReacted,
              onVoted,
            ],
            {
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
            },
          ),
        ),
      ) as _i4.SocketController);
  @override
  _i4.SocketController channelStream(
    String? channelId,
    _i14.FutureOr<void> Function(_i4.Note)? onEventReceived,
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineReacted,
    )? onReacted,
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineVoted,
    )? onVoted, {
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineReacted,
    )? onUnreacted,
    _i14.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #channelStream,
          [
            channelId,
            onEventReceived,
            onReacted,
            onVoted,
          ],
          {
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
          },
        ),
        returnValue: _FakeSocketController_23(
          this,
          Invocation.method(
            #channelStream,
            [
              channelId,
              onEventReceived,
              onReacted,
              onVoted,
            ],
            {
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_23(
          this,
          Invocation.method(
            #channelStream,
            [
              channelId,
              onEventReceived,
              onReacted,
              onVoted,
            ],
            {
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
            },
          ),
        ),
      ) as _i4.SocketController);
  @override
  _i4.SocketController userListStream(
    String? listId,
    _i14.FutureOr<void> Function(_i4.Note)? onEventReceived,
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineReacted,
    )? onReacted, {
    _i14.FutureOr<void> Function(_i4.User)? onUserAdded,
    _i14.FutureOr<void> Function(_i4.User)? onUserRemoved,
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineReacted,
    )? onUnreacted,
    _i14.FutureOr<void> Function(DateTime)? onDeleted,
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineVoted,
    )? onVoted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #userListStream,
          [
            listId,
            onEventReceived,
            onReacted,
          ],
          {
            #onUserAdded: onUserAdded,
            #onUserRemoved: onUserRemoved,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
          },
        ),
        returnValue: _FakeSocketController_23(
          this,
          Invocation.method(
            #userListStream,
            [
              listId,
              onEventReceived,
              onReacted,
            ],
            {
              #onUserAdded: onUserAdded,
              #onUserRemoved: onUserRemoved,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_23(
          this,
          Invocation.method(
            #userListStream,
            [
              listId,
              onEventReceived,
              onReacted,
            ],
            {
              #onUserAdded: onUserAdded,
              #onUserRemoved: onUserRemoved,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
      ) as _i4.SocketController);
  @override
  _i4.SocketController antennaStream(
    String? antennaId,
    _i14.FutureOr<void> Function(_i4.Note)? onEventReceived,
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineReacted,
    )? onReacted,
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineVoted,
    )? onVoted, {
    _i14.FutureOr<void> Function(
      String,
      _i4.TimelineReacted,
    )? onUnreacted,
    _i14.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #antennaStream,
          [
            antennaId,
            onEventReceived,
            onReacted,
            onVoted,
          ],
          {
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
          },
        ),
        returnValue: _FakeSocketController_23(
          this,
          Invocation.method(
            #antennaStream,
            [
              antennaId,
              onEventReceived,
              onReacted,
              onVoted,
            ],
            {
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_23(
          this,
          Invocation.method(
            #antennaStream,
            [
              antennaId,
              onEventReceived,
              onReacted,
              onVoted,
            ],
            {
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
            },
          ),
        ),
      ) as _i4.SocketController);
  @override
  _i4.SocketController serverStatsLogStream(
    _i14.FutureOr<void> Function(List<_i4.StatsLogResponse>)? onLogReceived,
    _i14.FutureOr<void> Function(_i4.StatsLogResponse)? onEventReceived,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #serverStatsLogStream,
          [
            onLogReceived,
            onEventReceived,
          ],
        ),
        returnValue: _FakeSocketController_23(
          this,
          Invocation.method(
            #serverStatsLogStream,
            [
              onLogReceived,
              onEventReceived,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_23(
          this,
          Invocation.method(
            #serverStatsLogStream,
            [
              onLogReceived,
              onEventReceived,
            ],
          ),
        ),
      ) as _i4.SocketController);
  @override
  _i4.SocketController mainStream({
    _i14.FutureOr<void> Function(_i4.Emoji)? onEmojiAdded,
    _i14.FutureOr<void> Function(Iterable<_i4.Emoji>)? onEmojiUpdated,
    _i14.FutureOr<void> Function(Iterable<_i4.Emoji>)? onEmojiDeleted,
    _i14.FutureOr<void> Function(_i4.INotificationsResponse)? onNotification,
    _i14.FutureOr<void> Function(_i4.Note)? onMention,
    _i14.FutureOr<void> Function(_i4.Note)? onReply,
    _i14.FutureOr<void> Function(_i4.Note)? onRenote,
    _i14.FutureOr<void> Function(_i4.User)? onFollow,
    _i14.FutureOr<void> Function(_i4.User)? onFollowed,
    _i14.FutureOr<void> Function(_i4.User)? onUnfollow,
    _i14.FutureOr<void> Function(_i4.User)? onMeUpdated,
    _i14.FutureOr<void> Function()? onReadAllNotifications,
    _i14.FutureOr<void> Function(_i4.INotificationsResponse)?
        onUnreadNotification,
    _i14.FutureOr<void> Function(String)? onUnreadMention,
    _i14.FutureOr<void> Function()? onReadAllUnreadMentions,
    _i14.FutureOr<void> Function(String)? onUnreadSpecifiedNote,
    _i14.FutureOr<void> Function()? onReadAllUnreadSpecifiedNotes,
    _i14.FutureOr<void> Function(_i4.User)? onReceiveFollowRequest,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #mainStream,
          [],
          {
            #onEmojiAdded: onEmojiAdded,
            #onEmojiUpdated: onEmojiUpdated,
            #onEmojiDeleted: onEmojiDeleted,
            #onNotification: onNotification,
            #onMention: onMention,
            #onReply: onReply,
            #onRenote: onRenote,
            #onFollow: onFollow,
            #onFollowed: onFollowed,
            #onUnfollow: onUnfollow,
            #onMeUpdated: onMeUpdated,
            #onReadAllNotifications: onReadAllNotifications,
            #onUnreadNotification: onUnreadNotification,
            #onUnreadMention: onUnreadMention,
            #onReadAllUnreadMentions: onReadAllUnreadMentions,
            #onUnreadSpecifiedNote: onUnreadSpecifiedNote,
            #onReadAllUnreadSpecifiedNotes: onReadAllUnreadSpecifiedNotes,
            #onReceiveFollowRequest: onReceiveFollowRequest,
          },
        ),
        returnValue: _FakeSocketController_23(
          this,
          Invocation.method(
            #mainStream,
            [],
            {
              #onEmojiAdded: onEmojiAdded,
              #onEmojiUpdated: onEmojiUpdated,
              #onEmojiDeleted: onEmojiDeleted,
              #onNotification: onNotification,
              #onMention: onMention,
              #onReply: onReply,
              #onRenote: onRenote,
              #onFollow: onFollow,
              #onFollowed: onFollowed,
              #onUnfollow: onUnfollow,
              #onMeUpdated: onMeUpdated,
              #onReadAllNotifications: onReadAllNotifications,
              #onUnreadNotification: onUnreadNotification,
              #onUnreadMention: onUnreadMention,
              #onReadAllUnreadMentions: onReadAllUnreadMentions,
              #onUnreadSpecifiedNote: onUnreadSpecifiedNote,
              #onReadAllUnreadSpecifiedNotes: onReadAllUnreadSpecifiedNotes,
              #onReceiveFollowRequest: onReceiveFollowRequest,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_23(
          this,
          Invocation.method(
            #mainStream,
            [],
            {
              #onEmojiAdded: onEmojiAdded,
              #onEmojiUpdated: onEmojiUpdated,
              #onEmojiDeleted: onEmojiDeleted,
              #onNotification: onNotification,
              #onMention: onMention,
              #onReply: onReply,
              #onRenote: onRenote,
              #onFollow: onFollow,
              #onFollowed: onFollowed,
              #onUnfollow: onUnfollow,
              #onMeUpdated: onMeUpdated,
              #onReadAllNotifications: onReadAllNotifications,
              #onUnreadNotification: onUnreadNotification,
              #onUnreadMention: onUnreadMention,
              #onReadAllUnreadMentions: onReadAllUnreadMentions,
              #onUnreadSpecifiedNote: onUnreadSpecifiedNote,
              #onReadAllUnreadSpecifiedNotes: onReadAllUnreadSpecifiedNotes,
              #onReceiveFollowRequest: onReceiveFollowRequest,
            },
          ),
        ),
      ) as _i4.SocketController);
}

/// A class which mocks [MisskeyNotes].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyNotes extends _i1.Mock implements _i4.MisskeyNotes {
  @override
  _i4.MisskeyNotesReactions get reactions => (super.noSuchMethod(
        Invocation.getter(#reactions),
        returnValue: _FakeMisskeyNotesReactions_24(
          this,
          Invocation.getter(#reactions),
        ),
        returnValueForMissingStub: _FakeMisskeyNotesReactions_24(
          this,
          Invocation.getter(#reactions),
        ),
      ) as _i4.MisskeyNotesReactions);
  @override
  _i4.MisskeyNotesFavorites get favorites => (super.noSuchMethod(
        Invocation.getter(#favorites),
        returnValue: _FakeMisskeyNotesFavorites_25(
          this,
          Invocation.getter(#favorites),
        ),
        returnValueForMissingStub: _FakeMisskeyNotesFavorites_25(
          this,
          Invocation.getter(#favorites),
        ),
      ) as _i4.MisskeyNotesFavorites);
  @override
  _i4.MisskeyNotesPolls get polls => (super.noSuchMethod(
        Invocation.getter(#polls),
        returnValue: _FakeMisskeyNotesPolls_26(
          this,
          Invocation.getter(#polls),
        ),
        returnValueForMissingStub: _FakeMisskeyNotesPolls_26(
          this,
          Invocation.getter(#polls),
        ),
      ) as _i4.MisskeyNotesPolls);
  @override
  _i4.MisskeyNotesThreadMuting get threadMuting => (super.noSuchMethod(
        Invocation.getter(#threadMuting),
        returnValue: _FakeMisskeyNotesThreadMuting_27(
          this,
          Invocation.getter(#threadMuting),
        ),
        returnValueForMissingStub: _FakeMisskeyNotesThreadMuting_27(
          this,
          Invocation.getter(#threadMuting),
        ),
      ) as _i4.MisskeyNotesThreadMuting);
  @override
  _i14.Future<void> create(_i4.NotesCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> delete(_i4.NotesDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<Iterable<_i4.Note>> notes(_i4.NotesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #notes,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
      ) as _i14.Future<Iterable<_i4.Note>>);
  @override
  _i14.Future<_i4.Note> show(_i4.NotesShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue: _i14.Future<_i4.Note>.value(_FakeNote_28(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub: _i14.Future<_i4.Note>.value(_FakeNote_28(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i14.Future<_i4.Note>);
  @override
  _i14.Future<Iterable<_i4.Note>> homeTimeline(
          _i4.NotesTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #homeTimeline,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
      ) as _i14.Future<Iterable<_i4.Note>>);
  @override
  _i14.Future<Iterable<_i4.Note>> localTimeline(
          _i4.NotesLocalTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #localTimeline,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
      ) as _i14.Future<Iterable<_i4.Note>>);
  @override
  _i14.Future<Iterable<_i4.Note>> hybridTimeline(
          _i4.NotesHybridTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #hybridTimeline,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
      ) as _i14.Future<Iterable<_i4.Note>>);
  @override
  _i14.Future<Iterable<_i4.Note>> globalTimeline(
          _i4.NotesGlobalTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #globalTimeline,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
      ) as _i14.Future<Iterable<_i4.Note>>);
  @override
  _i14.Future<Iterable<_i4.Note>> userListTimeline(
          _i4.UserListTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #userListTimeline,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
      ) as _i14.Future<Iterable<_i4.Note>>);
  @override
  _i14.Future<_i4.NotesStateResponse> state(_i4.NotesStateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #state,
          [request],
        ),
        returnValue: _i14.Future<_i4.NotesStateResponse>.value(
            _FakeNotesStateResponse_29(
          this,
          Invocation.method(
            #state,
            [request],
          ),
        )),
        returnValueForMissingStub: _i14.Future<_i4.NotesStateResponse>.value(
            _FakeNotesStateResponse_29(
          this,
          Invocation.method(
            #state,
            [request],
          ),
        )),
      ) as _i14.Future<_i4.NotesStateResponse>);
  @override
  _i14.Future<Iterable<_i4.Note>> search(_i4.NotesSearchRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
      ) as _i14.Future<Iterable<_i4.Note>>);
  @override
  _i14.Future<Iterable<_i4.Note>> searchByTag(
          _i4.NotesSearchByTagRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchByTag,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
      ) as _i14.Future<Iterable<_i4.Note>>);
  @override
  _i14.Future<Iterable<_i4.Note>> renotes(_i4.NotesRenoteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #renotes,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
      ) as _i14.Future<Iterable<_i4.Note>>);
  @override
  _i14.Future<Iterable<_i4.Note>> replies(_i4.NotesRepliesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #replies,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
      ) as _i14.Future<Iterable<_i4.Note>>);
  @override
  _i14.Future<Iterable<_i4.Note>> children(_i4.NotesChildrenRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #children,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
      ) as _i14.Future<Iterable<_i4.Note>>);
  @override
  _i14.Future<Iterable<_i4.Note>> conversation(
          _i4.NotesConversationRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #conversation,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
      ) as _i14.Future<Iterable<_i4.Note>>);
  @override
  _i14.Future<Iterable<_i4.Note>> featured(_i4.NotesFeaturedRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #featured,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
      ) as _i14.Future<Iterable<_i4.Note>>);
  @override
  _i14.Future<Iterable<_i4.Note>> mentions(_i4.NotesMentionsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #mentions,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
      ) as _i14.Future<Iterable<_i4.Note>>);
  @override
  _i14.Future<Iterable<_i4.Clip>> clips(_i4.NotesClipsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #clips,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.Clip>>.value(<_i4.Clip>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.Clip>>.value(<_i4.Clip>[]),
      ) as _i14.Future<Iterable<_i4.Clip>>);
  @override
  _i14.Future<void> unrenote(_i4.NotesUnrenoteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #unrenote,
          [request],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
}

/// A class which mocks [MisskeyUsers].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyUsers extends _i1.Mock implements _i4.MisskeyUsers {
  @override
  _i4.MisskeyUsersLists get list => (super.noSuchMethod(
        Invocation.getter(#list),
        returnValue: _FakeMisskeyUsersLists_30(
          this,
          Invocation.getter(#list),
        ),
        returnValueForMissingStub: _FakeMisskeyUsersLists_30(
          this,
          Invocation.getter(#list),
        ),
      ) as _i4.MisskeyUsersLists);
  @override
  _i14.Future<_i4.UsersShowResponse> show(_i4.UsersShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue:
            _i14.Future<_i4.UsersShowResponse>.value(_FakeUsersShowResponse_31(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i4.UsersShowResponse>.value(_FakeUsersShowResponse_31(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i14.Future<_i4.UsersShowResponse>);
  @override
  _i14.Future<Iterable<_i4.UsersShowResponse>> showByIds(
          _i4.UsersShowByIdsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #showByIds,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.UsersShowResponse>>.value(
            <_i4.UsersShowResponse>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.UsersShowResponse>>.value(
                <_i4.UsersShowResponse>[]),
      ) as _i14.Future<Iterable<_i4.UsersShowResponse>>);
  @override
  _i14.Future<_i4.UsersShowResponse> showByName(
          _i4.UsersShowByUserNameRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #showByName,
          [request],
        ),
        returnValue:
            _i14.Future<_i4.UsersShowResponse>.value(_FakeUsersShowResponse_31(
          this,
          Invocation.method(
            #showByName,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i4.UsersShowResponse>.value(_FakeUsersShowResponse_31(
          this,
          Invocation.method(
            #showByName,
            [request],
          ),
        )),
      ) as _i14.Future<_i4.UsersShowResponse>);
  @override
  _i14.Future<Iterable<_i4.Note>> notes(_i4.UsersNotesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #notes,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
      ) as _i14.Future<Iterable<_i4.Note>>);
  @override
  _i14.Future<Iterable<_i4.Clip>> clips(_i4.UsersClipsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #clips,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.Clip>>.value(<_i4.Clip>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.Clip>>.value(<_i4.Clip>[]),
      ) as _i14.Future<Iterable<_i4.Clip>>);
  @override
  _i14.Future<Iterable<_i4.Following>> followers(
          _i4.UsersFollowersRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #followers,
          [request],
        ),
        returnValue:
            _i14.Future<Iterable<_i4.Following>>.value(<_i4.Following>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.Following>>.value(<_i4.Following>[]),
      ) as _i14.Future<Iterable<_i4.Following>>);
  @override
  _i14.Future<Iterable<_i4.Following>> following(
          _i4.UsersFollowingRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #following,
          [request],
        ),
        returnValue:
            _i14.Future<Iterable<_i4.Following>>.value(<_i4.Following>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.Following>>.value(<_i4.Following>[]),
      ) as _i14.Future<Iterable<_i4.Following>>);
  @override
  _i14.Future<void> reportAbuse(_i4.UsersReportAbuseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #reportAbuse,
          [request],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<Iterable<_i4.UsersReactionsResponse>> reactions(
          _i4.UsersReactionsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #reactions,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.UsersReactionsResponse>>.value(
            <_i4.UsersReactionsResponse>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.UsersReactionsResponse>>.value(
                <_i4.UsersReactionsResponse>[]),
      ) as _i14.Future<Iterable<_i4.UsersReactionsResponse>>);
  @override
  _i14.Future<Iterable<_i4.User>> search(_i4.UsersSearchRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.User>>.value(<_i4.User>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.User>>.value(<_i4.User>[]),
      ) as _i14.Future<Iterable<_i4.User>>);
  @override
  _i14.Future<Iterable<_i4.User>> recommendation(
          _i4.UsersRecommendationRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #recommendation,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.User>>.value(<_i4.User>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.User>>.value(<_i4.User>[]),
      ) as _i14.Future<Iterable<_i4.User>>);
  @override
  _i14.Future<Iterable<_i4.User>> users(_i4.UsersUsersRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #users,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.User>>.value(<_i4.User>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.User>>.value(<_i4.User>[]),
      ) as _i14.Future<Iterable<_i4.User>>);
  @override
  _i14.Future<void> updateMemo(_i4.UsersUpdateMemoRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMemo,
          [request],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
}

/// A class which mocks [MisskeyChannels].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyChannels extends _i1.Mock implements _i4.MisskeyChannels {
  @override
  _i14.Future<Iterable<_i4.Note>> timeline(
          _i4.ChannelsTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #timeline,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.Note>>.value(<_i4.Note>[]),
      ) as _i14.Future<Iterable<_i4.Note>>);
  @override
  _i4.SocketController channelTimelineStream(
    String? channelId,
    _i14.FutureOr<void> Function(_i4.Note)? onEventReceived,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #channelTimelineStream,
          [
            channelId,
            onEventReceived,
          ],
        ),
        returnValue: _FakeSocketController_23(
          this,
          Invocation.method(
            #channelTimelineStream,
            [
              channelId,
              onEventReceived,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_23(
          this,
          Invocation.method(
            #channelTimelineStream,
            [
              channelId,
              onEventReceived,
            ],
          ),
        ),
      ) as _i4.SocketController);
  @override
  _i14.Future<_i4.CommunityChannel> show(_i4.ChannelsShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue:
            _i14.Future<_i4.CommunityChannel>.value(_FakeCommunityChannel_32(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i4.CommunityChannel>.value(_FakeCommunityChannel_32(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i14.Future<_i4.CommunityChannel>);
  @override
  _i14.Future<Iterable<_i4.CommunityChannel>> followed(
          _i4.ChannelsFollowedRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #followed,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.CommunityChannel>>.value(
            <_i4.CommunityChannel>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.CommunityChannel>>.value(
                <_i4.CommunityChannel>[]),
      ) as _i14.Future<Iterable<_i4.CommunityChannel>>);
  @override
  _i14.Future<Iterable<_i4.CommunityChannel>> myFavorite(
          _i4.ChannelsMyFavoriteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #myFavorite,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.CommunityChannel>>.value(
            <_i4.CommunityChannel>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.CommunityChannel>>.value(
                <_i4.CommunityChannel>[]),
      ) as _i14.Future<Iterable<_i4.CommunityChannel>>);
  @override
  _i14.Future<Iterable<_i4.CommunityChannel>> featured() => (super.noSuchMethod(
        Invocation.method(
          #featured,
          [],
        ),
        returnValue: _i14.Future<Iterable<_i4.CommunityChannel>>.value(
            <_i4.CommunityChannel>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.CommunityChannel>>.value(
                <_i4.CommunityChannel>[]),
      ) as _i14.Future<Iterable<_i4.CommunityChannel>>);
  @override
  _i14.Future<Iterable<_i4.CommunityChannel>> owned(
          _i4.ChannelsOwnedRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #owned,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.CommunityChannel>>.value(
            <_i4.CommunityChannel>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.CommunityChannel>>.value(
                <_i4.CommunityChannel>[]),
      ) as _i14.Future<Iterable<_i4.CommunityChannel>>);
  @override
  _i14.Future<Iterable<_i4.CommunityChannel>> search(
          _i4.ChannelsSearchRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [request],
        ),
        returnValue: _i14.Future<Iterable<_i4.CommunityChannel>>.value(
            <_i4.CommunityChannel>[]),
        returnValueForMissingStub:
            _i14.Future<Iterable<_i4.CommunityChannel>>.value(
                <_i4.CommunityChannel>[]),
      ) as _i14.Future<Iterable<_i4.CommunityChannel>>);
  @override
  _i14.Future<_i4.CommunityChannel> create(
          _i4.ChannelsCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue:
            _i14.Future<_i4.CommunityChannel>.value(_FakeCommunityChannel_32(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i4.CommunityChannel>.value(_FakeCommunityChannel_32(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
      ) as _i14.Future<_i4.CommunityChannel>);
  @override
  _i14.Future<void> update(_i4.ChannelsUpdateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [request],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> favorite(_i4.ChannelsFavoriteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #favorite,
          [request],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> unfavorite(_i4.ChannelsUnfavoriteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #unfavorite,
          [request],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> follow(_i4.ChannelsFollowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #follow,
          [request],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> unfollow(_i4.ChannelsUnfollowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #unfollow,
          [request],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i18.Dio {
  @override
  _i7.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_33(
          this,
          Invocation.getter(#options),
        ),
        returnValueForMissingStub: _FakeBaseOptions_33(
          this,
          Invocation.getter(#options),
        ),
      ) as _i7.BaseOptions);
  @override
  set options(_i7.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_34(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
        returnValueForMissingStub: _FakeHttpClientAdapter_34(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i8.HttpClientAdapter);
  @override
  set httpClientAdapter(_i8.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_35(
          this,
          Invocation.getter(#transformer),
        ),
        returnValueForMissingStub: _FakeTransformer_35(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i9.Transformer);
  @override
  set transformer(_i9.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_36(
          this,
          Invocation.getter(#interceptors),
        ),
        returnValueForMissingStub: _FakeInterceptors_36(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i10.Interceptors);
  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i14.Future<_i11.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i7.Options? options,
    _i19.CancelToken? cancelToken,
    _i7.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i11.Response<T>>);
  @override
  _i14.Future<_i11.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i7.Options? options,
    _i19.CancelToken? cancelToken,
    _i7.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i11.Response<T>>);
  @override
  _i14.Future<_i11.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i7.Options? options,
    _i19.CancelToken? cancelToken,
    _i7.ProgressCallback? onSendProgress,
    _i7.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i11.Response<T>>);
  @override
  _i14.Future<_i11.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i7.Options? options,
    _i19.CancelToken? cancelToken,
    _i7.ProgressCallback? onSendProgress,
    _i7.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i11.Response<T>>);
  @override
  _i14.Future<_i11.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i7.Options? options,
    _i19.CancelToken? cancelToken,
    _i7.ProgressCallback? onSendProgress,
    _i7.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i11.Response<T>>);
  @override
  _i14.Future<_i11.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i7.Options? options,
    _i19.CancelToken? cancelToken,
    _i7.ProgressCallback? onSendProgress,
    _i7.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i11.Response<T>>);
  @override
  _i14.Future<_i11.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i7.Options? options,
    _i19.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i14.Future<_i11.Response<T>>);
  @override
  _i14.Future<_i11.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i7.Options? options,
    _i19.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i14.Future<_i11.Response<T>>);
  @override
  _i14.Future<_i11.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i7.Options? options,
    _i19.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i14.Future<_i11.Response<T>>);
  @override
  _i14.Future<_i11.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i7.Options? options,
    _i19.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i14.Future<_i11.Response<T>>);
  @override
  _i14.Future<_i11.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i7.Options? options,
    _i19.CancelToken? cancelToken,
    _i7.ProgressCallback? onSendProgress,
    _i7.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i11.Response<T>>);
  @override
  _i14.Future<_i11.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i7.Options? options,
    _i19.CancelToken? cancelToken,
    _i7.ProgressCallback? onSendProgress,
    _i7.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i11.Response<T>>);
  @override
  _i14.Future<_i11.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i7.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i19.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i7.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i14.Future<_i11.Response<dynamic>>.value(_FakeResponse_37<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i11.Response<dynamic>>.value(_FakeResponse_37<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i14.Future<_i11.Response<dynamic>>);
  @override
  _i14.Future<_i11.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i7.ProgressCallback? onReceiveProgress,
    _i19.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i7.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i14.Future<_i11.Response<dynamic>>.value(_FakeResponse_37<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i11.Response<dynamic>>.value(_FakeResponse_37<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i14.Future<_i11.Response<dynamic>>);
  @override
  _i14.Future<_i11.Response<T>> request<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i19.CancelToken? cancelToken,
    _i7.Options? options,
    _i7.ProgressCallback? onSendProgress,
    _i7.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #request,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #request,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i11.Response<T>>);
  @override
  _i14.Future<_i11.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i19.CancelToken? cancelToken,
    _i7.Options? options,
    _i7.ProgressCallback? onSendProgress,
    _i7.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i14.Future<_i11.Response<T>>);
  @override
  _i14.Future<_i11.Response<T>> fetch<T>(_i7.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i11.Response<T>>.value(_FakeResponse_37<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i14.Future<_i11.Response<T>>);
}
