// Mocks generated by Mockito 5.4.4 from annotations
// in miria/test/test_util/mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i16;
import 'dart:collection' as _i27;
import 'dart:io' as _i10;
import 'dart:typed_data' as _i26;
import 'dart:ui' as _i17;

import 'package:dio/dio.dart' as _i9;
import 'package:file/file.dart' as _i12;
import 'package:file_picker/file_picker.dart' as _i29;
import 'package:flutter_cache_manager/flutter_cache_manager.dart' as _i13;
import 'package:miria/model/account.dart' as _i7;
import 'package:miria/model/account_settings.dart' as _i2;
import 'package:miria/model/acct.dart' as _i19;
import 'package:miria/model/general_settings.dart' as _i3;
import 'package:miria/model/misskey_emoji_data.dart' as _i21;
import 'package:miria/model/tab_setting.dart' as _i15;
import 'package:miria/repository/account_repository.dart' as _i23;
import 'package:miria/repository/account_settings_repository.dart' as _i18;
import 'package:miria/repository/emoji_repository.dart' as _i20;
import 'package:miria/repository/general_settings_repository.dart' as _i22;
import 'package:miria/repository/note_repository.dart' as _i24;
import 'package:miria/repository/shared_preference_controller.dart' as _i4;
import 'package:miria/repository/tab_settings_repository.dart' as _i14;
import 'package:misskey_dart/misskey_dart.dart' as _i6;
import 'package:misskey_dart/src/services/api_service.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i25;
import 'package:riverpod_annotation/riverpod_annotation.dart' as _i5;
import 'package:url_launcher_platform_interface/url_launcher_platform_interface.dart'
    as _i30;
import 'package:web_socket_channel/web_socket_channel.dart' as _i11;

import 'mock.dart' as _i28;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAccountSettings_0 extends _i1.SmartFake
    implements _i2.AccountSettings {
  _FakeAccountSettings_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGeneralSettings_1 extends _i1.SmartFake
    implements _i3.GeneralSettings {
  _FakeGeneralSettings_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSharedPreferenceController_2 extends _i1.SmartFake
    implements _i4.SharedPreferenceController {
  _FakeSharedPreferenceController_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAutoDisposeNotifierProviderRef_3<T> extends _i1.SmartFake
    implements _i5.AutoDisposeNotifierProviderRef<T> {
  _FakeAutoDisposeNotifierProviderRef_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskey_4 extends _i1.SmartFake implements _i6.Misskey {
  _FakeMisskey_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAccount_5 extends _i1.SmartFake implements _i7.Account {
  _FakeAccount_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiService_6 extends _i1.SmartFake implements _i8.ApiService {
  _FakeApiService_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamingService_7 extends _i1.SmartFake
    implements _i6.StreamingService {
  _FakeStreamingService_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotes_8 extends _i1.SmartFake implements _i6.MisskeyNotes {
  _FakeMisskeyNotes_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyChannels_9 extends _i1.SmartFake
    implements _i6.MisskeyChannels {
  _FakeMisskeyChannels_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyUsers_10 extends _i1.SmartFake implements _i6.MisskeyUsers {
  _FakeMisskeyUsers_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyI_11 extends _i1.SmartFake implements _i6.MisskeyI {
  _FakeMisskeyI_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyClips_12 extends _i1.SmartFake implements _i6.MisskeyClips {
  _FakeMisskeyClips_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyAntenna_13 extends _i1.SmartFake
    implements _i6.MisskeyAntenna {
  _FakeMisskeyAntenna_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyDrive_14 extends _i1.SmartFake implements _i6.MisskeyDrive {
  _FakeMisskeyDrive_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyFollowing_15 extends _i1.SmartFake
    implements _i6.MisskeyFollowing {
  _FakeMisskeyFollowing_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyBlocking_16 extends _i1.SmartFake
    implements _i6.MisskeyBlocking {
  _FakeMisskeyBlocking_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyMute_17 extends _i1.SmartFake implements _i6.MisskeyMute {
  _FakeMisskeyMute_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyRenoteMute_18 extends _i1.SmartFake
    implements _i6.MisskeyRenoteMute {
  _FakeMisskeyRenoteMute_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyFederation_19 extends _i1.SmartFake
    implements _i6.MisskeyFederation {
  _FakeMisskeyFederation_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyRoles_20 extends _i1.SmartFake implements _i6.MisskeyRoles {
  _FakeMisskeyRoles_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyHashtags_21 extends _i1.SmartFake
    implements _i6.MisskeyHashtags {
  _FakeMisskeyHashtags_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyAp_22 extends _i1.SmartFake implements _i6.MisskeyAp {
  _FakeMisskeyAp_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyPages_23 extends _i1.SmartFake implements _i6.MisskeyPages {
  _FakeMisskeyPages_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyReversi_24 extends _i1.SmartFake
    implements _i6.MisskeyReversi {
  _FakeMisskeyReversi_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyBubbleGame_25 extends _i1.SmartFake
    implements _i6.MisskeyBubbleGame {
  _FakeMisskeyBubbleGame_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEmojisResponse_26 extends _i1.SmartFake
    implements _i6.EmojisResponse {
  _FakeEmojisResponse_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEmojiResponse_27 extends _i1.SmartFake implements _i6.EmojiResponse {
  _FakeEmojiResponse_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMetaResponse_28 extends _i1.SmartFake implements _i6.MetaResponse {
  _FakeMetaResponse_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeServerInfoResponse_29 extends _i1.SmartFake
    implements _i6.ServerInfoResponse {
  _FakeServerInfoResponse_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetOnlineUsersCountResponse_30 extends _i1.SmartFake
    implements _i6.GetOnlineUsersCountResponse {
  _FakeGetOnlineUsersCountResponse_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSocketController_31 extends _i1.SmartFake
    implements _i6.SocketController {
  _FakeSocketController_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAntenna_32 extends _i1.SmartFake implements _i6.Antenna {
  _FakeAntenna_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApShowResponse_33 extends _i1.SmartFake
    implements _i6.ApShowResponse {
  _FakeApShowResponse_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCommunityChannel_34 extends _i1.SmartFake
    implements _i6.CommunityChannel {
  _FakeCommunityChannel_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClip_35 extends _i1.SmartFake implements _i6.Clip {
  _FakeClip_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyDriveFiles_36 extends _i1.SmartFake
    implements _i6.MisskeyDriveFiles {
  _FakeMisskeyDriveFiles_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyDriveFolders_37 extends _i1.SmartFake
    implements _i6.MisskeyDriveFolders {
  _FakeMisskeyDriveFolders_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDriveFolder_38 extends _i1.SmartFake implements _i6.DriveFolder {
  _FakeDriveFolder_38(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDriveFile_39 extends _i1.SmartFake implements _i6.DriveFile {
  _FakeDriveFile_39(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFederationShowInstanceResponse_40 extends _i1.SmartFake
    implements _i6.FederationShowInstanceResponse {
  _FakeFederationShowInstanceResponse_40(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyFollowingRequests_41 extends _i1.SmartFake
    implements _i6.MisskeyFollowingRequests {
  _FakeMisskeyFollowingRequests_41(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserLite_42 extends _i1.SmartFake implements _i6.UserLite {
  _FakeUserLite_42(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHashtag_43 extends _i1.SmartFake implements _i6.Hashtag {
  _FakeHashtag_43(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyIRegistry_44 extends _i1.SmartFake
    implements _i6.MisskeyIRegistry {
  _FakeMisskeyIRegistry_44(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMeDetailed_45 extends _i1.SmartFake implements _i6.MeDetailed {
  _FakeMeDetailed_45(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotesReactions_46 extends _i1.SmartFake
    implements _i6.MisskeyNotesReactions {
  _FakeMisskeyNotesReactions_46(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotesFavorites_47 extends _i1.SmartFake
    implements _i6.MisskeyNotesFavorites {
  _FakeMisskeyNotesFavorites_47(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotesPolls_48 extends _i1.SmartFake
    implements _i6.MisskeyNotesPolls {
  _FakeMisskeyNotesPolls_48(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotesThreadMuting_49 extends _i1.SmartFake
    implements _i6.MisskeyNotesThreadMuting {
  _FakeMisskeyNotesThreadMuting_49(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNote_50 extends _i1.SmartFake implements _i6.Note {
  _FakeNote_50(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotesStateResponse_51 extends _i1.SmartFake
    implements _i6.NotesStateResponse {
  _FakeNotesStateResponse_51(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotesTranslateResponse_52 extends _i1.SmartFake
    implements _i6.NotesTranslateResponse {
  _FakeNotesTranslateResponse_52(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRolesListResponse_53 extends _i1.SmartFake
    implements _i6.RolesListResponse {
  _FakeRolesListResponse_53(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyUsersLists_54 extends _i1.SmartFake
    implements _i6.MisskeyUsersLists {
  _FakeMisskeyUsersLists_54(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserDetailed_55 extends _i1.SmartFake implements _i6.UserDetailed {
  _FakeUserDetailed_55(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseOptions_56 extends _i1.SmartFake implements _i9.BaseOptions {
  _FakeBaseOptions_56(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_57 extends _i1.SmartFake
    implements _i9.HttpClientAdapter {
  _FakeHttpClientAdapter_57(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_58 extends _i1.SmartFake implements _i9.Transformer {
  _FakeTransformer_58(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_59 extends _i1.SmartFake implements _i9.Interceptors {
  _FakeInterceptors_59(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_60<T1> extends _i1.SmartFake implements _i9.Response<T1> {
  _FakeResponse_60(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_61 extends _i1.SmartFake implements Duration {
  _FakeDuration_61(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientRequest_62 extends _i1.SmartFake
    implements _i10.HttpClientRequest {
  _FakeHttpClientRequest_62(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebSocketChannel_63 extends _i1.SmartFake
    implements _i11.WebSocketChannel {
  _FakeWebSocketChannel_63(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFile_64 extends _i1.SmartFake implements _i12.File {
  _FakeFile_64(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFileInfo_65 extends _i1.SmartFake implements _i13.FileInfo {
  _FakeFileInfo_65(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TabSettingsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTabSettingsRepository extends _i1.Mock
    implements _i14.TabSettingsRepository {
  @override
  Iterable<_i15.TabSetting> get tabSettings => (super.noSuchMethod(
        Invocation.getter(#tabSettings),
        returnValue: <_i15.TabSetting>[],
        returnValueForMissingStub: <_i15.TabSetting>[],
      ) as Iterable<_i15.TabSetting>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i16.Future<void> load() => (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> save(List<_i15.TabSetting>? tabSettings) =>
      (super.noSuchMethod(
        Invocation.method(
          #save,
          [tabSettings],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> removeAccount(_i7.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #removeAccount,
          [account],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> initializeTabSettings(_i7.Account? account) =>
      (super.noSuchMethod(
        Invocation.method(
          #initializeTabSettings,
          [account],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  void addListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AccountSettingsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountSettingsRepository extends _i1.Mock
    implements _i18.AccountSettingsRepository {
  @override
  Iterable<_i2.AccountSettings> get accountSettings => (super.noSuchMethod(
        Invocation.getter(#accountSettings),
        returnValue: <_i2.AccountSettings>[],
        returnValueForMissingStub: <_i2.AccountSettings>[],
      ) as Iterable<_i2.AccountSettings>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i16.Future<void> load() => (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> save(_i2.AccountSettings? settings) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [settings],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> removeAccount(_i7.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #removeAccount,
          [account],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i2.AccountSettings fromAcct(_i19.Acct? acct) => (super.noSuchMethod(
        Invocation.method(
          #fromAcct,
          [acct],
        ),
        returnValue: _FakeAccountSettings_0(
          this,
          Invocation.method(
            #fromAcct,
            [acct],
          ),
        ),
        returnValueForMissingStub: _FakeAccountSettings_0(
          this,
          Invocation.method(
            #fromAcct,
            [acct],
          ),
        ),
      ) as _i2.AccountSettings);

  @override
  _i2.AccountSettings fromAccount(_i7.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #fromAccount,
          [account],
        ),
        returnValue: _FakeAccountSettings_0(
          this,
          Invocation.method(
            #fromAccount,
            [account],
          ),
        ),
        returnValueForMissingStub: _FakeAccountSettings_0(
          this,
          Invocation.method(
            #fromAccount,
            [account],
          ),
        ),
      ) as _i2.AccountSettings);

  @override
  void addListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [EmojiRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockEmojiRepository extends _i1.Mock implements _i20.EmojiRepository {
  @override
  set emoji(List<_i20.EmojiRepositoryData>? _emoji) => super.noSuchMethod(
        Invocation.setter(
          #emoji,
          _emoji,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.Future<void> loadFromSourceIfNeed() => (super.noSuchMethod(
        Invocation.method(
          #loadFromSourceIfNeed,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> loadFromSource() => (super.noSuchMethod(
        Invocation.method(
          #loadFromSource,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> loadFromLocalCache() => (super.noSuchMethod(
        Invocation.method(
          #loadFromLocalCache,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<List<_i21.MisskeyEmojiData>> searchEmojis(
    String? name, {
    int? limit = 30,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchEmojis,
          [name],
          {#limit: limit},
        ),
        returnValue: _i16.Future<List<_i21.MisskeyEmojiData>>.value(
            <_i21.MisskeyEmojiData>[]),
        returnValueForMissingStub:
            _i16.Future<List<_i21.MisskeyEmojiData>>.value(
                <_i21.MisskeyEmojiData>[]),
      ) as _i16.Future<List<_i21.MisskeyEmojiData>>);

  @override
  List<_i21.MisskeyEmojiData> defaultEmojis({int? limit}) =>
      (super.noSuchMethod(
        Invocation.method(
          #defaultEmojis,
          [],
          {#limit: limit},
        ),
        returnValue: <_i21.MisskeyEmojiData>[],
        returnValueForMissingStub: <_i21.MisskeyEmojiData>[],
      ) as List<_i21.MisskeyEmojiData>);
}

/// A class which mocks [GeneralSettingsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeneralSettingsRepository extends _i1.Mock
    implements _i22.GeneralSettingsRepository {
  @override
  _i3.GeneralSettings get settings => (super.noSuchMethod(
        Invocation.getter(#settings),
        returnValue: _FakeGeneralSettings_1(
          this,
          Invocation.getter(#settings),
        ),
        returnValueForMissingStub: _FakeGeneralSettings_1(
          this,
          Invocation.getter(#settings),
        ),
      ) as _i3.GeneralSettings);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i16.Future<void> load() => (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> update(_i3.GeneralSettings? settings) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [settings],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  void addListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AccountRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountRepository extends _i1.Mock implements _i23.AccountRepository {
  @override
  _i4.SharedPreferenceController get sharedPreferenceController =>
      (super.noSuchMethod(
        Invocation.getter(#sharedPreferenceController),
        returnValue: _FakeSharedPreferenceController_2(
          this,
          Invocation.getter(#sharedPreferenceController),
        ),
        returnValueForMissingStub: _FakeSharedPreferenceController_2(
          this,
          Invocation.getter(#sharedPreferenceController),
        ),
      ) as _i4.SharedPreferenceController);

  @override
  _i5.AutoDisposeNotifierProviderRef<List<_i7.Account>> get ref =>
      (super.noSuchMethod(
        Invocation.getter(#ref),
        returnValue: _FakeAutoDisposeNotifierProviderRef_3<List<_i7.Account>>(
          this,
          Invocation.getter(#ref),
        ),
        returnValueForMissingStub:
            _FakeAutoDisposeNotifierProviderRef_3<List<_i7.Account>>(
          this,
          Invocation.getter(#ref),
        ),
      ) as _i5.AutoDisposeNotifierProviderRef<List<_i7.Account>>);

  @override
  List<_i7.Account> get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: <_i7.Account>[],
        returnValueForMissingStub: <_i7.Account>[],
      ) as List<_i7.Account>);

  @override
  set state(List<_i7.Account>? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i7.Account> build() => (super.noSuchMethod(
        Invocation.method(
          #build,
          [],
        ),
        returnValue: <_i7.Account>[],
        returnValueForMissingStub: <_i7.Account>[],
      ) as List<_i7.Account>);

  @override
  _i16.Future<void> load() => (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> updateI(_i7.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #updateI,
          [account],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> updateMeta(_i7.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #updateMeta,
          [account],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> loadFromSourceIfNeed(_i19.Acct? acct) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadFromSourceIfNeed,
          [acct],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> createUnreadAnnouncement(
    _i7.Account? account,
    _i6.AnnouncementsResponse? announcement,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUnreadAnnouncement,
          [
            account,
            announcement,
          ],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> removeUnreadAnnouncement(_i7.Account? account) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeUnreadAnnouncement,
          [account],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> addUnreadNotification(_i7.Account? account) =>
      (super.noSuchMethod(
        Invocation.method(
          #addUnreadNotification,
          [account],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> readAllNotification(_i7.Account? account) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAllNotification,
          [account],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> remove(_i7.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [account],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> loginAsPassword(
    String? server,
    String? userId,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginAsPassword,
          [
            server,
            userId,
            password,
          ],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> loginAsToken(
    String? server,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginAsToken,
          [
            server,
            token,
          ],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> openMiAuth(String? server) => (super.noSuchMethod(
        Invocation.method(
          #openMiAuth,
          [server],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> validateMiAuth(String? server) => (super.noSuchMethod(
        Invocation.method(
          #validateMiAuth,
          [server],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> reorder(
    int? oldIndex,
    int? newIndex,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #reorder,
          [
            oldIndex,
            newIndex,
          ],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  bool updateShouldNotify(
    List<_i7.Account>? previous,
    List<_i7.Account>? next,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            previous,
            next,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [NoteRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNoteRepository extends _i1.Mock implements _i24.NoteRepository {
  @override
  _i6.Misskey get misskey => (super.noSuchMethod(
        Invocation.getter(#misskey),
        returnValue: _FakeMisskey_4(
          this,
          Invocation.getter(#misskey),
        ),
        returnValueForMissingStub: _FakeMisskey_4(
          this,
          Invocation.getter(#misskey),
        ),
      ) as _i6.Misskey);

  @override
  _i7.Account get account => (super.noSuchMethod(
        Invocation.getter(#account),
        returnValue: _FakeAccount_5(
          this,
          Invocation.getter(#account),
        ),
        returnValueForMissingStub: _FakeAccount_5(
          this,
          Invocation.getter(#account),
        ),
      ) as _i7.Account);

  @override
  List<List<String>> get softMuteWordContents => (super.noSuchMethod(
        Invocation.getter(#softMuteWordContents),
        returnValue: <List<String>>[],
        returnValueForMissingStub: <List<String>>[],
      ) as List<List<String>>);

  @override
  List<RegExp> get softMuteWordRegExps => (super.noSuchMethod(
        Invocation.getter(#softMuteWordRegExps),
        returnValue: <RegExp>[],
        returnValueForMissingStub: <RegExp>[],
      ) as List<RegExp>);

  @override
  List<List<String>> get hardMuteWordContents => (super.noSuchMethod(
        Invocation.getter(#hardMuteWordContents),
        returnValue: <List<String>>[],
        returnValueForMissingStub: <List<String>>[],
      ) as List<List<String>>);

  @override
  List<RegExp> get hardMuteWordRegExps => (super.noSuchMethod(
        Invocation.getter(#hardMuteWordRegExps),
        returnValue: <RegExp>[],
        returnValueForMissingStub: <RegExp>[],
      ) as List<RegExp>);

  @override
  Map<String, _i6.Note> get notes => (super.noSuchMethod(
        Invocation.getter(#notes),
        returnValue: <String, _i6.Note>{},
        returnValueForMissingStub: <String, _i6.Note>{},
      ) as Map<String, _i6.Note>);

  @override
  Map<String, _i24.NoteStatus> get noteStatuses => (super.noSuchMethod(
        Invocation.getter(#noteStatuses),
        returnValue: <String, _i24.NoteStatus>{},
        returnValueForMissingStub: <String, _i24.NoteStatus>{},
      ) as Map<String, _i24.NoteStatus>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void updateMute(
    List<_i6.MuteWord>? softMuteWords,
    List<_i6.MuteWord>? hardMuteWords,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateMute,
          [
            softMuteWords,
            hardMuteWords,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateNoteStatus(
    String? id,
    _i24.NoteStatus Function(_i24.NoteStatus)? statusPredicate, {
    bool? isNotify = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #updateNoteStatus,
          [
            id,
            statusPredicate,
          ],
          {#isNotify: isNotify},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerNote(_i6.Note? note) => super.noSuchMethod(
        Invocation.method(
          #registerNote,
          [note],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerAll(Iterable<_i6.Note>? notes) => super.noSuchMethod(
        Invocation.method(
          #registerAll,
          [notes],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.Future<void> refresh(String? noteId) => (super.noSuchMethod(
        Invocation.method(
          #refresh,
          [noteId],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  void delete(String? noteId) => super.noSuchMethod(
        Invocation.method(
          #delete,
          [noteId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i17.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Misskey].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskey extends _i1.Mock implements _i6.Misskey {
  @override
  String get host => (super.noSuchMethod(
        Invocation.getter(#host),
        returnValue: _i25.dummyValue<String>(
          this,
          Invocation.getter(#host),
        ),
        returnValueForMissingStub: _i25.dummyValue<String>(
          this,
          Invocation.getter(#host),
        ),
      ) as String);

  @override
  _i8.ApiService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeApiService_6(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeApiService_6(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i8.ApiService);

  @override
  set apiService(_i8.ApiService? _apiService) => super.noSuchMethod(
        Invocation.setter(
          #apiService,
          _apiService,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.StreamingService get streamingService => (super.noSuchMethod(
        Invocation.getter(#streamingService),
        returnValue: _FakeStreamingService_7(
          this,
          Invocation.getter(#streamingService),
        ),
        returnValueForMissingStub: _FakeStreamingService_7(
          this,
          Invocation.getter(#streamingService),
        ),
      ) as _i6.StreamingService);

  @override
  set streamingService(_i6.StreamingService? _streamingService) =>
      super.noSuchMethod(
        Invocation.setter(
          #streamingService,
          _streamingService,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.MisskeyNotes get notes => (super.noSuchMethod(
        Invocation.getter(#notes),
        returnValue: _FakeMisskeyNotes_8(
          this,
          Invocation.getter(#notes),
        ),
        returnValueForMissingStub: _FakeMisskeyNotes_8(
          this,
          Invocation.getter(#notes),
        ),
      ) as _i6.MisskeyNotes);

  @override
  set notes(_i6.MisskeyNotes? _notes) => super.noSuchMethod(
        Invocation.setter(
          #notes,
          _notes,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.MisskeyChannels get channels => (super.noSuchMethod(
        Invocation.getter(#channels),
        returnValue: _FakeMisskeyChannels_9(
          this,
          Invocation.getter(#channels),
        ),
        returnValueForMissingStub: _FakeMisskeyChannels_9(
          this,
          Invocation.getter(#channels),
        ),
      ) as _i6.MisskeyChannels);

  @override
  set channels(_i6.MisskeyChannels? _channels) => super.noSuchMethod(
        Invocation.setter(
          #channels,
          _channels,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.MisskeyUsers get users => (super.noSuchMethod(
        Invocation.getter(#users),
        returnValue: _FakeMisskeyUsers_10(
          this,
          Invocation.getter(#users),
        ),
        returnValueForMissingStub: _FakeMisskeyUsers_10(
          this,
          Invocation.getter(#users),
        ),
      ) as _i6.MisskeyUsers);

  @override
  set users(_i6.MisskeyUsers? _users) => super.noSuchMethod(
        Invocation.setter(
          #users,
          _users,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.MisskeyI get i => (super.noSuchMethod(
        Invocation.getter(#i),
        returnValue: _FakeMisskeyI_11(
          this,
          Invocation.getter(#i),
        ),
        returnValueForMissingStub: _FakeMisskeyI_11(
          this,
          Invocation.getter(#i),
        ),
      ) as _i6.MisskeyI);

  @override
  set i(_i6.MisskeyI? _i) => super.noSuchMethod(
        Invocation.setter(
          #i,
          _i,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.MisskeyClips get clips => (super.noSuchMethod(
        Invocation.getter(#clips),
        returnValue: _FakeMisskeyClips_12(
          this,
          Invocation.getter(#clips),
        ),
        returnValueForMissingStub: _FakeMisskeyClips_12(
          this,
          Invocation.getter(#clips),
        ),
      ) as _i6.MisskeyClips);

  @override
  set clips(_i6.MisskeyClips? _clips) => super.noSuchMethod(
        Invocation.setter(
          #clips,
          _clips,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.MisskeyAntenna get antennas => (super.noSuchMethod(
        Invocation.getter(#antennas),
        returnValue: _FakeMisskeyAntenna_13(
          this,
          Invocation.getter(#antennas),
        ),
        returnValueForMissingStub: _FakeMisskeyAntenna_13(
          this,
          Invocation.getter(#antennas),
        ),
      ) as _i6.MisskeyAntenna);

  @override
  set antennas(_i6.MisskeyAntenna? _antennas) => super.noSuchMethod(
        Invocation.setter(
          #antennas,
          _antennas,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.MisskeyDrive get drive => (super.noSuchMethod(
        Invocation.getter(#drive),
        returnValue: _FakeMisskeyDrive_14(
          this,
          Invocation.getter(#drive),
        ),
        returnValueForMissingStub: _FakeMisskeyDrive_14(
          this,
          Invocation.getter(#drive),
        ),
      ) as _i6.MisskeyDrive);

  @override
  set drive(_i6.MisskeyDrive? _drive) => super.noSuchMethod(
        Invocation.setter(
          #drive,
          _drive,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.MisskeyFollowing get following => (super.noSuchMethod(
        Invocation.getter(#following),
        returnValue: _FakeMisskeyFollowing_15(
          this,
          Invocation.getter(#following),
        ),
        returnValueForMissingStub: _FakeMisskeyFollowing_15(
          this,
          Invocation.getter(#following),
        ),
      ) as _i6.MisskeyFollowing);

  @override
  set following(_i6.MisskeyFollowing? _following) => super.noSuchMethod(
        Invocation.setter(
          #following,
          _following,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.MisskeyBlocking get blocking => (super.noSuchMethod(
        Invocation.getter(#blocking),
        returnValue: _FakeMisskeyBlocking_16(
          this,
          Invocation.getter(#blocking),
        ),
        returnValueForMissingStub: _FakeMisskeyBlocking_16(
          this,
          Invocation.getter(#blocking),
        ),
      ) as _i6.MisskeyBlocking);

  @override
  set blocking(_i6.MisskeyBlocking? _blocking) => super.noSuchMethod(
        Invocation.setter(
          #blocking,
          _blocking,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.MisskeyMute get mute => (super.noSuchMethod(
        Invocation.getter(#mute),
        returnValue: _FakeMisskeyMute_17(
          this,
          Invocation.getter(#mute),
        ),
        returnValueForMissingStub: _FakeMisskeyMute_17(
          this,
          Invocation.getter(#mute),
        ),
      ) as _i6.MisskeyMute);

  @override
  set mute(_i6.MisskeyMute? _mute) => super.noSuchMethod(
        Invocation.setter(
          #mute,
          _mute,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.MisskeyRenoteMute get renoteMute => (super.noSuchMethod(
        Invocation.getter(#renoteMute),
        returnValue: _FakeMisskeyRenoteMute_18(
          this,
          Invocation.getter(#renoteMute),
        ),
        returnValueForMissingStub: _FakeMisskeyRenoteMute_18(
          this,
          Invocation.getter(#renoteMute),
        ),
      ) as _i6.MisskeyRenoteMute);

  @override
  set renoteMute(_i6.MisskeyRenoteMute? _renoteMute) => super.noSuchMethod(
        Invocation.setter(
          #renoteMute,
          _renoteMute,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.MisskeyFederation get federation => (super.noSuchMethod(
        Invocation.getter(#federation),
        returnValue: _FakeMisskeyFederation_19(
          this,
          Invocation.getter(#federation),
        ),
        returnValueForMissingStub: _FakeMisskeyFederation_19(
          this,
          Invocation.getter(#federation),
        ),
      ) as _i6.MisskeyFederation);

  @override
  set federation(_i6.MisskeyFederation? _federation) => super.noSuchMethod(
        Invocation.setter(
          #federation,
          _federation,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.MisskeyRoles get roles => (super.noSuchMethod(
        Invocation.getter(#roles),
        returnValue: _FakeMisskeyRoles_20(
          this,
          Invocation.getter(#roles),
        ),
        returnValueForMissingStub: _FakeMisskeyRoles_20(
          this,
          Invocation.getter(#roles),
        ),
      ) as _i6.MisskeyRoles);

  @override
  set roles(_i6.MisskeyRoles? _roles) => super.noSuchMethod(
        Invocation.setter(
          #roles,
          _roles,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.MisskeyHashtags get hashtags => (super.noSuchMethod(
        Invocation.getter(#hashtags),
        returnValue: _FakeMisskeyHashtags_21(
          this,
          Invocation.getter(#hashtags),
        ),
        returnValueForMissingStub: _FakeMisskeyHashtags_21(
          this,
          Invocation.getter(#hashtags),
        ),
      ) as _i6.MisskeyHashtags);

  @override
  set hashtags(_i6.MisskeyHashtags? _hashtags) => super.noSuchMethod(
        Invocation.setter(
          #hashtags,
          _hashtags,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.MisskeyAp get ap => (super.noSuchMethod(
        Invocation.getter(#ap),
        returnValue: _FakeMisskeyAp_22(
          this,
          Invocation.getter(#ap),
        ),
        returnValueForMissingStub: _FakeMisskeyAp_22(
          this,
          Invocation.getter(#ap),
        ),
      ) as _i6.MisskeyAp);

  @override
  set ap(_i6.MisskeyAp? _ap) => super.noSuchMethod(
        Invocation.setter(
          #ap,
          _ap,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.MisskeyPages get pages => (super.noSuchMethod(
        Invocation.getter(#pages),
        returnValue: _FakeMisskeyPages_23(
          this,
          Invocation.getter(#pages),
        ),
        returnValueForMissingStub: _FakeMisskeyPages_23(
          this,
          Invocation.getter(#pages),
        ),
      ) as _i6.MisskeyPages);

  @override
  set pages(_i6.MisskeyPages? _pages) => super.noSuchMethod(
        Invocation.setter(
          #pages,
          _pages,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set flash(dynamic _flash) => super.noSuchMethod(
        Invocation.setter(
          #flash,
          _flash,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.MisskeyReversi get reversi => (super.noSuchMethod(
        Invocation.getter(#reversi),
        returnValue: _FakeMisskeyReversi_24(
          this,
          Invocation.getter(#reversi),
        ),
        returnValueForMissingStub: _FakeMisskeyReversi_24(
          this,
          Invocation.getter(#reversi),
        ),
      ) as _i6.MisskeyReversi);

  @override
  set reversi(_i6.MisskeyReversi? _reversi) => super.noSuchMethod(
        Invocation.setter(
          #reversi,
          _reversi,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.MisskeyBubbleGame get bubbleGame => (super.noSuchMethod(
        Invocation.getter(#bubbleGame),
        returnValue: _FakeMisskeyBubbleGame_25(
          this,
          Invocation.getter(#bubbleGame),
        ),
        returnValueForMissingStub: _FakeMisskeyBubbleGame_25(
          this,
          Invocation.getter(#bubbleGame),
        ),
      ) as _i6.MisskeyBubbleGame);

  @override
  set bubbleGame(_i6.MisskeyBubbleGame? _bubbleGame) => super.noSuchMethod(
        Invocation.setter(
          #bubbleGame,
          _bubbleGame,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.Future<Iterable<_i6.AnnouncementsResponse>> announcements(
          _i6.AnnouncementsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #announcements,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.AnnouncementsResponse>>.value(
            <_i6.AnnouncementsResponse>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.AnnouncementsResponse>>.value(
                <_i6.AnnouncementsResponse>[]),
      ) as _i16.Future<Iterable<_i6.AnnouncementsResponse>>);

  @override
  _i16.Future<List<String>> endpoints() => (super.noSuchMethod(
        Invocation.method(
          #endpoints,
          [],
        ),
        returnValue: _i16.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i16.Future<List<String>>.value(<String>[]),
      ) as _i16.Future<List<String>>);

  @override
  _i16.Future<_i6.EmojisResponse> emojis() => (super.noSuchMethod(
        Invocation.method(
          #emojis,
          [],
        ),
        returnValue:
            _i16.Future<_i6.EmojisResponse>.value(_FakeEmojisResponse_26(
          this,
          Invocation.method(
            #emojis,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.EmojisResponse>.value(_FakeEmojisResponse_26(
          this,
          Invocation.method(
            #emojis,
            [],
          ),
        )),
      ) as _i16.Future<_i6.EmojisResponse>);

  @override
  _i16.Future<_i6.EmojiResponse> emoji(_i6.EmojiRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #emoji,
          [request],
        ),
        returnValue: _i16.Future<_i6.EmojiResponse>.value(_FakeEmojiResponse_27(
          this,
          Invocation.method(
            #emoji,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.EmojiResponse>.value(_FakeEmojiResponse_27(
          this,
          Invocation.method(
            #emoji,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.EmojiResponse>);

  @override
  _i16.Future<_i6.MetaResponse> meta() => (super.noSuchMethod(
        Invocation.method(
          #meta,
          [],
        ),
        returnValue: _i16.Future<_i6.MetaResponse>.value(_FakeMetaResponse_28(
          this,
          Invocation.method(
            #meta,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.MetaResponse>.value(_FakeMetaResponse_28(
          this,
          Invocation.method(
            #meta,
            [],
          ),
        )),
      ) as _i16.Future<_i6.MetaResponse>);

  @override
  _i16.Future<dynamic> stats() => (super.noSuchMethod(
        Invocation.method(
          #stats,
          [],
        ),
        returnValue: _i16.Future<dynamic>.value(),
        returnValueForMissingStub: _i16.Future<dynamic>.value(),
      ) as _i16.Future<dynamic>);

  @override
  _i16.Future<dynamic> ping() => (super.noSuchMethod(
        Invocation.method(
          #ping,
          [],
        ),
        returnValue: _i16.Future<dynamic>.value(),
        returnValueForMissingStub: _i16.Future<dynamic>.value(),
      ) as _i16.Future<dynamic>);

  @override
  _i16.Future<_i6.ServerInfoResponse> serverInfo() => (super.noSuchMethod(
        Invocation.method(
          #serverInfo,
          [],
        ),
        returnValue: _i16.Future<_i6.ServerInfoResponse>.value(
            _FakeServerInfoResponse_29(
          this,
          Invocation.method(
            #serverInfo,
            [],
          ),
        )),
        returnValueForMissingStub: _i16.Future<_i6.ServerInfoResponse>.value(
            _FakeServerInfoResponse_29(
          this,
          Invocation.method(
            #serverInfo,
            [],
          ),
        )),
      ) as _i16.Future<_i6.ServerInfoResponse>);

  @override
  _i16.Future<_i6.GetOnlineUsersCountResponse> getOnlineUsersCount() =>
      (super.noSuchMethod(
        Invocation.method(
          #getOnlineUsersCount,
          [],
        ),
        returnValue: _i16.Future<_i6.GetOnlineUsersCountResponse>.value(
            _FakeGetOnlineUsersCountResponse_30(
          this,
          Invocation.method(
            #getOnlineUsersCount,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.GetOnlineUsersCountResponse>.value(
                _FakeGetOnlineUsersCountResponse_30(
          this,
          Invocation.method(
            #getOnlineUsersCount,
            [],
          ),
        )),
      ) as _i16.Future<_i6.GetOnlineUsersCountResponse>);

  @override
  _i16.Future<Iterable<_i6.GetAvatarDecorationsResponse>>
      getAvatarDecorations() => (super.noSuchMethod(
            Invocation.method(
              #getAvatarDecorations,
              [],
            ),
            returnValue:
                _i16.Future<Iterable<_i6.GetAvatarDecorationsResponse>>.value(
                    <_i6.GetAvatarDecorationsResponse>[]),
            returnValueForMissingStub:
                _i16.Future<Iterable<_i6.GetAvatarDecorationsResponse>>.value(
                    <_i6.GetAvatarDecorationsResponse>[]),
          ) as _i16.Future<Iterable<_i6.GetAvatarDecorationsResponse>>);

  @override
  _i16.Future<Iterable<_i6.UserDetailed>> pinnedUsers() => (super.noSuchMethod(
        Invocation.method(
          #pinnedUsers,
          [],
        ),
        returnValue:
            _i16.Future<Iterable<_i6.UserDetailed>>.value(<_i6.UserDetailed>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.UserDetailed>>.value(<_i6.UserDetailed>[]),
      ) as _i16.Future<Iterable<_i6.UserDetailed>>);

  @override
  _i6.SocketController homeTimelineStream({
    required _i6.HomeTimelineParameter? parameter,
    _i16.FutureOr<void> Function(_i6.Note)? onNoteReceived,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineReacted,
    )? onReacted,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineReacted,
    )? onUnreacted,
    _i16.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineVoted,
    )? onVoted,
    _i16.FutureOr<void> Function(
      String,
      _i6.NoteEdited,
    )? onUpdated,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #homeTimelineStream,
          [],
          {
            #parameter: parameter,
            #onNoteReceived: onNoteReceived,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
            #onUpdated: onUpdated,
          },
        ),
        returnValue: _FakeSocketController_31(
          this,
          Invocation.method(
            #homeTimelineStream,
            [],
            {
              #parameter: parameter,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_31(
          this,
          Invocation.method(
            #homeTimelineStream,
            [],
            {
              #parameter: parameter,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
      ) as _i6.SocketController);

  @override
  _i6.SocketController localTimelineStream({
    required _i6.LocalTimelineParameter? parameter,
    _i16.FutureOr<void> Function(_i6.Note)? onNoteReceived,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineReacted,
    )? onReacted,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineReacted,
    )? onUnreacted,
    _i16.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineVoted,
    )? onVoted,
    _i16.FutureOr<void> Function(
      String,
      _i6.NoteEdited,
    )? onUpdated,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #localTimelineStream,
          [],
          {
            #parameter: parameter,
            #onNoteReceived: onNoteReceived,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
            #onUpdated: onUpdated,
          },
        ),
        returnValue: _FakeSocketController_31(
          this,
          Invocation.method(
            #localTimelineStream,
            [],
            {
              #parameter: parameter,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_31(
          this,
          Invocation.method(
            #localTimelineStream,
            [],
            {
              #parameter: parameter,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
      ) as _i6.SocketController);

  @override
  _i6.SocketController globalTimelineStream({
    required _i6.GlobalTimelineParameter? parameter,
    _i16.FutureOr<void> Function(_i6.Note)? onNoteReceived,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineReacted,
    )? onReacted,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineReacted,
    )? onUnreacted,
    _i16.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineVoted,
    )? onVoted,
    _i16.FutureOr<void> Function(
      String,
      _i6.NoteEdited,
    )? onUpdated,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #globalTimelineStream,
          [],
          {
            #parameter: parameter,
            #onNoteReceived: onNoteReceived,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
            #onUpdated: onUpdated,
          },
        ),
        returnValue: _FakeSocketController_31(
          this,
          Invocation.method(
            #globalTimelineStream,
            [],
            {
              #parameter: parameter,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_31(
          this,
          Invocation.method(
            #globalTimelineStream,
            [],
            {
              #parameter: parameter,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
      ) as _i6.SocketController);

  @override
  _i6.SocketController hybridTimelineStream({
    required _i6.HybridTimelineParameter? parameter,
    _i16.FutureOr<void> Function(_i6.Note)? onNoteReceived,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineReacted,
    )? onReacted,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineReacted,
    )? onUnreacted,
    _i16.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineVoted,
    )? onVoted,
    _i16.FutureOr<void> Function(
      String,
      _i6.NoteEdited,
    )? onUpdated,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #hybridTimelineStream,
          [],
          {
            #parameter: parameter,
            #onNoteReceived: onNoteReceived,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
            #onUpdated: onUpdated,
          },
        ),
        returnValue: _FakeSocketController_31(
          this,
          Invocation.method(
            #hybridTimelineStream,
            [],
            {
              #parameter: parameter,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_31(
          this,
          Invocation.method(
            #hybridTimelineStream,
            [],
            {
              #parameter: parameter,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
      ) as _i6.SocketController);

  @override
  _i6.SocketController roleTimelineStream({
    required String? roleId,
    _i16.FutureOr<void> Function(_i6.Note)? onNoteReceived,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineReacted,
    )? onReacted,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineReacted,
    )? onUnreacted,
    _i16.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineVoted,
    )? onVoted,
    _i16.FutureOr<void> Function(
      String,
      _i6.NoteEdited,
    )? onUpdated,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #roleTimelineStream,
          [],
          {
            #roleId: roleId,
            #onNoteReceived: onNoteReceived,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
            #onUpdated: onUpdated,
          },
        ),
        returnValue: _FakeSocketController_31(
          this,
          Invocation.method(
            #roleTimelineStream,
            [],
            {
              #roleId: roleId,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_31(
          this,
          Invocation.method(
            #roleTimelineStream,
            [],
            {
              #roleId: roleId,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
      ) as _i6.SocketController);

  @override
  _i6.SocketController channelStream({
    required String? channelId,
    _i16.FutureOr<void> Function(_i6.Note)? onNoteReceived,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineReacted,
    )? onReacted,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineReacted,
    )? onUnreacted,
    _i16.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineVoted,
    )? onVoted,
    _i16.FutureOr<void> Function(
      String,
      _i6.NoteEdited,
    )? onUpdated,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #channelStream,
          [],
          {
            #channelId: channelId,
            #onNoteReceived: onNoteReceived,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
            #onUpdated: onUpdated,
          },
        ),
        returnValue: _FakeSocketController_31(
          this,
          Invocation.method(
            #channelStream,
            [],
            {
              #channelId: channelId,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_31(
          this,
          Invocation.method(
            #channelStream,
            [],
            {
              #channelId: channelId,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
      ) as _i6.SocketController);

  @override
  _i6.SocketController userListStream({
    required String? listId,
    _i16.FutureOr<void> Function(_i6.Note)? onNoteReceived,
    _i16.FutureOr<void> Function(_i6.UserLite)? onUserAdded,
    _i16.FutureOr<void> Function(_i6.UserLite)? onUserRemoved,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineReacted,
    )? onReacted,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineReacted,
    )? onUnreacted,
    _i16.FutureOr<void> Function(
      String,
      _i6.NoteEdited,
    )? onUpdated,
    _i16.FutureOr<void> Function(DateTime)? onDeleted,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineVoted,
    )? onVoted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #userListStream,
          [],
          {
            #listId: listId,
            #onNoteReceived: onNoteReceived,
            #onUserAdded: onUserAdded,
            #onUserRemoved: onUserRemoved,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onUpdated: onUpdated,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
          },
        ),
        returnValue: _FakeSocketController_31(
          this,
          Invocation.method(
            #userListStream,
            [],
            {
              #listId: listId,
              #onNoteReceived: onNoteReceived,
              #onUserAdded: onUserAdded,
              #onUserRemoved: onUserRemoved,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onUpdated: onUpdated,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_31(
          this,
          Invocation.method(
            #userListStream,
            [],
            {
              #listId: listId,
              #onNoteReceived: onNoteReceived,
              #onUserAdded: onUserAdded,
              #onUserRemoved: onUserRemoved,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onUpdated: onUpdated,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
      ) as _i6.SocketController);

  @override
  _i6.SocketController antennaStream({
    required String? antennaId,
    _i16.FutureOr<void> Function(_i6.Note)? onNoteReceived,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineReacted,
    )? onReacted,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineReacted,
    )? onUnreacted,
    _i16.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i16.FutureOr<void> Function(
      String,
      _i6.TimelineVoted,
    )? onVoted,
    _i16.FutureOr<void> Function(
      String,
      _i6.NoteEdited,
    )? onUpdated,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #antennaStream,
          [],
          {
            #antennaId: antennaId,
            #onNoteReceived: onNoteReceived,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
            #onUpdated: onUpdated,
          },
        ),
        returnValue: _FakeSocketController_31(
          this,
          Invocation.method(
            #antennaStream,
            [],
            {
              #antennaId: antennaId,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_31(
          this,
          Invocation.method(
            #antennaStream,
            [],
            {
              #antennaId: antennaId,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
      ) as _i6.SocketController);

  @override
  _i6.SocketController serverStatsLogStream(
    _i16.FutureOr<void> Function(List<_i6.StatsLogResponse>)? onLogReceived,
    _i16.FutureOr<void> Function(_i6.StatsLogResponse)? onEventReceived,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #serverStatsLogStream,
          [
            onLogReceived,
            onEventReceived,
          ],
        ),
        returnValue: _FakeSocketController_31(
          this,
          Invocation.method(
            #serverStatsLogStream,
            [
              onLogReceived,
              onEventReceived,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_31(
          this,
          Invocation.method(
            #serverStatsLogStream,
            [
              onLogReceived,
              onEventReceived,
            ],
          ),
        ),
      ) as _i6.SocketController);

  @override
  _i6.SocketController queueStatsLogStream(
    _i16.FutureOr<void> Function(List<_i6.QueueStatsLogResponse>)?
        onLogReceived,
    _i16.FutureOr<void> Function(_i6.QueueStatsLogResponse)? onEventReceived,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #queueStatsLogStream,
          [
            onLogReceived,
            onEventReceived,
          ],
        ),
        returnValue: _FakeSocketController_31(
          this,
          Invocation.method(
            #queueStatsLogStream,
            [
              onLogReceived,
              onEventReceived,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_31(
          this,
          Invocation.method(
            #queueStatsLogStream,
            [
              onLogReceived,
              onEventReceived,
            ],
          ),
        ),
      ) as _i6.SocketController);

  @override
  _i6.SocketController mainStream({
    _i16.FutureOr<void> Function(_i6.Emoji)? onEmojiAdded,
    _i16.FutureOr<void> Function(Iterable<_i6.Emoji>)? onEmojiUpdated,
    _i16.FutureOr<void> Function(Iterable<_i6.Emoji>)? onEmojiDeleted,
    _i16.FutureOr<void> Function(_i6.AnnouncementsResponse)?
        onAnnouncementCreated,
    _i16.FutureOr<void> Function(_i6.INotificationsResponse)? onNotification,
    _i16.FutureOr<void> Function(_i6.Note)? onMention,
    _i16.FutureOr<void> Function(_i6.Note)? onReply,
    _i16.FutureOr<void> Function(_i6.Note)? onRenote,
    _i16.FutureOr<void> Function(_i6.UserDetailedNotMe)? onFollow,
    _i16.FutureOr<void> Function(_i6.UserLite)? onFollowed,
    _i16.FutureOr<void> Function(_i6.UserDetailedNotMe)? onUnfollow,
    _i16.FutureOr<void> Function(_i6.MeDetailed)? onMeUpdated,
    _i16.FutureOr<void> Function()? onReadAllNotifications,
    _i16.FutureOr<void> Function(_i6.INotificationsResponse)?
        onUnreadNotification,
    _i16.FutureOr<void> Function(String)? onUnreadMention,
    _i16.FutureOr<void> Function()? onReadAllUnreadMentions,
    _i16.FutureOr<void> Function(String)? onUnreadSpecifiedNote,
    _i16.FutureOr<void> Function()? onReadAllUnreadSpecifiedNotes,
    _i16.FutureOr<void> Function(_i6.UserLite)? onReceiveFollowRequest,
    _i16.FutureOr<void> Function()? onReadAllAnnouncements,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #mainStream,
          [],
          {
            #onEmojiAdded: onEmojiAdded,
            #onEmojiUpdated: onEmojiUpdated,
            #onEmojiDeleted: onEmojiDeleted,
            #onAnnouncementCreated: onAnnouncementCreated,
            #onNotification: onNotification,
            #onMention: onMention,
            #onReply: onReply,
            #onRenote: onRenote,
            #onFollow: onFollow,
            #onFollowed: onFollowed,
            #onUnfollow: onUnfollow,
            #onMeUpdated: onMeUpdated,
            #onReadAllNotifications: onReadAllNotifications,
            #onUnreadNotification: onUnreadNotification,
            #onUnreadMention: onUnreadMention,
            #onReadAllUnreadMentions: onReadAllUnreadMentions,
            #onUnreadSpecifiedNote: onUnreadSpecifiedNote,
            #onReadAllUnreadSpecifiedNotes: onReadAllUnreadSpecifiedNotes,
            #onReceiveFollowRequest: onReceiveFollowRequest,
            #onReadAllAnnouncements: onReadAllAnnouncements,
          },
        ),
        returnValue: _FakeSocketController_31(
          this,
          Invocation.method(
            #mainStream,
            [],
            {
              #onEmojiAdded: onEmojiAdded,
              #onEmojiUpdated: onEmojiUpdated,
              #onEmojiDeleted: onEmojiDeleted,
              #onAnnouncementCreated: onAnnouncementCreated,
              #onNotification: onNotification,
              #onMention: onMention,
              #onReply: onReply,
              #onRenote: onRenote,
              #onFollow: onFollow,
              #onFollowed: onFollowed,
              #onUnfollow: onUnfollow,
              #onMeUpdated: onMeUpdated,
              #onReadAllNotifications: onReadAllNotifications,
              #onUnreadNotification: onUnreadNotification,
              #onUnreadMention: onUnreadMention,
              #onReadAllUnreadMentions: onReadAllUnreadMentions,
              #onUnreadSpecifiedNote: onUnreadSpecifiedNote,
              #onReadAllUnreadSpecifiedNotes: onReadAllUnreadSpecifiedNotes,
              #onReceiveFollowRequest: onReceiveFollowRequest,
              #onReadAllAnnouncements: onReadAllAnnouncements,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_31(
          this,
          Invocation.method(
            #mainStream,
            [],
            {
              #onEmojiAdded: onEmojiAdded,
              #onEmojiUpdated: onEmojiUpdated,
              #onEmojiDeleted: onEmojiDeleted,
              #onAnnouncementCreated: onAnnouncementCreated,
              #onNotification: onNotification,
              #onMention: onMention,
              #onReply: onReply,
              #onRenote: onRenote,
              #onFollow: onFollow,
              #onFollowed: onFollowed,
              #onUnfollow: onUnfollow,
              #onMeUpdated: onMeUpdated,
              #onReadAllNotifications: onReadAllNotifications,
              #onUnreadNotification: onUnreadNotification,
              #onUnreadMention: onUnreadMention,
              #onReadAllUnreadMentions: onReadAllUnreadMentions,
              #onUnreadSpecifiedNote: onUnreadSpecifiedNote,
              #onReadAllUnreadSpecifiedNotes: onReadAllUnreadSpecifiedNotes,
              #onReceiveFollowRequest: onReceiveFollowRequest,
              #onReadAllAnnouncements: onReadAllAnnouncements,
            },
          ),
        ),
      ) as _i6.SocketController);

  @override
  _i16.Future<void> startStreaming() => (super.noSuchMethod(
        Invocation.method(
          #startStreaming,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);
}

/// A class which mocks [MisskeyAntenna].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyAntenna extends _i1.Mock implements _i6.MisskeyAntenna {
  @override
  _i16.Future<_i6.Antenna> create(_i6.AntennasCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i16.Future<_i6.Antenna>.value(_FakeAntenna_32(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.Antenna>.value(_FakeAntenna_32(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.Antenna>);

  @override
  _i16.Future<void> delete(_i6.AntennasDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<Iterable<_i6.Antenna>> list() => (super.noSuchMethod(
        Invocation.method(
          #list,
          [],
        ),
        returnValue: _i16.Future<Iterable<_i6.Antenna>>.value(<_i6.Antenna>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Antenna>>.value(<_i6.Antenna>[]),
      ) as _i16.Future<Iterable<_i6.Antenna>>);

  @override
  _i16.Future<Iterable<_i6.Note>> notes(_i6.AntennasNotesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #notes,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);

  @override
  _i16.Future<_i6.Antenna> show(_i6.AntennasShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue: _i16.Future<_i6.Antenna>.value(_FakeAntenna_32(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.Antenna>.value(_FakeAntenna_32(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.Antenna>);

  @override
  _i16.Future<void> update(_i6.AntennasUpdateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);
}

/// A class which mocks [MisskeyAp].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyAp extends _i1.Mock implements _i6.MisskeyAp {
  @override
  _i16.Future<_i6.ApShowResponse> show(_i6.ApShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue:
            _i16.Future<_i6.ApShowResponse>.value(_FakeApShowResponse_33(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.ApShowResponse>.value(_FakeApShowResponse_33(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.ApShowResponse>);
}

/// A class which mocks [MisskeyBlocking].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyBlocking extends _i1.Mock implements _i6.MisskeyBlocking {
  @override
  _i16.Future<void> create(_i6.BlockCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> delete(_i6.BlockDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<Iterable<_i6.Blocking>> list(_i6.BlockingListRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [request],
        ),
        returnValue:
            _i16.Future<Iterable<_i6.Blocking>>.value(<_i6.Blocking>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Blocking>>.value(<_i6.Blocking>[]),
      ) as _i16.Future<Iterable<_i6.Blocking>>);
}

/// A class which mocks [MisskeyChannels].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyChannels extends _i1.Mock implements _i6.MisskeyChannels {
  @override
  _i16.Future<Iterable<_i6.Note>> timeline(
          _i6.ChannelsTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #timeline,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);

  @override
  _i16.Future<_i6.CommunityChannel> show(_i6.ChannelsShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue:
            _i16.Future<_i6.CommunityChannel>.value(_FakeCommunityChannel_34(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.CommunityChannel>.value(_FakeCommunityChannel_34(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.CommunityChannel>);

  @override
  _i16.Future<Iterable<_i6.CommunityChannel>> followed(
          _i6.ChannelsFollowedRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #followed,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.CommunityChannel>>.value(
            <_i6.CommunityChannel>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.CommunityChannel>>.value(
                <_i6.CommunityChannel>[]),
      ) as _i16.Future<Iterable<_i6.CommunityChannel>>);

  @override
  _i16.Future<Iterable<_i6.CommunityChannel>> myFavorite(
          _i6.ChannelsMyFavoriteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #myFavorite,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.CommunityChannel>>.value(
            <_i6.CommunityChannel>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.CommunityChannel>>.value(
                <_i6.CommunityChannel>[]),
      ) as _i16.Future<Iterable<_i6.CommunityChannel>>);

  @override
  _i16.Future<Iterable<_i6.CommunityChannel>> featured() => (super.noSuchMethod(
        Invocation.method(
          #featured,
          [],
        ),
        returnValue: _i16.Future<Iterable<_i6.CommunityChannel>>.value(
            <_i6.CommunityChannel>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.CommunityChannel>>.value(
                <_i6.CommunityChannel>[]),
      ) as _i16.Future<Iterable<_i6.CommunityChannel>>);

  @override
  _i16.Future<Iterable<_i6.CommunityChannel>> owned(
          _i6.ChannelsOwnedRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #owned,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.CommunityChannel>>.value(
            <_i6.CommunityChannel>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.CommunityChannel>>.value(
                <_i6.CommunityChannel>[]),
      ) as _i16.Future<Iterable<_i6.CommunityChannel>>);

  @override
  _i16.Future<Iterable<_i6.CommunityChannel>> search(
          _i6.ChannelsSearchRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.CommunityChannel>>.value(
            <_i6.CommunityChannel>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.CommunityChannel>>.value(
                <_i6.CommunityChannel>[]),
      ) as _i16.Future<Iterable<_i6.CommunityChannel>>);

  @override
  _i16.Future<_i6.CommunityChannel> create(
          _i6.ChannelsCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue:
            _i16.Future<_i6.CommunityChannel>.value(_FakeCommunityChannel_34(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.CommunityChannel>.value(_FakeCommunityChannel_34(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.CommunityChannel>);

  @override
  _i16.Future<void> update(_i6.ChannelsUpdateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> favorite(_i6.ChannelsFavoriteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #favorite,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> unfavorite(_i6.ChannelsUnfavoriteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #unfavorite,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> follow(_i6.ChannelsFollowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #follow,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> unfollow(_i6.ChannelsUnfollowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #unfollow,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);
}

/// A class which mocks [MisskeyClips].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyClips extends _i1.Mock implements _i6.MisskeyClips {
  @override
  _i16.Future<Iterable<_i6.Clip>> list() => (super.noSuchMethod(
        Invocation.method(
          #list,
          [],
        ),
        returnValue: _i16.Future<Iterable<_i6.Clip>>.value(<_i6.Clip>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Clip>>.value(<_i6.Clip>[]),
      ) as _i16.Future<Iterable<_i6.Clip>>);

  @override
  _i16.Future<Iterable<_i6.Clip>> myFavorites() => (super.noSuchMethod(
        Invocation.method(
          #myFavorites,
          [],
        ),
        returnValue: _i16.Future<Iterable<_i6.Clip>>.value(<_i6.Clip>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Clip>>.value(<_i6.Clip>[]),
      ) as _i16.Future<Iterable<_i6.Clip>>);

  @override
  _i16.Future<Iterable<_i6.Note>> notes(_i6.ClipsNotesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #notes,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);

  @override
  _i16.Future<void> addNote(_i6.ClipsAddNoteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNote,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> removeNote(_i6.ClipsRemoveNoteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeNote,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<_i6.Clip> create(_i6.ClipsCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i16.Future<_i6.Clip>.value(_FakeClip_35(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
        returnValueForMissingStub: _i16.Future<_i6.Clip>.value(_FakeClip_35(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.Clip>);

  @override
  _i16.Future<void> delete(_i6.ClipsDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<_i6.Clip> update(_i6.ClipsUpdateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [request],
        ),
        returnValue: _i16.Future<_i6.Clip>.value(_FakeClip_35(
          this,
          Invocation.method(
            #update,
            [request],
          ),
        )),
        returnValueForMissingStub: _i16.Future<_i6.Clip>.value(_FakeClip_35(
          this,
          Invocation.method(
            #update,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.Clip>);

  @override
  _i16.Future<_i6.Clip> show(_i6.ClipsShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue: _i16.Future<_i6.Clip>.value(_FakeClip_35(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub: _i16.Future<_i6.Clip>.value(_FakeClip_35(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.Clip>);

  @override
  _i16.Future<void> favorite(_i6.ClipsFavoriteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #favorite,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> unfavorite(_i6.ClipsUnfavoriteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #unfavorite,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);
}

/// A class which mocks [MisskeyDrive].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyDrive extends _i1.Mock implements _i6.MisskeyDrive {
  @override
  _i6.MisskeyDriveFiles get files => (super.noSuchMethod(
        Invocation.getter(#files),
        returnValue: _FakeMisskeyDriveFiles_36(
          this,
          Invocation.getter(#files),
        ),
        returnValueForMissingStub: _FakeMisskeyDriveFiles_36(
          this,
          Invocation.getter(#files),
        ),
      ) as _i6.MisskeyDriveFiles);

  @override
  _i6.MisskeyDriveFolders get folders => (super.noSuchMethod(
        Invocation.getter(#folders),
        returnValue: _FakeMisskeyDriveFolders_37(
          this,
          Invocation.getter(#folders),
        ),
        returnValueForMissingStub: _FakeMisskeyDriveFolders_37(
          this,
          Invocation.getter(#folders),
        ),
      ) as _i6.MisskeyDriveFolders);

  @override
  _i16.Future<Iterable<_i6.DriveFile>> stream(
          _i6.DriveStreamRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #stream,
          [request],
        ),
        returnValue:
            _i16.Future<Iterable<_i6.DriveFile>>.value(<_i6.DriveFile>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.DriveFile>>.value(<_i6.DriveFile>[]),
      ) as _i16.Future<Iterable<_i6.DriveFile>>);
}

/// A class which mocks [MisskeyDriveFolders].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyDriveFolders extends _i1.Mock
    implements _i6.MisskeyDriveFolders {
  @override
  _i16.Future<Iterable<_i6.DriveFolder>> folders(
          _i6.DriveFoldersRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #folders,
          [request],
        ),
        returnValue:
            _i16.Future<Iterable<_i6.DriveFolder>>.value(<_i6.DriveFolder>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.DriveFolder>>.value(<_i6.DriveFolder>[]),
      ) as _i16.Future<Iterable<_i6.DriveFolder>>);

  @override
  _i16.Future<_i6.DriveFolder> create(_i6.DriveFoldersCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i16.Future<_i6.DriveFolder>.value(_FakeDriveFolder_38(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.DriveFolder>.value(_FakeDriveFolder_38(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.DriveFolder>);

  @override
  _i16.Future<void> delete(_i6.DriveFoldersDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<Iterable<_i6.DriveFolder>> find(
          _i6.DriveFoldersFindRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #find,
          [request],
        ),
        returnValue:
            _i16.Future<Iterable<_i6.DriveFolder>>.value(<_i6.DriveFolder>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.DriveFolder>>.value(<_i6.DriveFolder>[]),
      ) as _i16.Future<Iterable<_i6.DriveFolder>>);

  @override
  _i16.Future<_i6.DriveFolder> show(_i6.DriveFoldersShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue: _i16.Future<_i6.DriveFolder>.value(_FakeDriveFolder_38(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.DriveFolder>.value(_FakeDriveFolder_38(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.DriveFolder>);

  @override
  _i16.Future<_i6.DriveFolder> update(_i6.DriveFoldersUpdateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [request],
        ),
        returnValue: _i16.Future<_i6.DriveFolder>.value(_FakeDriveFolder_38(
          this,
          Invocation.method(
            #update,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.DriveFolder>.value(_FakeDriveFolder_38(
          this,
          Invocation.method(
            #update,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.DriveFolder>);
}

/// A class which mocks [MisskeyDriveFiles].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyDriveFiles extends _i1.Mock implements _i6.MisskeyDriveFiles {
  @override
  _i16.Future<_i6.DriveFile> create(
    _i6.DriveFilesCreateRequest? request,
    _i10.File? fileContent,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [
            request,
            fileContent,
          ],
        ),
        returnValue: _i16.Future<_i6.DriveFile>.value(_FakeDriveFile_39(
          this,
          Invocation.method(
            #create,
            [
              request,
              fileContent,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.DriveFile>.value(_FakeDriveFile_39(
          this,
          Invocation.method(
            #create,
            [
              request,
              fileContent,
            ],
          ),
        )),
      ) as _i16.Future<_i6.DriveFile>);

  @override
  _i16.Future<_i6.DriveFile> createAsBinary(
    _i6.DriveFilesCreateRequest? request,
    _i26.Uint8List? fileContent,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAsBinary,
          [
            request,
            fileContent,
          ],
        ),
        returnValue: _i16.Future<_i6.DriveFile>.value(_FakeDriveFile_39(
          this,
          Invocation.method(
            #createAsBinary,
            [
              request,
              fileContent,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.DriveFile>.value(_FakeDriveFile_39(
          this,
          Invocation.method(
            #createAsBinary,
            [
              request,
              fileContent,
            ],
          ),
        )),
      ) as _i16.Future<_i6.DriveFile>);

  @override
  _i16.Future<_i6.DriveFile> update(_i6.DriveFilesUpdateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [request],
        ),
        returnValue: _i16.Future<_i6.DriveFile>.value(_FakeDriveFile_39(
          this,
          Invocation.method(
            #update,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.DriveFile>.value(_FakeDriveFile_39(
          this,
          Invocation.method(
            #update,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.DriveFile>);

  @override
  _i16.Future<void> delete(_i6.DriveFilesDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<Iterable<_i6.DriveFile>> files(_i6.DriveFilesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #files,
          [request],
        ),
        returnValue:
            _i16.Future<Iterable<_i6.DriveFile>>.value(<_i6.DriveFile>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.DriveFile>>.value(<_i6.DriveFile>[]),
      ) as _i16.Future<Iterable<_i6.DriveFile>>);

  @override
  _i16.Future<Iterable<_i6.DriveFile>> find(
          _i6.DriveFilesFindRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #find,
          [request],
        ),
        returnValue:
            _i16.Future<Iterable<_i6.DriveFile>>.value(<_i6.DriveFile>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.DriveFile>>.value(<_i6.DriveFile>[]),
      ) as _i16.Future<Iterable<_i6.DriveFile>>);

  @override
  _i16.Future<Iterable<_i6.Note>> attachedNotes(
          _i6.DriveFilesAttachedNotesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #attachedNotes,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);

  @override
  _i16.Future<bool> checkExistence(
          _i6.DriveFilesCheckExistenceRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkExistence,
          [request],
        ),
        returnValue: _i16.Future<bool>.value(false),
        returnValueForMissingStub: _i16.Future<bool>.value(false),
      ) as _i16.Future<bool>);

  @override
  _i16.Future<Iterable<_i6.DriveFile>> findByHash(
          _i6.DriveFilesFindByHashRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #findByHash,
          [request],
        ),
        returnValue:
            _i16.Future<Iterable<_i6.DriveFile>>.value(<_i6.DriveFile>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.DriveFile>>.value(<_i6.DriveFile>[]),
      ) as _i16.Future<Iterable<_i6.DriveFile>>);

  @override
  _i16.Future<_i6.DriveFile> show(_i6.DriveFilesShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue: _i16.Future<_i6.DriveFile>.value(_FakeDriveFile_39(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.DriveFile>.value(_FakeDriveFile_39(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.DriveFile>);

  @override
  _i16.Future<void> uploadFromUrl(
          _i6.DriveFilesUploadFromUrlRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadFromUrl,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);
}

/// A class which mocks [MisskeyFederation].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyFederation extends _i1.Mock implements _i6.MisskeyFederation {
  @override
  _i16.Future<_i6.FederationShowInstanceResponse> showInstance(
          _i6.FederationShowInstanceRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #showInstance,
          [request],
        ),
        returnValue: _i16.Future<_i6.FederationShowInstanceResponse>.value(
            _FakeFederationShowInstanceResponse_40(
          this,
          Invocation.method(
            #showInstance,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.FederationShowInstanceResponse>.value(
                _FakeFederationShowInstanceResponse_40(
          this,
          Invocation.method(
            #showInstance,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.FederationShowInstanceResponse>);

  @override
  _i16.Future<Iterable<_i6.UserDetailed>> users(
          _i6.FederationUsersRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #users,
          [request],
        ),
        returnValue:
            _i16.Future<Iterable<_i6.UserDetailed>>.value(<_i6.UserDetailed>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.UserDetailed>>.value(<_i6.UserDetailed>[]),
      ) as _i16.Future<Iterable<_i6.UserDetailed>>);
}

/// A class which mocks [MisskeyFollowing].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyFollowing extends _i1.Mock implements _i6.MisskeyFollowing {
  @override
  _i6.MisskeyFollowingRequests get requests => (super.noSuchMethod(
        Invocation.getter(#requests),
        returnValue: _FakeMisskeyFollowingRequests_41(
          this,
          Invocation.getter(#requests),
        ),
        returnValueForMissingStub: _FakeMisskeyFollowingRequests_41(
          this,
          Invocation.getter(#requests),
        ),
      ) as _i6.MisskeyFollowingRequests);

  @override
  _i16.Future<_i6.UserLite> create(_i6.FollowingCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i16.Future<_i6.UserLite>.value(_FakeUserLite_42(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.UserLite>.value(_FakeUserLite_42(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.UserLite>);

  @override
  _i16.Future<_i6.UserLite> delete(_i6.FollowingDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i16.Future<_i6.UserLite>.value(_FakeUserLite_42(
          this,
          Invocation.method(
            #delete,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.UserLite>.value(_FakeUserLite_42(
          this,
          Invocation.method(
            #delete,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.UserLite>);

  @override
  _i16.Future<_i6.UserLite> invalidate(
          _i6.FollowingInvalidateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #invalidate,
          [request],
        ),
        returnValue: _i16.Future<_i6.UserLite>.value(_FakeUserLite_42(
          this,
          Invocation.method(
            #invalidate,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.UserLite>.value(_FakeUserLite_42(
          this,
          Invocation.method(
            #invalidate,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.UserLite>);

  @override
  _i16.Future<_i6.UserLite> update(_i6.FollowingUpdateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [request],
        ),
        returnValue: _i16.Future<_i6.UserLite>.value(_FakeUserLite_42(
          this,
          Invocation.method(
            #update,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.UserLite>.value(_FakeUserLite_42(
          this,
          Invocation.method(
            #update,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.UserLite>);

  @override
  _i16.Future<void> updateAll(_i6.FollowingUpdateAllRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAll,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);
}

/// A class which mocks [MisskeyHashtags].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyHashtags extends _i1.Mock implements _i6.MisskeyHashtags {
  @override
  _i16.Future<Iterable<_i6.Hashtag>> list(_i6.HashtagsListRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Hashtag>>.value(<_i6.Hashtag>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Hashtag>>.value(<_i6.Hashtag>[]),
      ) as _i16.Future<Iterable<_i6.Hashtag>>);

  @override
  _i16.Future<Iterable<String>> search(_i6.HashtagsSearchRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [request],
        ),
        returnValue: _i16.Future<Iterable<String>>.value(<String>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<String>>.value(<String>[]),
      ) as _i16.Future<Iterable<String>>);

  @override
  _i16.Future<_i6.Hashtag> show(_i6.HashtagsShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue: _i16.Future<_i6.Hashtag>.value(_FakeHashtag_43(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.Hashtag>.value(_FakeHashtag_43(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.Hashtag>);

  @override
  _i16.Future<Iterable<_i6.HashtagsTrendResponse>> trend() =>
      (super.noSuchMethod(
        Invocation.method(
          #trend,
          [],
        ),
        returnValue: _i16.Future<Iterable<_i6.HashtagsTrendResponse>>.value(
            <_i6.HashtagsTrendResponse>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.HashtagsTrendResponse>>.value(
                <_i6.HashtagsTrendResponse>[]),
      ) as _i16.Future<Iterable<_i6.HashtagsTrendResponse>>);

  @override
  _i16.Future<Iterable<_i6.UserDetailed>> users(
          _i6.HashtagsUsersRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #users,
          [request],
        ),
        returnValue:
            _i16.Future<Iterable<_i6.UserDetailed>>.value(<_i6.UserDetailed>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.UserDetailed>>.value(<_i6.UserDetailed>[]),
      ) as _i16.Future<Iterable<_i6.UserDetailed>>);
}

/// A class which mocks [MisskeyI].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyI extends _i1.Mock implements _i6.MisskeyI {
  @override
  _i6.MisskeyIRegistry get registry => (super.noSuchMethod(
        Invocation.getter(#registry),
        returnValue: _FakeMisskeyIRegistry_44(
          this,
          Invocation.getter(#registry),
        ),
        returnValueForMissingStub: _FakeMisskeyIRegistry_44(
          this,
          Invocation.getter(#registry),
        ),
      ) as _i6.MisskeyIRegistry);

  @override
  _i16.Future<_i6.MeDetailed> i() => (super.noSuchMethod(
        Invocation.method(
          #i,
          [],
        ),
        returnValue: _i16.Future<_i6.MeDetailed>.value(_FakeMeDetailed_45(
          this,
          Invocation.method(
            #i,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.MeDetailed>.value(_FakeMeDetailed_45(
          this,
          Invocation.method(
            #i,
            [],
          ),
        )),
      ) as _i16.Future<_i6.MeDetailed>);

  @override
  _i16.Future<Iterable<_i6.INotificationsResponse>> notifications(
          _i6.INotificationsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #notifications,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.INotificationsResponse>>.value(
            <_i6.INotificationsResponse>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.INotificationsResponse>>.value(
                <_i6.INotificationsResponse>[]),
      ) as _i16.Future<Iterable<_i6.INotificationsResponse>>);

  @override
  _i16.Future<void> readAnnouncement(_i6.IReadAnnouncementRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAnnouncement,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<Iterable<_i6.IFavoritesResponse>> favorites(
          _i6.IFavoritesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #favorites,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.IFavoritesResponse>>.value(
            <_i6.IFavoritesResponse>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.IFavoritesResponse>>.value(
                <_i6.IFavoritesResponse>[]),
      ) as _i16.Future<Iterable<_i6.IFavoritesResponse>>);

  @override
  _i16.Future<_i6.MeDetailed> update(_i6.IUpdateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [request],
        ),
        returnValue: _i16.Future<_i6.MeDetailed>.value(_FakeMeDetailed_45(
          this,
          Invocation.method(
            #update,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.MeDetailed>.value(_FakeMeDetailed_45(
          this,
          Invocation.method(
            #update,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.MeDetailed>);
}

/// A class which mocks [MisskeyNotes].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyNotes extends _i1.Mock implements _i6.MisskeyNotes {
  @override
  _i6.MisskeyNotesReactions get reactions => (super.noSuchMethod(
        Invocation.getter(#reactions),
        returnValue: _FakeMisskeyNotesReactions_46(
          this,
          Invocation.getter(#reactions),
        ),
        returnValueForMissingStub: _FakeMisskeyNotesReactions_46(
          this,
          Invocation.getter(#reactions),
        ),
      ) as _i6.MisskeyNotesReactions);

  @override
  _i6.MisskeyNotesFavorites get favorites => (super.noSuchMethod(
        Invocation.getter(#favorites),
        returnValue: _FakeMisskeyNotesFavorites_47(
          this,
          Invocation.getter(#favorites),
        ),
        returnValueForMissingStub: _FakeMisskeyNotesFavorites_47(
          this,
          Invocation.getter(#favorites),
        ),
      ) as _i6.MisskeyNotesFavorites);

  @override
  _i6.MisskeyNotesPolls get polls => (super.noSuchMethod(
        Invocation.getter(#polls),
        returnValue: _FakeMisskeyNotesPolls_48(
          this,
          Invocation.getter(#polls),
        ),
        returnValueForMissingStub: _FakeMisskeyNotesPolls_48(
          this,
          Invocation.getter(#polls),
        ),
      ) as _i6.MisskeyNotesPolls);

  @override
  _i6.MisskeyNotesThreadMuting get threadMuting => (super.noSuchMethod(
        Invocation.getter(#threadMuting),
        returnValue: _FakeMisskeyNotesThreadMuting_49(
          this,
          Invocation.getter(#threadMuting),
        ),
        returnValueForMissingStub: _FakeMisskeyNotesThreadMuting_49(
          this,
          Invocation.getter(#threadMuting),
        ),
      ) as _i6.MisskeyNotesThreadMuting);

  @override
  _i16.Future<void> create(_i6.NotesCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> update(_i6.NotesUpdateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> delete(_i6.NotesDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<Iterable<_i6.Note>> notes(_i6.NotesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #notes,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);

  @override
  _i16.Future<_i6.Note> show(_i6.NotesShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue: _i16.Future<_i6.Note>.value(_FakeNote_50(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub: _i16.Future<_i6.Note>.value(_FakeNote_50(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.Note>);

  @override
  _i16.Future<Iterable<_i6.Note>> homeTimeline(
          _i6.NotesTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #homeTimeline,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);

  @override
  _i16.Future<Iterable<_i6.Note>> localTimeline(
          _i6.NotesLocalTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #localTimeline,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);

  @override
  _i16.Future<Iterable<_i6.Note>> hybridTimeline(
          _i6.NotesHybridTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #hybridTimeline,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);

  @override
  _i16.Future<Iterable<_i6.Note>> globalTimeline(
          _i6.NotesGlobalTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #globalTimeline,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);

  @override
  _i16.Future<Iterable<_i6.Note>> userListTimeline(
          _i6.UserListTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #userListTimeline,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);

  @override
  _i16.Future<_i6.NotesStateResponse> state(_i6.NotesStateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #state,
          [request],
        ),
        returnValue: _i16.Future<_i6.NotesStateResponse>.value(
            _FakeNotesStateResponse_51(
          this,
          Invocation.method(
            #state,
            [request],
          ),
        )),
        returnValueForMissingStub: _i16.Future<_i6.NotesStateResponse>.value(
            _FakeNotesStateResponse_51(
          this,
          Invocation.method(
            #state,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.NotesStateResponse>);

  @override
  _i16.Future<Iterable<_i6.Note>> search(_i6.NotesSearchRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);

  @override
  _i16.Future<Iterable<_i6.Note>> searchByTag(
          _i6.NotesSearchByTagRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchByTag,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);

  @override
  _i16.Future<Iterable<_i6.Note>> renotes(_i6.NotesRenoteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #renotes,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);

  @override
  _i16.Future<Iterable<_i6.Note>> replies(_i6.NotesRepliesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #replies,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);

  @override
  _i16.Future<Iterable<_i6.Note>> children(_i6.NotesChildrenRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #children,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);

  @override
  _i16.Future<Iterable<_i6.Note>> conversation(
          _i6.NotesConversationRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #conversation,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);

  @override
  _i16.Future<Iterable<_i6.Note>> featured(_i6.NotesFeaturedRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #featured,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);

  @override
  _i16.Future<Iterable<_i6.Note>> mentions(_i6.NotesMentionsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #mentions,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);

  @override
  _i16.Future<Iterable<_i6.Clip>> clips(_i6.NotesClipsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #clips,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Clip>>.value(<_i6.Clip>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Clip>>.value(<_i6.Clip>[]),
      ) as _i16.Future<Iterable<_i6.Clip>>);

  @override
  _i16.Future<void> unrenote(_i6.NotesUnrenoteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #unrenote,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<_i6.NotesTranslateResponse> translate(
          _i6.NotesTranslateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #translate,
          [request],
        ),
        returnValue: _i16.Future<_i6.NotesTranslateResponse>.value(
            _FakeNotesTranslateResponse_52(
          this,
          Invocation.method(
            #translate,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.NotesTranslateResponse>.value(
                _FakeNotesTranslateResponse_52(
          this,
          Invocation.method(
            #translate,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.NotesTranslateResponse>);
}

/// A class which mocks [MisskeyNotesFavorites].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyNotesFavorites extends _i1.Mock
    implements _i6.MisskeyNotesFavorites {
  @override
  _i16.Future<void> create(_i6.NotesFavoritesCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> delete(_i6.NotesFavoritesDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);
}

/// A class which mocks [MisskeyNotesReactions].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyNotesReactions extends _i1.Mock
    implements _i6.MisskeyNotesReactions {
  @override
  _i16.Future<void> create(_i6.NotesReactionsCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> delete(_i6.NotesReactionsDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<Iterable<_i6.NotesReactionsResponse>> reactions(
          _i6.NotesReactionsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #reactions,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.NotesReactionsResponse>>.value(
            <_i6.NotesReactionsResponse>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.NotesReactionsResponse>>.value(
                <_i6.NotesReactionsResponse>[]),
      ) as _i16.Future<Iterable<_i6.NotesReactionsResponse>>);
}

/// A class which mocks [MisskeyNotesPolls].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyNotesPolls extends _i1.Mock implements _i6.MisskeyNotesPolls {
  @override
  _i16.Future<void> vote(_i6.NotesPollsVoteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #vote,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<Iterable<_i6.Note>> recommendation(
          _i6.NotesPollsRecommendationRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #recommendation,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);
}

/// A class which mocks [MisskeyRenoteMute].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyRenoteMute extends _i1.Mock implements _i6.MisskeyRenoteMute {
  @override
  _i16.Future<void> create(_i6.RenoteMuteCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> delete(_i6.RenoteMuteDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<Iterable<_i6.RenoteMuting>> list(
          _i6.RenoteMuteListRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [request],
        ),
        returnValue:
            _i16.Future<Iterable<_i6.RenoteMuting>>.value(<_i6.RenoteMuting>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.RenoteMuting>>.value(<_i6.RenoteMuting>[]),
      ) as _i16.Future<Iterable<_i6.RenoteMuting>>);
}

/// A class which mocks [MisskeyRoles].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyRoles extends _i1.Mock implements _i6.MisskeyRoles {
  @override
  _i16.Future<Iterable<_i6.RolesListResponse>> list() => (super.noSuchMethod(
        Invocation.method(
          #list,
          [],
        ),
        returnValue: _i16.Future<Iterable<_i6.RolesListResponse>>.value(
            <_i6.RolesListResponse>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.RolesListResponse>>.value(
                <_i6.RolesListResponse>[]),
      ) as _i16.Future<Iterable<_i6.RolesListResponse>>);

  @override
  _i16.Future<Iterable<_i6.RolesUsersResponse>> users(
          _i6.RolesUsersRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #users,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.RolesUsersResponse>>.value(
            <_i6.RolesUsersResponse>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.RolesUsersResponse>>.value(
                <_i6.RolesUsersResponse>[]),
      ) as _i16.Future<Iterable<_i6.RolesUsersResponse>>);

  @override
  _i16.Future<_i6.RolesListResponse> show(_i6.RolesShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue:
            _i16.Future<_i6.RolesListResponse>.value(_FakeRolesListResponse_53(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.RolesListResponse>.value(_FakeRolesListResponse_53(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.RolesListResponse>);

  @override
  _i16.Future<Iterable<_i6.Note>> notes(_i6.RolesNotesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #notes,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);
}

/// A class which mocks [MisskeyUsers].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyUsers extends _i1.Mock implements _i6.MisskeyUsers {
  @override
  _i6.MisskeyUsersLists get list => (super.noSuchMethod(
        Invocation.getter(#list),
        returnValue: _FakeMisskeyUsersLists_54(
          this,
          Invocation.getter(#list),
        ),
        returnValueForMissingStub: _FakeMisskeyUsersLists_54(
          this,
          Invocation.getter(#list),
        ),
      ) as _i6.MisskeyUsersLists);

  @override
  _i16.Future<_i6.UserDetailed> show(_i6.UsersShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue: _i16.Future<_i6.UserDetailed>.value(_FakeUserDetailed_55(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.UserDetailed>.value(_FakeUserDetailed_55(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.UserDetailed>);

  @override
  _i16.Future<Iterable<_i6.UserDetailed>> showByIds(
          _i6.UsersShowByIdsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #showByIds,
          [request],
        ),
        returnValue:
            _i16.Future<Iterable<_i6.UserDetailed>>.value(<_i6.UserDetailed>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.UserDetailed>>.value(<_i6.UserDetailed>[]),
      ) as _i16.Future<Iterable<_i6.UserDetailed>>);

  @override
  _i16.Future<_i6.UserDetailed> showByName(
          _i6.UsersShowByUserNameRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #showByName,
          [request],
        ),
        returnValue: _i16.Future<_i6.UserDetailed>.value(_FakeUserDetailed_55(
          this,
          Invocation.method(
            #showByName,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i6.UserDetailed>.value(_FakeUserDetailed_55(
          this,
          Invocation.method(
            #showByName,
            [request],
          ),
        )),
      ) as _i16.Future<_i6.UserDetailed>);

  @override
  _i16.Future<Iterable<_i6.Note>> notes(_i6.UsersNotesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #notes,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);

  @override
  _i16.Future<Iterable<_i6.Clip>> clips(_i6.UsersClipsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #clips,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Clip>>.value(<_i6.Clip>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Clip>>.value(<_i6.Clip>[]),
      ) as _i16.Future<Iterable<_i6.Clip>>);

  @override
  _i16.Future<Iterable<_i6.Following>> followers(
          _i6.UsersFollowersRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #followers,
          [request],
        ),
        returnValue:
            _i16.Future<Iterable<_i6.Following>>.value(<_i6.Following>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Following>>.value(<_i6.Following>[]),
      ) as _i16.Future<Iterable<_i6.Following>>);

  @override
  _i16.Future<Iterable<_i6.Following>> following(
          _i6.UsersFollowingRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #following,
          [request],
        ),
        returnValue:
            _i16.Future<Iterable<_i6.Following>>.value(<_i6.Following>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Following>>.value(<_i6.Following>[]),
      ) as _i16.Future<Iterable<_i6.Following>>);

  @override
  _i16.Future<void> reportAbuse(_i6.UsersReportAbuseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #reportAbuse,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<Iterable<_i6.UsersReactionsResponse>> reactions(
          _i6.UsersReactionsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #reactions,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.UsersReactionsResponse>>.value(
            <_i6.UsersReactionsResponse>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.UsersReactionsResponse>>.value(
                <_i6.UsersReactionsResponse>[]),
      ) as _i16.Future<Iterable<_i6.UsersReactionsResponse>>);

  @override
  _i16.Future<Iterable<_i6.User>> search(_i6.UsersSearchRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.User>>.value(<_i6.User>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.User>>.value(<_i6.User>[]),
      ) as _i16.Future<Iterable<_i6.User>>);

  @override
  _i16.Future<Iterable<_i6.User>> searchByUsernameAndHost(
          _i6.UsersSearchByUsernameAndHostRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchByUsernameAndHost,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.User>>.value(<_i6.User>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.User>>.value(<_i6.User>[]),
      ) as _i16.Future<Iterable<_i6.User>>);

  @override
  _i16.Future<Iterable<_i6.UsersGetFrequentlyRepliedUsersResponse>>
      getFrequentlyRepliedUsers(
              _i6.UsersGetFrequentlyRepliedUsersRequest? request) =>
          (super.noSuchMethod(
            Invocation.method(
              #getFrequentlyRepliedUsers,
              [request],
            ),
            returnValue: _i16.Future<
                    Iterable<_i6.UsersGetFrequentlyRepliedUsersResponse>>.value(
                <_i6.UsersGetFrequentlyRepliedUsersResponse>[]),
            returnValueForMissingStub: _i16.Future<
                    Iterable<_i6.UsersGetFrequentlyRepliedUsersResponse>>.value(
                <_i6.UsersGetFrequentlyRepliedUsersResponse>[]),
          ) as _i16
              .Future<Iterable<_i6.UsersGetFrequentlyRepliedUsersResponse>>);

  @override
  _i16.Future<Iterable<_i6.User>> recommendation(
          _i6.UsersRecommendationRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #recommendation,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.User>>.value(<_i6.User>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.User>>.value(<_i6.User>[]),
      ) as _i16.Future<Iterable<_i6.User>>);

  @override
  _i16.Future<Iterable<_i6.UserDetailed>> users(
          _i6.UsersUsersRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #users,
          [request],
        ),
        returnValue:
            _i16.Future<Iterable<_i6.UserDetailed>>.value(<_i6.UserDetailed>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.UserDetailed>>.value(<_i6.UserDetailed>[]),
      ) as _i16.Future<Iterable<_i6.UserDetailed>>);

  @override
  _i16.Future<void> updateMemo(_i6.UsersUpdateMemoRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMemo,
          [request],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<Iterable<_i6.Flash>> flashs(_i6.UsersFlashsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #flashs,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Flash>>.value(<_i6.Flash>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Flash>>.value(<_i6.Flash>[]),
      ) as _i16.Future<Iterable<_i6.Flash>>);

  @override
  _i16.Future<Iterable<_i6.Note>> featuredNotes(
          _i6.UsersFeaturedNotesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #featuredNotes,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Note>>.value(<_i6.Note>[]),
      ) as _i16.Future<Iterable<_i6.Note>>);

  @override
  _i16.Future<Iterable<_i6.Page>> pages(_i6.UsersPagesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #pages,
          [request],
        ),
        returnValue: _i16.Future<Iterable<_i6.Page>>.value(<_i6.Page>[]),
        returnValueForMissingStub:
            _i16.Future<Iterable<_i6.Page>>.value(<_i6.Page>[]),
      ) as _i16.Future<Iterable<_i6.Page>>);
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i9.Dio {
  @override
  _i9.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_56(
          this,
          Invocation.getter(#options),
        ),
        returnValueForMissingStub: _FakeBaseOptions_56(
          this,
          Invocation.getter(#options),
        ),
      ) as _i9.BaseOptions);

  @override
  set options(_i9.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_57(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
        returnValueForMissingStub: _FakeHttpClientAdapter_57(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i9.HttpClientAdapter);

  @override
  set httpClientAdapter(_i9.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_58(
          this,
          Invocation.getter(#transformer),
        ),
        returnValueForMissingStub: _FakeTransformer_58(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i9.Transformer);

  @override
  set transformer(_i9.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_59(
          this,
          Invocation.getter(#interceptors),
        ),
        returnValueForMissingStub: _FakeInterceptors_59(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i9.Interceptors);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.Future<_i9.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i9.Options? options,
    _i9.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i16.Future<_i9.Response<T>>);

  @override
  _i16.Future<_i9.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i9.Options? options,
    _i9.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i16.Future<_i9.Response<T>>);

  @override
  _i16.Future<_i9.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i9.Options? options,
    _i9.CancelToken? cancelToken,
    _i9.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i16.Future<_i9.Response<T>>);

  @override
  _i16.Future<_i9.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i9.Options? options,
    _i9.CancelToken? cancelToken,
    _i9.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i16.Future<_i9.Response<T>>);

  @override
  _i16.Future<_i9.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i9.Options? options,
    _i9.CancelToken? cancelToken,
    _i9.ProgressCallback? onSendProgress,
    _i9.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i16.Future<_i9.Response<T>>);

  @override
  _i16.Future<_i9.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i9.Options? options,
    _i9.CancelToken? cancelToken,
    _i9.ProgressCallback? onSendProgress,
    _i9.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i16.Future<_i9.Response<T>>);

  @override
  _i16.Future<_i9.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i9.Options? options,
    _i9.CancelToken? cancelToken,
    _i9.ProgressCallback? onSendProgress,
    _i9.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i16.Future<_i9.Response<T>>);

  @override
  _i16.Future<_i9.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i9.Options? options,
    _i9.CancelToken? cancelToken,
    _i9.ProgressCallback? onSendProgress,
    _i9.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i16.Future<_i9.Response<T>>);

  @override
  _i16.Future<_i9.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i9.Options? options,
    _i9.CancelToken? cancelToken,
    _i9.ProgressCallback? onSendProgress,
    _i9.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i16.Future<_i9.Response<T>>);

  @override
  _i16.Future<_i9.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i9.Options? options,
    _i9.CancelToken? cancelToken,
    _i9.ProgressCallback? onSendProgress,
    _i9.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i16.Future<_i9.Response<T>>);

  @override
  _i16.Future<_i9.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i9.Options? options,
    _i9.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i16.Future<_i9.Response<T>>);

  @override
  _i16.Future<_i9.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i9.Options? options,
    _i9.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i16.Future<_i9.Response<T>>);

  @override
  _i16.Future<_i9.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i9.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i9.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i9.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i16.Future<_i9.Response<dynamic>>.value(_FakeResponse_60<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i9.Response<dynamic>>.value(_FakeResponse_60<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i16.Future<_i9.Response<dynamic>>);

  @override
  _i16.Future<_i9.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i9.ProgressCallback? onReceiveProgress,
    _i9.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i9.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i16.Future<_i9.Response<dynamic>>.value(_FakeResponse_60<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i9.Response<dynamic>>.value(_FakeResponse_60<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i16.Future<_i9.Response<dynamic>>);

  @override
  _i16.Future<_i9.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i9.CancelToken? cancelToken,
    _i9.Options? options,
    _i9.ProgressCallback? onSendProgress,
    _i9.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i16.Future<_i9.Response<T>>);

  @override
  _i16.Future<_i9.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i9.CancelToken? cancelToken,
    _i9.Options? options,
    _i9.ProgressCallback? onSendProgress,
    _i9.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i16.Future<_i9.Response<T>>);

  @override
  _i16.Future<_i9.Response<T>> fetch<T>(_i9.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i9.Response<T>>.value(_FakeResponse_60<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i16.Future<_i9.Response<T>>);
}

/// A class which mocks [HttpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i10.HttpClient {
  @override
  Duration get idleTimeout => (super.noSuchMethod(
        Invocation.getter(#idleTimeout),
        returnValue: _FakeDuration_61(
          this,
          Invocation.getter(#idleTimeout),
        ),
        returnValueForMissingStub: _FakeDuration_61(
          this,
          Invocation.getter(#idleTimeout),
        ),
      ) as Duration);

  @override
  set idleTimeout(Duration? _idleTimeout) => super.noSuchMethod(
        Invocation.setter(
          #idleTimeout,
          _idleTimeout,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set connectionTimeout(Duration? _connectionTimeout) => super.noSuchMethod(
        Invocation.setter(
          #connectionTimeout,
          _connectionTimeout,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set maxConnectionsPerHost(int? _maxConnectionsPerHost) => super.noSuchMethod(
        Invocation.setter(
          #maxConnectionsPerHost,
          _maxConnectionsPerHost,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get autoUncompress => (super.noSuchMethod(
        Invocation.getter(#autoUncompress),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set autoUncompress(bool? _autoUncompress) => super.noSuchMethod(
        Invocation.setter(
          #autoUncompress,
          _autoUncompress,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set userAgent(String? _userAgent) => super.noSuchMethod(
        Invocation.setter(
          #userAgent,
          _userAgent,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set authenticate(
          _i16.Future<bool> Function(
            Uri,
            String,
            String?,
          )? f) =>
      super.noSuchMethod(
        Invocation.setter(
          #authenticate,
          f,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set connectionFactory(
          _i16.Future<_i10.ConnectionTask<_i10.Socket>> Function(
            Uri,
            String?,
            int?,
          )? f) =>
      super.noSuchMethod(
        Invocation.setter(
          #connectionFactory,
          f,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set findProxy(String Function(Uri)? f) => super.noSuchMethod(
        Invocation.setter(
          #findProxy,
          f,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set authenticateProxy(
          _i16.Future<bool> Function(
            String,
            int,
            String,
            String?,
          )? f) =>
      super.noSuchMethod(
        Invocation.setter(
          #authenticateProxy,
          f,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set badCertificateCallback(
          bool Function(
            _i10.X509Certificate,
            String,
            int,
          )? callback) =>
      super.noSuchMethod(
        Invocation.setter(
          #badCertificateCallback,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set keyLog(dynamic Function(String)? callback) => super.noSuchMethod(
        Invocation.setter(
          #keyLog,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.Future<_i10.HttpClientRequest> open(
    String? method,
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #open,
          [
            method,
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #open,
            [
              method,
              host,
              port,
              path,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #open,
            [
              method,
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i16.Future<_i10.HttpClientRequest>);

  @override
  _i16.Future<_i10.HttpClientRequest> openUrl(
    String? method,
    Uri? url,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #openUrl,
          [
            method,
            url,
          ],
        ),
        returnValue:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #openUrl,
            [
              method,
              url,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #openUrl,
            [
              method,
              url,
            ],
          ),
        )),
      ) as _i16.Future<_i10.HttpClientRequest>);

  @override
  _i16.Future<_i10.HttpClientRequest> get(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #get,
            [
              host,
              port,
              path,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #get,
            [
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i16.Future<_i10.HttpClientRequest>);

  @override
  _i16.Future<_i10.HttpClientRequest> getUrl(Uri? url) => (super.noSuchMethod(
        Invocation.method(
          #getUrl,
          [url],
        ),
        returnValue:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #getUrl,
            [url],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #getUrl,
            [url],
          ),
        )),
      ) as _i16.Future<_i10.HttpClientRequest>);

  @override
  _i16.Future<_i10.HttpClientRequest> post(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #post,
            [
              host,
              port,
              path,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #post,
            [
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i16.Future<_i10.HttpClientRequest>);

  @override
  _i16.Future<_i10.HttpClientRequest> postUrl(Uri? url) => (super.noSuchMethod(
        Invocation.method(
          #postUrl,
          [url],
        ),
        returnValue:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #postUrl,
            [url],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #postUrl,
            [url],
          ),
        )),
      ) as _i16.Future<_i10.HttpClientRequest>);

  @override
  _i16.Future<_i10.HttpClientRequest> put(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #put,
            [
              host,
              port,
              path,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #put,
            [
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i16.Future<_i10.HttpClientRequest>);

  @override
  _i16.Future<_i10.HttpClientRequest> putUrl(Uri? url) => (super.noSuchMethod(
        Invocation.method(
          #putUrl,
          [url],
        ),
        returnValue:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #putUrl,
            [url],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #putUrl,
            [url],
          ),
        )),
      ) as _i16.Future<_i10.HttpClientRequest>);

  @override
  _i16.Future<_i10.HttpClientRequest> delete(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #delete,
            [
              host,
              port,
              path,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #delete,
            [
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i16.Future<_i10.HttpClientRequest>);

  @override
  _i16.Future<_i10.HttpClientRequest> deleteUrl(Uri? url) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUrl,
          [url],
        ),
        returnValue:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #deleteUrl,
            [url],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #deleteUrl,
            [url],
          ),
        )),
      ) as _i16.Future<_i10.HttpClientRequest>);

  @override
  _i16.Future<_i10.HttpClientRequest> patch(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #patch,
            [
              host,
              port,
              path,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #patch,
            [
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i16.Future<_i10.HttpClientRequest>);

  @override
  _i16.Future<_i10.HttpClientRequest> patchUrl(Uri? url) => (super.noSuchMethod(
        Invocation.method(
          #patchUrl,
          [url],
        ),
        returnValue:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #patchUrl,
            [url],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #patchUrl,
            [url],
          ),
        )),
      ) as _i16.Future<_i10.HttpClientRequest>);

  @override
  _i16.Future<_i10.HttpClientRequest> head(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #head,
            [
              host,
              port,
              path,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #head,
            [
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i16.Future<_i10.HttpClientRequest>);

  @override
  _i16.Future<_i10.HttpClientRequest> headUrl(Uri? url) => (super.noSuchMethod(
        Invocation.method(
          #headUrl,
          [url],
        ),
        returnValue:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #headUrl,
            [url],
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i10.HttpClientRequest>.value(_FakeHttpClientRequest_62(
          this,
          Invocation.method(
            #headUrl,
            [url],
          ),
        )),
      ) as _i16.Future<_i10.HttpClientRequest>);

  @override
  void addCredentials(
    Uri? url,
    String? realm,
    _i10.HttpClientCredentials? credentials,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addCredentials,
          [
            url,
            realm,
            credentials,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addProxyCredentials(
    String? host,
    int? port,
    String? realm,
    _i10.HttpClientCredentials? credentials,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addProxyCredentials,
          [
            host,
            port,
            realm,
            credentials,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SocketController].
///
/// See the documentation for Mockito's code generation for more information.
class MockSocketController extends _i1.Mock implements _i6.SocketController {
  @override
  _i6.StreamingService get service => (super.noSuchMethod(
        Invocation.getter(#service),
        returnValue: _FakeStreamingService_7(
          this,
          Invocation.getter(#service),
        ),
        returnValueForMissingStub: _FakeStreamingService_7(
          this,
          Invocation.getter(#service),
        ),
      ) as _i6.StreamingService);

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i25.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
        returnValueForMissingStub: _i25.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  bool get isDisconnected => (super.noSuchMethod(
        Invocation.getter(#isDisconnected),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isDisconnected(bool? _isDisconnected) => super.noSuchMethod(
        Invocation.setter(
          #isDisconnected,
          _isDisconnected,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.WebSocketChannel get webSocketChannel => (super.noSuchMethod(
        Invocation.getter(#webSocketChannel),
        returnValue: _FakeWebSocketChannel_63(
          this,
          Invocation.getter(#webSocketChannel),
        ),
        returnValueForMissingStub: _FakeWebSocketChannel_63(
          this,
          Invocation.getter(#webSocketChannel),
        ),
      ) as _i11.WebSocketChannel);

  @override
  void connect() => super.noSuchMethod(
        Invocation.method(
          #connect,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void disconnect() => super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void reconnect() => super.noSuchMethod(
        Invocation.method(
          #reconnect,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.Future<void> subNote(String? noteId) => (super.noSuchMethod(
        Invocation.method(
          #subNote,
          [noteId],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> unsubNote(String? noteId) => (super.noSuchMethod(
        Invocation.method(
          #unsubNote,
          [noteId],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> requestLog({
    String? id,
    int? length,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestLog,
          [],
          {
            #id: id,
            #length: length,
          },
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> send(
    _i6.StreamingRequestType? requestType,
    dynamic body,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [
            requestType,
            body,
          ],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);
}

/// A class which mocks [StreamingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStreamingService extends _i1.Mock implements _i6.StreamingService {
  @override
  String get host => (super.noSuchMethod(
        Invocation.getter(#host),
        returnValue: _i25.dummyValue<String>(
          this,
          Invocation.getter(#host),
        ),
        returnValueForMissingStub: _i25.dummyValue<String>(
          this,
          Invocation.getter(#host),
        ),
      ) as String);

  @override
  _i27.HashMap<String, _i6.SocketController> get streamingChannelControllers =>
      (super.noSuchMethod(
        Invocation.getter(#streamingChannelControllers),
        returnValue:
            _i25.dummyValue<_i27.HashMap<String, _i6.SocketController>>(
          this,
          Invocation.getter(#streamingChannelControllers),
        ),
        returnValueForMissingStub:
            _i25.dummyValue<_i27.HashMap<String, _i6.SocketController>>(
          this,
          Invocation.getter(#streamingChannelControllers),
        ),
      ) as _i27.HashMap<String, _i6.SocketController>);

  @override
  set subscription(_i16.StreamSubscription<dynamic>? _subscription) =>
      super.noSuchMethod(
        Invocation.setter(
          #subscription,
          _subscription,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.WebSocketChannel get webSocketChannel => (super.noSuchMethod(
        Invocation.getter(#webSocketChannel),
        returnValue: _FakeWebSocketChannel_63(
          this,
          Invocation.getter(#webSocketChannel),
        ),
        returnValueForMissingStub: _FakeWebSocketChannel_63(
          this,
          Invocation.getter(#webSocketChannel),
        ),
      ) as _i11.WebSocketChannel);

  @override
  _i16.Future<void> onChannelEventReceived(
    String? id,
    dynamic type,
    dynamic body,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onChannelEventReceived,
          [
            id,
            type,
            body,
          ],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> onNoteUpdatedEventReceived(
    String? id,
    dynamic type,
    Map<String, dynamic>? body,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onNoteUpdatedEventReceived,
          [
            id,
            type,
            body,
          ],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> onBroadcastEventReceived(
    dynamic type,
    Map<String, dynamic>? body,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onBroadcastEventReceived,
          [
            type,
            body,
          ],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> startStreaming() => (super.noSuchMethod(
        Invocation.method(
          #startStreaming,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i6.SocketController connect({
    String? id,
    required dynamic channel,
    _i16.Future<void> Function(
      dynamic,
      dynamic,
    )? onChannelEventReceived,
    _i16.Future<void> Function(
      String,
      dynamic,
      Map<String, dynamic>,
    )? onNoteUpdatedEventReceived,
    _i16.Future<void> Function(
      dynamic,
      Map<String, dynamic>,
    )? onBroadcastEventReceived,
    Map<String, dynamic>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #connect,
          [],
          {
            #id: id,
            #channel: channel,
            #onChannelEventReceived: onChannelEventReceived,
            #onNoteUpdatedEventReceived: onNoteUpdatedEventReceived,
            #onBroadcastEventReceived: onBroadcastEventReceived,
            #parameters: parameters,
          },
        ),
        returnValue: _FakeSocketController_31(
          this,
          Invocation.method(
            #connect,
            [],
            {
              #id: id,
              #channel: channel,
              #onChannelEventReceived: onChannelEventReceived,
              #onNoteUpdatedEventReceived: onNoteUpdatedEventReceived,
              #onBroadcastEventReceived: onBroadcastEventReceived,
              #parameters: parameters,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_31(
          this,
          Invocation.method(
            #connect,
            [],
            {
              #id: id,
              #channel: channel,
              #onChannelEventReceived: onChannelEventReceived,
              #onNoteUpdatedEventReceived: onNoteUpdatedEventReceived,
              #onBroadcastEventReceived: onBroadcastEventReceived,
              #parameters: parameters,
            },
          ),
        ),
      ) as _i6.SocketController);

  @override
  _i16.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> restart() => (super.noSuchMethod(
        Invocation.method(
          #restart,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);
}

/// A class which mocks [FakeFilePickerPlatform].
///
/// See the documentation for Mockito's code generation for more information.
class MockFilePickerPlatform extends _i1.Mock
    implements _i28.FakeFilePickerPlatform {
  @override
  _i16.Future<_i29.FilePickerResult?> pickFiles({
    String? dialogTitle,
    String? initialDirectory,
    _i29.FileType? type = _i29.FileType.any,
    List<String>? allowedExtensions,
    dynamic Function(_i29.FilePickerStatus)? onFileLoading,
    bool? allowCompression = true,
    int? compressionQuality = 30,
    bool? allowMultiple = false,
    bool? withData = false,
    bool? withReadStream = false,
    bool? lockParentWindow = false,
    bool? readSequential = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickFiles,
          [],
          {
            #dialogTitle: dialogTitle,
            #initialDirectory: initialDirectory,
            #type: type,
            #allowedExtensions: allowedExtensions,
            #onFileLoading: onFileLoading,
            #allowCompression: allowCompression,
            #compressionQuality: compressionQuality,
            #allowMultiple: allowMultiple,
            #withData: withData,
            #withReadStream: withReadStream,
            #lockParentWindow: lockParentWindow,
            #readSequential: readSequential,
          },
        ),
        returnValue: _i16.Future<_i29.FilePickerResult?>.value(),
        returnValueForMissingStub: _i16.Future<_i29.FilePickerResult?>.value(),
      ) as _i16.Future<_i29.FilePickerResult?>);

  @override
  _i16.Future<bool?> clearTemporaryFiles() => (super.noSuchMethod(
        Invocation.method(
          #clearTemporaryFiles,
          [],
        ),
        returnValue: _i16.Future<bool?>.value(),
        returnValueForMissingStub: _i16.Future<bool?>.value(),
      ) as _i16.Future<bool?>);

  @override
  _i16.Future<String?> getDirectoryPath({
    String? dialogTitle,
    bool? lockParentWindow = false,
    String? initialDirectory,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDirectoryPath,
          [],
          {
            #dialogTitle: dialogTitle,
            #lockParentWindow: lockParentWindow,
            #initialDirectory: initialDirectory,
          },
        ),
        returnValue: _i16.Future<String?>.value(),
        returnValueForMissingStub: _i16.Future<String?>.value(),
      ) as _i16.Future<String?>);

  @override
  _i16.Future<String?> saveFile({
    String? dialogTitle,
    String? fileName,
    String? initialDirectory,
    _i29.FileType? type = _i29.FileType.any,
    List<String>? allowedExtensions,
    _i26.Uint8List? bytes,
    bool? lockParentWindow = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFile,
          [],
          {
            #dialogTitle: dialogTitle,
            #fileName: fileName,
            #initialDirectory: initialDirectory,
            #type: type,
            #allowedExtensions: allowedExtensions,
            #bytes: bytes,
            #lockParentWindow: lockParentWindow,
          },
        ),
        returnValue: _i16.Future<String?>.value(),
        returnValueForMissingStub: _i16.Future<String?>.value(),
      ) as _i16.Future<String?>);
}

/// A class which mocks [$MockBaseCacheManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaseCacheManager extends _i1.Mock
    implements _i28.$MockBaseCacheManager {
  @override
  _i16.Future<_i12.File> getSingleFile(
    String? url, {
    String? key,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSingleFile,
          [url],
          {
            #key: key,
            #headers: headers,
          },
        ),
        returnValue: _i16.Future<_i12.File>.value(_FakeFile_64(
          this,
          Invocation.method(
            #getSingleFile,
            [url],
            {
              #key: key,
              #headers: headers,
            },
          ),
        )),
        returnValueForMissingStub: _i16.Future<_i12.File>.value(_FakeFile_64(
          this,
          Invocation.method(
            #getSingleFile,
            [url],
            {
              #key: key,
              #headers: headers,
            },
          ),
        )),
      ) as _i16.Future<_i12.File>);

  @override
  _i16.Stream<_i13.FileInfo> getFile(
    String? url, {
    String? key,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFile,
          [url],
          {
            #key: key,
            #headers: headers,
          },
        ),
        returnValue: _i16.Stream<_i13.FileInfo>.empty(),
        returnValueForMissingStub: _i16.Stream<_i13.FileInfo>.empty(),
      ) as _i16.Stream<_i13.FileInfo>);

  @override
  _i16.Stream<_i13.FileResponse> getFileStream(
    String? url, {
    String? key,
    Map<String, String>? headers,
    bool? withProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFileStream,
          [url],
          {
            #key: key,
            #headers: headers,
            #withProgress: withProgress,
          },
        ),
        returnValue: _i16.Stream<_i13.FileResponse>.empty(),
        returnValueForMissingStub: _i16.Stream<_i13.FileResponse>.empty(),
      ) as _i16.Stream<_i13.FileResponse>);

  @override
  _i16.Future<_i13.FileInfo> downloadFile(
    String? url, {
    String? key,
    Map<String, String>? authHeaders,
    bool? force = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadFile,
          [url],
          {
            #key: key,
            #authHeaders: authHeaders,
            #force: force,
          },
        ),
        returnValue: _i16.Future<_i13.FileInfo>.value(_FakeFileInfo_65(
          this,
          Invocation.method(
            #downloadFile,
            [url],
            {
              #key: key,
              #authHeaders: authHeaders,
              #force: force,
            },
          ),
        )),
        returnValueForMissingStub:
            _i16.Future<_i13.FileInfo>.value(_FakeFileInfo_65(
          this,
          Invocation.method(
            #downloadFile,
            [url],
            {
              #key: key,
              #authHeaders: authHeaders,
              #force: force,
            },
          ),
        )),
      ) as _i16.Future<_i13.FileInfo>);

  @override
  _i16.Future<_i13.FileInfo?> getFileFromCache(
    String? key, {
    bool? ignoreMemCache = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFileFromCache,
          [key],
          {#ignoreMemCache: ignoreMemCache},
        ),
        returnValue: _i16.Future<_i13.FileInfo?>.value(),
        returnValueForMissingStub: _i16.Future<_i13.FileInfo?>.value(),
      ) as _i16.Future<_i13.FileInfo?>);

  @override
  _i16.Future<_i13.FileInfo?> getFileFromMemory(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFileFromMemory,
          [key],
        ),
        returnValue: _i16.Future<_i13.FileInfo?>.value(),
        returnValueForMissingStub: _i16.Future<_i13.FileInfo?>.value(),
      ) as _i16.Future<_i13.FileInfo?>);

  @override
  _i16.Future<_i12.File> putFile(
    String? url,
    _i26.Uint8List? fileBytes, {
    String? key,
    String? eTag,
    Duration? maxAge = const Duration(days: 30),
    String? fileExtension = r'file',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putFile,
          [
            url,
            fileBytes,
          ],
          {
            #key: key,
            #eTag: eTag,
            #maxAge: maxAge,
            #fileExtension: fileExtension,
          },
        ),
        returnValue: _i16.Future<_i12.File>.value(_FakeFile_64(
          this,
          Invocation.method(
            #putFile,
            [
              url,
              fileBytes,
            ],
            {
              #key: key,
              #eTag: eTag,
              #maxAge: maxAge,
              #fileExtension: fileExtension,
            },
          ),
        )),
        returnValueForMissingStub: _i16.Future<_i12.File>.value(_FakeFile_64(
          this,
          Invocation.method(
            #putFile,
            [
              url,
              fileBytes,
            ],
            {
              #key: key,
              #eTag: eTag,
              #maxAge: maxAge,
              #fileExtension: fileExtension,
            },
          ),
        )),
      ) as _i16.Future<_i12.File>);

  @override
  _i16.Future<_i12.File> putFileStream(
    String? url,
    _i16.Stream<List<int>>? source, {
    String? key,
    String? eTag,
    Duration? maxAge = const Duration(days: 30),
    String? fileExtension = r'file',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putFileStream,
          [
            url,
            source,
          ],
          {
            #key: key,
            #eTag: eTag,
            #maxAge: maxAge,
            #fileExtension: fileExtension,
          },
        ),
        returnValue: _i16.Future<_i12.File>.value(_FakeFile_64(
          this,
          Invocation.method(
            #putFileStream,
            [
              url,
              source,
            ],
            {
              #key: key,
              #eTag: eTag,
              #maxAge: maxAge,
              #fileExtension: fileExtension,
            },
          ),
        )),
        returnValueForMissingStub: _i16.Future<_i12.File>.value(_FakeFile_64(
          this,
          Invocation.method(
            #putFileStream,
            [
              url,
              source,
            ],
            {
              #key: key,
              #eTag: eTag,
              #maxAge: maxAge,
              #fileExtension: fileExtension,
            },
          ),
        )),
      ) as _i16.Future<_i12.File>);

  @override
  _i16.Future<void> removeFile(String? key) => (super.noSuchMethod(
        Invocation.method(
          #removeFile,
          [key],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> emptyCache() => (super.noSuchMethod(
        Invocation.method(
          #emptyCache,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);
}

/// A class which mocks [$MockUrlLauncherPlatform].
///
/// See the documentation for Mockito's code generation for more information.
class MockUrlLauncherPlatform extends _i1.Mock
    implements _i28.$MockUrlLauncherPlatform {
  @override
  _i16.Future<bool> canLaunch(String? url) => (super.noSuchMethod(
        Invocation.method(
          #canLaunch,
          [url],
        ),
        returnValue: _i16.Future<bool>.value(false),
        returnValueForMissingStub: _i16.Future<bool>.value(false),
      ) as _i16.Future<bool>);

  @override
  _i16.Future<bool> launch(
    String? url, {
    required bool? useSafariVC,
    required bool? useWebView,
    required bool? enableJavaScript,
    required bool? enableDomStorage,
    required bool? universalLinksOnly,
    required Map<String, String>? headers,
    String? webOnlyWindowName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #launch,
          [url],
          {
            #useSafariVC: useSafariVC,
            #useWebView: useWebView,
            #enableJavaScript: enableJavaScript,
            #enableDomStorage: enableDomStorage,
            #universalLinksOnly: universalLinksOnly,
            #headers: headers,
            #webOnlyWindowName: webOnlyWindowName,
          },
        ),
        returnValue: _i16.Future<bool>.value(false),
        returnValueForMissingStub: _i16.Future<bool>.value(false),
      ) as _i16.Future<bool>);

  @override
  _i16.Future<bool> launchUrl(
    String? url,
    _i30.LaunchOptions? options,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #launchUrl,
          [
            url,
            options,
          ],
        ),
        returnValue: _i16.Future<bool>.value(false),
        returnValueForMissingStub: _i16.Future<bool>.value(false),
      ) as _i16.Future<bool>);

  @override
  _i16.Future<void> closeWebView() => (super.noSuchMethod(
        Invocation.method(
          #closeWebView,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<bool> supportsMode(_i30.PreferredLaunchMode? mode) =>
      (super.noSuchMethod(
        Invocation.method(
          #supportsMode,
          [mode],
        ),
        returnValue: _i16.Future<bool>.value(false),
        returnValueForMissingStub: _i16.Future<bool>.value(false),
      ) as _i16.Future<bool>);

  @override
  _i16.Future<bool> supportsCloseForMode(_i30.PreferredLaunchMode? mode) =>
      (super.noSuchMethod(
        Invocation.method(
          #supportsCloseForMode,
          [mode],
        ),
        returnValue: _i16.Future<bool>.value(false),
        returnValueForMissingStub: _i16.Future<bool>.value(false),
      ) as _i16.Future<bool>);
}
